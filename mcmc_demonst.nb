(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 8.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       157,          7]
NotebookDataLength[    427248,       7942]
NotebookOptionsPosition[    421860,       7760]
NotebookOutlinePosition[    422663,       7789]
CellTagsIndexPosition[    422576,       7784]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Markov chain Monte Carlo demonstration/documentation", "Title",
 CellChangeTimes->{{3.532828115684158*^9, 3.532828147159116*^9}, {
  3.532904699649786*^9, 3.532904702744943*^9}}],

Cell[CellGroupData[{

Cell["Load in package", "Section",
 CellChangeTimes->{{3.532828155226822*^9, 3.532828159369359*^9}, {
  3.532828558808929*^9, 3.532828560502786*^9}, {3.632970619659305*^9, 
  3.632970620578018*^9}, {3.6329709201080103`*^9, 3.632970920460225*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Get", "[", 
   RowBox[{"FileNameJoin", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"NotebookDirectory", "[", "]"}], ",", "\"\<mcmc.m\>\""}], "}"}],
     "]"}], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.532470503043046*^9, 3.532470548641507*^9}, 
   3.532474583488461*^9, {3.532476805885297*^9, 3.532476807572055*^9}, {
   3.53247800497998*^9, 3.532478024954958*^9}, {3.532478280008748*^9, 
   3.532478290841416*^9}, 3.532479089348965*^9, {3.532623520760719*^9, 
   3.532623526575855*^9}, 3.532623679316721*^9, 3.532637787357731*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Calling the routines", "Section",
 CellChangeTimes->{{3.532829995355914*^9, 3.532830051359204*^9}, {
   3.532832543321581*^9, 3.532832545647345*^9}, 3.632970625441331*^9}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"?", "MCMC"}], "\[IndentingNewLine]", 
 RowBox[{"?", "GetChisqExpr"}], "\[IndentingNewLine]", 
 RowBox[{"?", "MCMCModelFit"}]}], "Input",
 CellChangeTimes->{{3.630559572655424*^9, 3.6305595769572983`*^9}, {
  3.632970802841607*^9, 3.632970806801506*^9}, {3.633015395924361*^9, 
  3.633015398264543*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 StyleBox["\<\"MCMC[plogexpr, paramspec, numsteps]\\n\\nPerform MCMC sampling \
of the supplied probability distribution.\\n\\n1. plogexpr should be an \
expression that gives the unnormalized log\\nprobability for a particular \
choice of parameter values.\\n\\n2. paramspec either gives the results of a \
previous MCMC run (w/ same\\nplogexpr--just to add on more iterations), or \
lists the model parameters\\nlike so:\\n{{param1, ival1, spread1, domain1}, \
...}\\na) Each param should be symbolic.\\nb) ival is the initial parameter \
value.\\nc) spread is roughly how far to try to change the parameter each \
step in\\nthe Markov chain. In this routine we select new parameters values \
based\\non an exponential distribution of the form \
Exp[\[CapitalDelta]param/spread]. My\\nNumerical Recipes book advises setting \
these spreads so that the average\\ncandidate acceptance is 10-40%.\\nd) Each \
domain is either Reals or a list of all possible values the\\nparameter can \
take on (needs to be a uniform grid).\\n\\n3. numsteps is the number of \
Markov chain steps to perform.\"\>", "MSG"]], "Print", "PrintUsage",
 CellChangeTimes->{3.6330170473914137`*^9},
 CellTags->"Info3632988247-8571485"],

Cell[BoxData[
 StyleBox["\<\"GetChisqExpr[data_List, errors_List, model_, \
ivars_List]\\n\\nCompute the chi^2 statistic for the comparison between data \
and model.\\n(Not the reduced chi^2.)\\n\\n1. data must be given \
as:\\n{{ivar1, dvar1}, {ivar2, dvar2}, ..., {ivarN, dvarN}}\\nwhere ivar is \
the independent variable, dvar is the dependent variable,\\nand N is the \
number of data points. Either the ivars or dvars can be\\nvector valued; if \
the independent variable is a vector, then we're just\\ndealing with a \
function of multiple variables, and if the dependent variable\\nis, then we \
have a vector field.\\n\\n2. errors must have the same length as data (= N), \
with each entry giving\\nthe errors in the corresponding dependent variable \
supplied in data. If\\neach dvar is just a number, then so too should be each \
element of errors;\\nif instead each dvar is a vector, then each element of \
errors should also\\nbe a vector of the same length.\\n\\n3. ivars gives a \
list of symbolic independent variables, in the same\\norder as in data, on \
which model depends. If there's only one, then it\\nneed not be a list.\"\>", 
  "MSG"]], "Print", "PrintUsage",
 CellChangeTimes->{3.6330170477294893`*^9},
 CellTags->"Info3632988247-8571485"],

Cell[BoxData[
 StyleBox["\<\"MCMCModelFit[data, errors, model, paramspec, ivars, \
numsteps]\\n\\nPerform MCMC samping of the probability distribution resulting \
from\\nmodeling data with model, assuming Gaussian errors. \
Straightforward\\nwrapper around MCMC and GetChisqExpr.\\n\\n1. data must be \
given as:\\n{{ivar1, dvar1}, {ivar2, dvar2}, ..., {ivarN, dvarN}}\\nwhere \
ivar is the independent variable, dvar is the dependent variable,\\nand N is \
the number of data points. Either the ivars or dvars can be\\nvector valued; \
if the independent variable is a vector, then we're just\\ndealing with a \
function of multiple variables, and if the dependent variable\\nis, then we \
have a vector field.\\n\\n2. errors must have the same length as data (= N), \
with each entry giving\\nthe errors in the corresponding dependent variable \
supplied in data. If\\neach dvar is just a number, then so too should be each \
element of errors;\\nif instead each dvar is a vector, then each element of \
errors should also\\nbe a vector of the same length.\\n\\n3. model should \
evaluate to either a number or a numerical vector\\n(depending on dvar) when \
all parameters and independent variables are set.\\n\\n4. paramspec either \
gives the results of a previous MCMC run (w/ same\\nplogexpr--just to add on \
more iterations), or lists the model parameters\\nlike so:\\n{{param1, ival1, \
spread1, domain1}, ...}\\na) Each param should be symbolic.\\nb) ival is the \
initial parameter value.\\nc) spread is roughly how far to try to change the \
parameter each step in\\nthe Markov chain. In this routine we select new \
parameters values based\\non an exponential distribution of the form Exp[\
\[CapitalDelta]param/spread]. My\\nNumerical Recipes book advises setting \
these spreads so that the average\\ncandidate acceptance is 10-40%.\\nd) Each \
domain is either Reals or a list of all possible values the\\nparameter can \
take on (needs to be a uniform grid).\\n\\n5. ivars gives a list of symbolic \
independent variables, in the same\\norder as in data, on which model \
depends. If there's only one, then it\\nneed not be a list.\\n\\n6. numsteps \
is the number of Markov chain steps to perform.\"\>", "MSG"]], "Print", \
"PrintUsage",
 CellChangeTimes->{3.633017047968774*^9},
 CellTags->"Info3632988247-8571485"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Options", "Subsubsection",
 CellChangeTimes->{{3.532832581397773*^9, 3.532832585235145*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Options", "[", "MCMC", "]"}], "\[IndentingNewLine]", 
 RowBox[{"Options", "[", "MCMCModelFit", "]"}]}], "Input",
 CellChangeTimes->{{3.532832159482357*^9, 3.532832165328256*^9}, {
  3.6329708788632793`*^9, 3.632970883975638*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"\<\"BurnFraction\"\>", "\[Rule]", "0.1`"}], ",", 
   RowBox[{"\<\"Debug\"\>", "\[Rule]", "False"}], ",", 
   RowBox[{"\<\"ProgressMonitor\"\>", "\[Rule]", 
    TagBox[GridBox[{
       {
        TemplateBox[{
         "\"Step\"","\"/\"","\"MaxSteps\"","\"  \"",
          RowBox[{"MCMC`Private`TimeProgress", "[", 
            RowBox[{"\"TimeElapsed\"", ",", "\"DoneFraction\""}], "]"}]},
         "RowDefault"]},
       {"\<\"CurrentParameters\"\>"}
      },
      DefaultBaseStyle->"Column",
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
     
     "Column"]}], ",", 
   RowBox[{"\<\"ProgressInterval\"\>", "\[Rule]", "10"}], ",", 
   RowBox[{"\<\"SaveTo\"\>", "\[Rule]", "None"}], ",", 
   RowBox[{"\<\"SaveInterval\"\>", "\[Rule]", "1000"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.532832168229335*^9, 3.532977537246741*^9, 3.537024810753157*^9, 
   3.63297088488875*^9, 3.633015715393902*^9, 3.633016303804935*^9, {
   3.63301690756455*^9, 3.633016930759081*^9}, 3.633017048483534*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"\<\"BurnFraction\"\>", "\[Rule]", "0.1`"}], ",", 
   RowBox[{"\<\"Debug\"\>", "\[Rule]", "False"}], ",", 
   RowBox[{"\<\"ProgressMonitor\"\>", "\[Rule]", 
    TagBox[GridBox[{
       {
        TemplateBox[{
         "\"Step\"","\"/\"","\"MaxSteps\"","\"  \"",
          RowBox[{"MCMC`Private`TimeProgress", "[", 
            RowBox[{"\"TimeElapsed\"", ",", "\"DoneFraction\""}], "]"}]},
         "RowDefault"]},
       {"\<\"CurrentParameters\"\>"}
      },
      DefaultBaseStyle->"Column",
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
     
     "Column"]}], ",", 
   RowBox[{"\<\"ProgressInterval\"\>", "\[Rule]", "10"}], ",", 
   RowBox[{"\<\"SaveTo\"\>", "\[Rule]", "None"}], ",", 
   RowBox[{"\<\"SaveInterval\"\>", "\[Rule]", "1000"}], ",", 
   RowBox[{"\<\"MakeBestFitPlot\"\>", "\[Rule]", "False"}]}], "}"}]], "Output",\

 CellChangeTimes->{
  3.532832168229335*^9, 3.532977537246741*^9, 3.537024810753157*^9, 
   3.63297088488875*^9, 3.633015715393902*^9, 3.633016303804935*^9, {
   3.63301690756455*^9, 3.633016930759081*^9}, 3.633017048667323*^9}]
}, Open  ]],

Cell[TextData[{
 StyleBox["\"ProgressMonitor\"", "Input"],
 " can use any combination of the strings ",
 StyleBox["\"CurrentParameters\"", "Input"],
 ", ",
 StyleBox["\"TimeElapsed\"", "Input"],
 ", ",
 StyleBox["\"DoneFraction\"", "Input"],
 ", ",
 StyleBox["\"Step\"", "Input"],
 ", and ",
 StyleBox["\"MaxSteps\"", "Input"],
 ", which will be replaced appropriately."
}], "Text",
 CellChangeTimes->{{3.532829995355914*^9, 3.532830115535358*^9}, {
   3.53283016529025*^9, 3.532830609047937*^9}, {3.532830639105241*^9, 
   3.532830696058085*^9}, {3.532831632464258*^9, 3.532832154887697*^9}, {
   3.532832200129031*^9, 3.532832327841008*^9}, {3.532832363573201*^9, 
   3.532832477592404*^9}, 3.532832588197017*^9, {3.53288982631223*^9, 
   3.53288987900866*^9}, 3.53593219109957*^9, {3.537024819601988*^9, 
   3.537024825947921*^9}, {3.632969921619255*^9, 3.632969932105641*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["MCMC example/test: 2d Gaussian", "Section",
 CellChangeTimes->{{3.632970927818203*^9, 3.6329709830971107`*^9}, {
  3.6330160944553623`*^9, 3.633016095474854*^9}}],

Cell[CellGroupData[{

Cell["Create PDF and run MCMC", "Subsubsection",
 CellChangeTimes->{{3.6330169553817377`*^9, 3.6330169698894053`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"mu1", ",", "mu2"}], "}"}], "=", 
   RowBox[{"{", 
    RowBox[{"1", ",", 
     RowBox[{"-", "2"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"sigma1", ",", "sigma2"}], "}"}], "=", 
   RowBox[{"{", 
    RowBox[{"1.2", ",", "3.4"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"plogexpr", "=", 
  RowBox[{"Log", "[", 
   RowBox[{
    RowBox[{"PDF", "[", 
     RowBox[{
      RowBox[{"NormalDistribution", "[", 
       RowBox[{"mu1", ",", "sigma1"}], "]"}], ",", "x1"}], "]"}], 
    RowBox[{"PDF", "[", 
     RowBox[{
      RowBox[{"NormalDistribution", "[", 
       RowBox[{"mu2", ",", "sigma2"}], "]"}], ",", "x2"}], "]"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"mcmc", "=", 
  RowBox[{"MCMC", "[", 
   RowBox[{"plogexpr", ",", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"x1", ",", " ", "0", ",", " ", "2", ",", " ", "Reals"}], "}"}],
       ",", 
      RowBox[{"{", 
       RowBox[{"x2", ",", " ", "0", ",", " ", "2", ",", " ", "Reals"}], 
       "}"}]}], "}"}], ",", " ", "100000"}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.632970986759919*^9, 3.632971102438386*^9}, {
   3.633015721806772*^9, 3.633015850324541*^9}, {3.633015946566264*^9, 
   3.633016015515633*^9}, 3.6330167389536047`*^9}],

Cell[BoxData[
 RowBox[{"Log", "[", 
  RowBox[{"0.03900856448330769`", " ", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "0.34722222222222227`"}], " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "x1"}], ")"}], "2"]}], "-", 
     RowBox[{"0.043252595155709346`", " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"2", "+", "x2"}], ")"}], "2"]}]}]]}], "]"}]], "Output",
 CellChangeTimes->{
  3.6329711030862017`*^9, {3.6330157286649017`*^9, 3.633015739054632*^9}, {
   3.633015796432218*^9, 3.633015816643425*^9}, 3.6330158605514927`*^9, 
   3.633015947076047*^9, {3.633015978046576*^9, 3.633016018859786*^9}, 
   3.633016306347569*^9, 3.63301673966434*^9, 3.633016939548882*^9, 
   3.6330170529132547`*^9}],

Cell[BoxData[
 RowBox[{"\<\"MCMCResult\"\>", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x1", "\[Rule]", "1.011908166324481`"}], ",", 
     RowBox[{"x2", "\[Rule]", 
      RowBox[{"-", "2.0238356423766257`"}]}]}], "}"}], 
   ",", "\<\"\[LeftSkeleton]100000\[RightSkeleton]\"\>"}], "]"}]], "Output",
 CellChangeTimes->{
  3.6329711030862017`*^9, {3.6330157286649017`*^9, 3.633015739054632*^9}, {
   3.633015796432218*^9, 3.633015816643425*^9}, 3.6330158605514927`*^9, 
   3.633015947076047*^9, {3.633015978046576*^9, 3.633016018859786*^9}, 
   3.633016306347569*^9, 3.63301673966434*^9, 3.633016939548882*^9, 
   3.633017061068681*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Available data from MCMC", "Subsubsection",
 CellChangeTimes->{{3.532829228760613*^9, 3.532829249463151*^9}, 
   3.532890010591705*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"mcmc", "[", "\"\<Properties\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.6330158521873617`*^9, 3.6330158587310333`*^9}, {
  3.6330166098473787`*^9, 3.633016616968185*^9}, {3.6330166884464283`*^9, 
  3.6330167024748383`*^9}, {3.633017094814843*^9, 3.633017096112266*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"BestFitParameters\"\>", ",", "\<\"ParameterErrors\"\>", 
   ",", "\<\"AverageAcceptance\"\>", ",", "\<\"TimeSpent\"\>", 
   ",", "\<\"NumSteps\"\>", ",", "\<\"Parameters\"\>", 
   ",", "\<\"ProposalSpreads\"\>", ",", "\<\"ParameterDomains\"\>", 
   ",", "\<\"BurnFraction\"\>", ",", "\<\"BurnEnd\"\>", 
   ",", "\<\"CorrelationMatrix\"\>", ",", "\<\"ParameterRun\"\>", 
   ",", "\<\"ParametersLogPRun\"\>", ",", "\<\"TransitionLogPRun\"\>", 
   ",", "\<\"ParameterRunPlots\"\>", ",", "\<\"ParameterHistograms\"\>"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.633015862842101*^9, 3.63301661996528*^9, 
  3.6330167074234343`*^9, 3.6330167509369802`*^9, 3.6330169478050747`*^9, 
  3.633017061212554*^9, 3.633017096867198*^9}]
}, Open  ]],

Cell[TextData[{
 StyleBox["BestFitParameters", "Input"],
 " and ",
 StyleBox["ParameterErrors", "Input"],
 " should reproduce ",
 StyleBox["mu12", "Input"],
 " and ",
 StyleBox["sigma12", "Input"],
 " above."
}], "Text",
 CellChangeTimes->{{3.6330171020840683`*^9, 3.633017135777501*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"mcmc", "[", 
  RowBox[{"{", 
   RowBox[{
   "\"\<BestFitParameters\>\"", ",", "\"\<ParameterErrors\>\"", ",", 
    "\"\<AverageAcceptance\>\"", ",", "\"\<TimeSpent\>\"", ",", 
    "\"\<NumSteps\>\"", ",", "\"\<Parameters\>\"", ",", 
    "\"\<ProposalSpreads\>\"", ",", "\"\<ParameterDomains\>\"", ",", 
    "\"\<BurnFraction\>\"", ",", "\"\<BurnEnd\>\"", ",", 
    "\"\<CorrelationMatrix\>\"", ",", "\"\<ParameterRunPlots\>\"", ",", 
    "\"\<ParameterHistograms\>\""}], "}"}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"\<\"BestFitParameters\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"x1", "\[Rule]", "1.011908166324481`"}], ",", 
      RowBox[{"x2", "\[Rule]", 
       RowBox[{"-", "2.0238356423766257`"}]}]}], "}"}]}], ",", 
   RowBox[{"\<\"ParameterErrors\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"x1", "\[Rule]", "1.2059579326072671`"}], ",", 
      RowBox[{"x2", "\[Rule]", "3.43289073702371`"}]}], "}"}]}], ",", 
   RowBox[{"\<\"AverageAcceptance\"\>", "\[Rule]", "0.4503991072217901`"}], 
   ",", 
   RowBox[{"\<\"TimeSpent\"\>", "\[Rule]", 
    RowBox[{"7.579168`7.331166527249291", " ", "Second"}]}], ",", 
   RowBox[{"\<\"NumSteps\"\>", "\[Rule]", "100000"}], ",", 
   RowBox[{"\<\"Parameters\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"x1", ",", "x2"}], "}"}]}], ",", 
   RowBox[{"\<\"ProposalSpreads\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"2", ",", "2"}], "}"}]}], ",", 
   RowBox[{"\<\"ParameterDomains\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Reals", ",", "Reals"}], "}"}]}], ",", 
   RowBox[{"\<\"BurnFraction\"\>", "\[Rule]", "0.1`"}], ",", 
   RowBox[{"\<\"BurnEnd\"\>", "\[Rule]", "10000"}], ",", 
   RowBox[{"\<\"CorrelationMatrix\"\>", "\[Rule]", 
    TagBox[
     RowBox[{"(", "\[NoBreak]", GridBox[{
        {"1.000000000000042`", "0.016628731130701804`"},
        {"0.016628731130701804`", "1.0000000000000044`"}
       },
       GridBoxAlignment->{
        "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
         "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.7]}, 
           Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
     Function[BoxForm`e$, 
      MatrixForm[BoxForm`e$]]]}], ",", 
   RowBox[{"\<\"ParameterRunPlots\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      GraphicsBox[RasterBox[CompressedData["
1:eJztnQl/FMX29+f5PK/k/wbyDp5/M7hcr9u4XRUNbuiIihJXzHVB517RqFfv
uEYQAkhASBDCFhAiEkCCMAJhCcsgYQnCAIMO4ACj9nOmT+akUtVd07P1TCfn
fH5iT093dU1VnW+fWrrzP49MvuOR/xsIBE7CfxP/TyCQ3TbZ2NjY2NjY2NjY
2NjY2EaWpVOJRDKZGEikq50TNjY2v1h6oKc+EGhojTE32NjYcpZJJZNDTMik
M7mN1OBmKhqs70ll0rlv2NjYRrFlOhvrAqHGlpamUF2orS9lZvrCgUBdfXTX
jtaAZfXR7oyZag4G6hoikXCoobW32nlmY2OrriWa6iNxaysOaAh3mKmeYF00
aaZagoGGjuw3/Z3NHX3HosFgdwo+JSOBYE+qqllmY2OrsmUS1mBnJhGDuCPQ
2AXcCNU1Jc1kU11da99AYmAgmUxlzGQ0GLJwkW6uCzTFktXONhsbW5Wtty2S
7ZAEI9BNMdOxUDCaNjMd9YFQc1d39qu6WAowEmiJw+6++kCgY4BHOdjYRrXF
28LAjMa2WMYaEI13NAAoGpu7LiRi0UikMRxqaOlJ9naEg8FwQxhCkmBjB3dT
2NhGufVE6oIt1ghHvK2xpdfM9Dc1NCeqnSs2NrZatlS8LVhX3xSNhAKBaIxD
CTY2NneWSePyjQyPW7CxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsfnc
hr/EoXZNzae0R/+xepZJJpIZ3R79Rw8NiiyVFj/5pMDzFmBtFXjGWnCTGXop
is/yD9bb0hBuammqD7X21YSPDVqiOxQga4hnbPIp7dF/9NrSPaFgNLuIMxVr
CIZbWptCDW2D+ZD26D96aMlYS6i+qSXaEG7uydgVYG0WeCbRXV9X39LW2lDf
0JP0R4H3dTZBs25q67FpIX7IvznQAV45kL16V10gMuDZdV1YqrelPtKZyS6o
7urc8LWcTynn+o/e5To9EI/39cX7Yq3BQENPf6IzHAh3Zq/f3VjXmN3IDN9z
VPvRywqJ1wfquqx23BQIdu9TCrBGC9yMNQXDHdkLxptDoZY9PinwVFNdqMda
6psvP7WY/2R3pK6xO7uVjgUDdbX2Xpf+jsaG1uyjW2o+pT1rV+s+eve7Mr3B
QKA+Eok01MMNJRxd/FpdsMt66UVvFPypBwKpyLA9ndqPPV7l28z0twXqrADJ
elPH21++4o8ChwLtAofpTidjUOKRnoNKAdZmgWffi2K9T0mfvRrNf6yprq4p
Zm0mAIDdNcYNsK7GUHMsqeZT2vNlRPfRy9+V6IpGs9frzb4NI9VTFwjiM2fg
d0GoVmnPqzN1Hz3mRqC+J5FOxJoDgWDrW74pcMh7R0MdULquqTvjmwLPcUOf
vVrNf6qnqa6xK7tVY/EGvUg33RsNhNrOK/mUcv5dl+6jt78r09HY2B3vrg9G
rbdvBbush9t7o0HrdiDtWav96B038MU+gVBjUyTS0ZtQG0bNFng63grMiLZE
6+uj/Rm/FHgqF2/os1ej+U/HW6Bbmr1sIts/7ffmqi4s098Racnev/o7G6BR
JJR8Sjk/oP3o9e/KxCPQXQk2J810awi6n9mMWP3QbMaH7zmg/ehpxvs7oKib
8E2CasOo2QLvawkFm/tgozcSbOw+6YcCzyQHYuHA4Psb8+WnBvOftewweLQ1
Gq5v7auZaCNrme5oPc6mRLuzoz1qPqU9+o8eW9bLsm8JxuHuhta27HD3YD6k
PfqP3lq8MxoMhlu7elM+KvBET0N9Y2tbc32oMTuT44MCT/d1tQQHueEiPzWX
/9zPSGXfYFuDNvRnQCxT8ynt0X+snqWTyZR2j/6jx5Ye6B/Ay/unwDPJpLiA
wV8FrmbAd/lnY2NjY2NjYyuPBdjY2HxrVeRG3j0FnV6ug0dJTiqaOOfE48Q9
zglzw+PEaycnFU2cc+Jx4swN35lPs236Nuc+zbZZQs737T09Z3asvJlxbzXl
qpXOzJUrf+zZc4o+Gv/viwqV/ChsxtU1n2bbLCHnq1buv/uu1vJmxr3VODfK
a0ePngdW0Mf77l2wbNm+il6Rja1CVl1uqDa6uNFRQW7E42ePHTtfufTZRrMx
Nzy7tMfc+Gfj6o+imyuXPttoNuaGZ5dmbrCNGGNuiJeu6AIS5gbbiDEvuXHx
4hXNtzW47qu8xtwY5ba79xexAVTIfvpp4JOPfqj0VVau3H/XHfMqfRWw48d+
dVNozI1yGXOj1swbbixf1jfungX6Y2LbT7z26relXOXzz7bk/S2ZzJ9Xr/5R
ylVM5gZzw/+2uvPAgvk7L1/OPDZhcRGn1w431n576PbbvirlKp99mp8b7W27
H3qwrZSrmMwN5oZvDWrtzJmLsPHxR5tfntJ56dKV4tx/JHFj0pMd3nDj2LHz
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
        "], {{0, 
        0}, {360, 230}}, {0, 255},
        ColorFunction->RGBColor],
       ImageSize->{360, 230},
       PlotRange->{{0, 360}, {0, 230}}], ",", 
      GraphicsBox[RasterBox[CompressedData["
1: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
IFRQsV5XrcwNrJ8Pmo5JbuATbOUoFjS6LrQoU6sxuF0RdXVFKsINXs3ikxtq
VUT3okrcqKq/wW8z8KlFcSOYOia5IWnJjX9ccaOyRScq3ltilNfpszqnTly1
ltwQnxDxoxdfWPgWAs6NgsqvgPOy1nqJf26UrF7LPqun4htygqB33FaBedjK
cqM0rSo3ilXnpInLPg3OjW93B9ff8JpPqZQ6nwatttbRsly1Iv5GYO+uXurn
0Z5G50Z//wkvO62v1MDf0FpZvWvKkmpfwksn5b9So77qh8Y+h3ECq2vXjN84
ReuY0YbjhmKytSGUn5vwstZ6ieaGVv9aDjec71IoUzU36iiaG1r9641B8jfG
g+7cobmhVWuttdH9Dc0NrVprr5obVZIazMNq1aq1NN2xY9jLTusr2t/QqjWw
GmR/Q0qpe1lp1aoVio+rKqy1XqK5oVVrYDUI3Mik0+msnKi5oVVrYPW6az5W
W2u1pTtK14zG2lpj3QPqnNS9rLRq1Qp9vq1Xba3Vlkw6hY+VdkcjnYMZRU7q
XlZatWqFvhLbJNpmtbmRGexpiba0jkhLS6yHvyfdH4u0xlNiTqQpnrqXlVat
WqHRO5eE8qWq3DAzqWFRkiOgSA10N4VC2t/QqrUhtMb+hlMyA11hm1fNM/rU
Oal7WWnVqhV6z91L1dZadUknopG2/qQ8o6K5oVVrYPWhlhVqa62B9HdEESJ1
9PNoh+aGVq3B1SBwIyfZTGbU6dDc0Ko1sPrQtFK4MdDbm8xtD/V2JVKqnUsT
/VybVq2B1an3dnvZqUISsaZQODaQTMY7WsPhlkS68CElcENKqXtZadWqlVVt
ra4yGO+OYUyiuStjZh2LxCsgmhtatQZWS4tTEu2R5hnxZHIgFqEjwn3a39Cq
dTzpww+tVFurqwwl+nMrtLLx9li8OuMbUkrdy0qrVq3Q4rmRiXe09wgLO4d6
uwe0v6FV63jSaQ8uV1urJH2xSGvPEP8c6GoJhZp0nKJV63hTtbVKEgs19YxM
waa726LtvdZQR7w63NDzsFq1BlMvuWiWl526Sl+siRyM1raWcCjcYa3byLY3
havEDSml7mWlVatWKHPDy1odkk70dnV29Q7ZrEj1d0ajM4aqMBGruaFVa2C1
eG7USDQ3tGoNsqqttV6iuaFVa2D10otnq621XqK5oVVrYPXiC2eqrbVeormh
VWuQVW2t9RI9D6tVa2D1sktme9lpfUX7G1q1BlnV1lov0dzQqjXIqrbWeonm
hlatQVa1tdZLNDe0ag2yqq21XqK5oVVrYDXI60X1fIpWrYFVLzutr2h/Q6vW
wGqQ/Q0ppe5lpVWrVla1tdZLNDe0ag2yqq21JpJNJVP6O49atTaQqq216pJO
tISjHZ2xSEtXRkjW3NCqNchqKq21ypLtiYaiPcO0FW9tarU3vHJS94LSqlUr
q2ibNedGsq0p3Gt/RqG/vSnU1ifmRJriqXtBadWqlTWULzXFRrqvKRTGZyJT
8bZwPjekfeteUFq1amUVbbPm/kYqRv6G/YL0/vZwSHNDq9YGUdE2a86NTGck
FLW/rGAPdIx+mUVzQ6vWIKtom3WaT2np7LLmU8TPKWhuaNUaWH3wgeK+11Yd
yaRS8idYNDe0ag2sthT5nceaieaGVq2B1SBzQz8Pq1VrMDVsfOBlp/UV7W9o
1RpkVVtrvURzQ6vWwGowxkVdRHNDq9bA6kPTVqittV6iudEQSv1O3fOgtS6q
ttZ6ieaGVq2B1UcfWaW21nqJnk9pCH3t1Xjd86C19vrs9HVedlpf0f5GwHXS
DfMNzY3xqm3/Xqe21nqJ5kbAFdy47R9ddc+J1trr366cq7bWeonmRsB18qQF
9O+8j76pe06Co1de3lH3PNRGtb8BveKyOXWvi8bSmyZrbsg6frgx9b5utbXW
S2rMjXvuXlrysXdNWVL3eqyZtj3bi42bJy+kfxcv3l33LAVHxw83Pnj/a7W1
1ks0N4Kp1GCw8cDUZYY9iV/3LAVH53fuqNKZJ1w1t+53J2qQudEo87DV48b1
13bW/e4knfnBVvFn+fVy4QUz635TldJFi3bVPQ+1UebGOJ+H/erLIyUfG72z
WtyYGPkIGxeFg2JcFNiKP8uvF80NP3rDdcHqQYLsb0gpVS2Hcs5fPW6I1VT3
piLl5PHHenb3nxDLbdL1fts2xlTHni5btnfXrhPqfV7/zxclnLk23Lj67x/5
3FNzA1rO+avHjeabFmJj1sytVbpEsTr9mbXYeOG59VK9vPvfr3yeRHSfivU3
bmleVP5dPPzQymoUTu+6wYIN6eWXNpZw5siED6uRYUnHJDduubkCDcZLTbu6
77vnsxKOLSfG8dLrrv3YEPrlUyd/rkGz8dlgsLF27QHUC/9p29ZjPk/yamwT
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
tTn/fx27qY4=
        "], {{0, 0}, {360, 227}}, {0, 255},
        ColorFunction->RGBColor],
       ImageSize->{360, 227},
       PlotRange->{{0, 360}, {0, 227}}]}], "}"}]}], ",", 
   RowBox[{"\<\"ParameterHistograms\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      GraphicsBox[
       {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
        EdgeForm[Opacity[0.027999999999999997`]], {}, 
        {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
         EdgeForm[Opacity[0.027999999999999997`]], 
         RectangleBox[{-3.8, 0}, {-3.7, 2},
          RoundingRadius->0], RectangleBox[{-3.6, 0}, {-3.5, 3},
          RoundingRadius->0], RectangleBox[{-3.5, 0}, {-3.4, 7},
          RoundingRadius->0], RectangleBox[{-3.4, 0}, {-3.3, 5},
          RoundingRadius->0], RectangleBox[{-3.3, 0}, {-3.2, 7},
          RoundingRadius->0], RectangleBox[{-3.1, 0}, {-3., 19},
          RoundingRadius->0], RectangleBox[{-3., 0}, {-2.9, 10},
          RoundingRadius->0], RectangleBox[{-2.9, 0}, {-2.8, 17},
          RoundingRadius->0], RectangleBox[{-2.8, 0}, {-2.7, 34},
          RoundingRadius->0], RectangleBox[{-2.7, 0}, {-2.6, 36},
          RoundingRadius->0], RectangleBox[{-2.6, 0}, {-2.5, 32},
          RoundingRadius->0], RectangleBox[{-2.5, 0}, {-2.4, 32},
          RoundingRadius->0], RectangleBox[{-2.4, 0}, {-2.3, 55},
          RoundingRadius->0], RectangleBox[{-2.3, 0}, {-2.2, 58},
          RoundingRadius->0], RectangleBox[{-2.2, 0}, {-2.1, 84},
          RoundingRadius->0], RectangleBox[{-2.1, 0}, {-2., 114},
          RoundingRadius->0], RectangleBox[{-2., 0}, {-1.9, 127},
          RoundingRadius->0], RectangleBox[{-1.9, 0}, {-1.8, 163},
          RoundingRadius->0], RectangleBox[{-1.8, 0}, {-1.7, 212},
          RoundingRadius->0], RectangleBox[{-1.7, 0}, {-1.6, 238},
          RoundingRadius->0], RectangleBox[{-1.6, 0}, {-1.5, 366},
          RoundingRadius->0], RectangleBox[{-1.5, 0}, {-1.4, 338},
          RoundingRadius->0], RectangleBox[{-1.4, 0}, {-1.3, 469},
          RoundingRadius->0], RectangleBox[{-1.3, 0}, {-1.2, 569},
          RoundingRadius->0], RectangleBox[{-1.2, 0}, {-1.1, 606},
          RoundingRadius->0], RectangleBox[{-1.1, 0}, {-1., 713},
          RoundingRadius->0], RectangleBox[{-1., 0}, {-0.9, 810},
          RoundingRadius->0], RectangleBox[{-0.9, 0}, {-0.8, 913},
          RoundingRadius->0], RectangleBox[{-0.8, 0}, {-0.7, 994},
          RoundingRadius->0], RectangleBox[{-0.7, 0}, {-0.6, 1205},
          RoundingRadius->0], RectangleBox[{-0.6, 0}, {-0.5, 1224},
          RoundingRadius->0], RectangleBox[{-0.5, 0}, {-0.4, 1478},
          RoundingRadius->0], RectangleBox[{-0.4, 0}, {-0.3, 1436},
          RoundingRadius->0], RectangleBox[{-0.3, 0}, {-0.2, 1781},
          RoundingRadius->0], RectangleBox[{-0.2, 0}, {-0.1, 1837},
          RoundingRadius->0], RectangleBox[{-0.1, 0}, {0., 2171},
          RoundingRadius->0], RectangleBox[{0., 0}, {0.1, 2196},
          RoundingRadius->0], RectangleBox[{0.1, 0}, {0.2, 2411},
          RoundingRadius->0], RectangleBox[{0.2, 0}, {0.3, 2379},
          RoundingRadius->0], RectangleBox[{0.3, 0}, {0.4, 2482},
          RoundingRadius->0], RectangleBox[{0.4, 0}, {0.5, 2705},
          RoundingRadius->0], RectangleBox[{0.5, 0}, {0.6, 2609},
          RoundingRadius->0], RectangleBox[{0.6, 0}, {0.7, 2851},
          RoundingRadius->0], RectangleBox[{0.7, 0}, {0.8, 2979},
          RoundingRadius->0], RectangleBox[{0.8, 0}, {0.9, 2745},
          RoundingRadius->0], RectangleBox[{0.9, 0}, {1., 3114},
          RoundingRadius->0], RectangleBox[{1., 0}, {1.1, 2955},
          RoundingRadius->0], RectangleBox[{1.1, 0}, {1.2, 3084},
          RoundingRadius->0], RectangleBox[{1.2, 0}, {1.3, 2908},
          RoundingRadius->0], RectangleBox[{1.3, 0}, {1.4, 2886},
          RoundingRadius->0], RectangleBox[{1.4, 0}, {1.5, 2689},
          RoundingRadius->0], RectangleBox[{1.5, 0}, {1.6, 2691},
          RoundingRadius->0], RectangleBox[{1.6, 0}, {1.7, 2644},
          RoundingRadius->0], RectangleBox[{1.7, 0}, {1.8, 2364},
          RoundingRadius->0], RectangleBox[{1.8, 0}, {1.9, 2292},
          RoundingRadius->0], RectangleBox[{1.9, 0}, {2., 2144},
          RoundingRadius->0], RectangleBox[{2., 0}, {2.1, 2053},
          RoundingRadius->0], RectangleBox[{2.1, 0}, {2.2, 1934},
          RoundingRadius->0], RectangleBox[{2.2, 0}, {2.3, 1790},
          RoundingRadius->0], RectangleBox[{2.3, 0}, {2.4, 1642},
          RoundingRadius->0], RectangleBox[{2.4, 0}, {2.5, 1548},
          RoundingRadius->0], RectangleBox[{2.5, 0}, {2.6, 1323},
          RoundingRadius->0], RectangleBox[{2.6, 0}, {2.7, 1178},
          RoundingRadius->0], RectangleBox[{2.7, 0}, {2.8, 1045},
          RoundingRadius->0], RectangleBox[{2.8, 0}, {2.9, 938},
          RoundingRadius->0], RectangleBox[{2.9, 0}, {3., 776},
          RoundingRadius->0], RectangleBox[{3., 0}, {3.1, 760},
          RoundingRadius->0], RectangleBox[{3.1, 0}, {3.2, 665},
          RoundingRadius->0], RectangleBox[{3.2, 0}, {3.3, 529},
          RoundingRadius->0], RectangleBox[{3.3, 0}, {3.4, 378},
          RoundingRadius->0], RectangleBox[{3.4, 0}, {3.5, 388},
          RoundingRadius->0], RectangleBox[{3.5, 0}, {3.6, 304},
          RoundingRadius->0], RectangleBox[{3.6, 0}, {3.7, 274},
          RoundingRadius->0], RectangleBox[{3.7, 0}, {3.8, 235},
          RoundingRadius->0], RectangleBox[{3.8, 0}, {3.9, 191},
          RoundingRadius->0], RectangleBox[{3.9, 0}, {4., 170},
          RoundingRadius->0], RectangleBox[{4., 0}, {4.1, 129},
          RoundingRadius->0], RectangleBox[{4.1, 0}, {4.2, 62},
          RoundingRadius->0], RectangleBox[{4.2, 0}, {4.3, 84},
          RoundingRadius->0], RectangleBox[{4.3, 0}, {4.4, 62},
          RoundingRadius->0], RectangleBox[{4.4, 0}, {4.5, 48},
          RoundingRadius->0], RectangleBox[{4.5, 0}, {4.6, 41},
          RoundingRadius->0], RectangleBox[{4.6, 0}, {4.7, 46},
          RoundingRadius->0], RectangleBox[{4.7, 0}, {4.8, 29},
          RoundingRadius->0], RectangleBox[{4.8, 0}, {4.9, 15},
          RoundingRadius->0], RectangleBox[{4.9, 0}, {5., 13},
          RoundingRadius->0], RectangleBox[{5., 0}, {5.1, 19},
          RoundingRadius->0], RectangleBox[{5.1, 0}, {5.2, 13},
          RoundingRadius->0], RectangleBox[{5.2, 0}, {5.3, 11},
          RoundingRadius->0], RectangleBox[{5.3, 0}, {5.4, 3},
          RoundingRadius->0], RectangleBox[{5.4, 0}, {5.5, 2},
          RoundingRadius->0], RectangleBox[{5.5, 0}, {5.6, 3},
          RoundingRadius->0], RectangleBox[{5.6, 0}, {5.7, 2},
          RoundingRadius->0], RectangleBox[{5.7, 0}, {5.8, 2},
          RoundingRadius->0], RectangleBox[{5.8, 0}, {5.9, 2},
          RoundingRadius->0], RectangleBox[{6., 0}, {6.1, 1},
          RoundingRadius->0]}, {}, {}},
       AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
       Axes->{True, False},
       AxesLabel->{
         FormBox["\"x1\"", TraditionalForm], None},
       AxesOrigin->{-3.8, 0},
       FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
       GridLines->{None, None},
       PlotRange->{{-3.8, 6.1}, {All, All}},
       PlotRangePadding->{{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.1]}},
       Ticks->{Automatic, None}], ",", 
      GraphicsBox[
       {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
        EdgeForm[Opacity[-0.217]], {}, 
        {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
         EdgeForm[Opacity[-0.217]], RectangleBox[{-17.4, 0}, {-17.2, 1},
          RoundingRadius->0], RectangleBox[{-16.2, 0}, {-16., 5},
          RoundingRadius->0], RectangleBox[{-16., 0}, {-15.8, 4},
          RoundingRadius->0], RectangleBox[{-15.2, 0}, {-15., 6},
          RoundingRadius->0], RectangleBox[{-14.8, 0}, {-14.6, 3},
          RoundingRadius->0], RectangleBox[{-14.6, 0}, {-14.4, 5},
          RoundingRadius->0], RectangleBox[{-14.4, 0}, {-14.2, 1},
          RoundingRadius->0], RectangleBox[{-14.2, 0}, {-14., 1},
          RoundingRadius->0], RectangleBox[{-14., 0}, {-13.8, 7},
          RoundingRadius->0], RectangleBox[{-13.8, 0}, {-13.6, 8},
          RoundingRadius->0], RectangleBox[{-13.6, 0}, {-13.4, 6},
          RoundingRadius->0], RectangleBox[{-13.4, 0}, {-13.2, 7},
          RoundingRadius->0], RectangleBox[{-13.2, 0}, {-13., 4},
          RoundingRadius->0], RectangleBox[{-13., 0}, {-12.8, 13},
          RoundingRadius->0], RectangleBox[{-12.8, 0}, {-12.6, 7},
          RoundingRadius->0], RectangleBox[{-12.6, 0}, {-12.4, 20},
          RoundingRadius->0], RectangleBox[{-12.4, 0}, {-12.2, 17},
          RoundingRadius->0], RectangleBox[{-12.2, 0}, {-12., 19},
          RoundingRadius->0], RectangleBox[{-12., 0}, {-11.8, 48},
          RoundingRadius->0], RectangleBox[{-11.8, 0}, {-11.6, 33},
          RoundingRadius->0], RectangleBox[{-11.6, 0}, {-11.4, 27},
          RoundingRadius->0], RectangleBox[{-11.4, 0}, {-11.2, 35},
          RoundingRadius->0], RectangleBox[{-11.2, 0}, {-11., 68},
          RoundingRadius->0], RectangleBox[{-11., 0}, {-10.8, 58},
          RoundingRadius->0], RectangleBox[{-10.8, 0}, {-10.6, 114},
          RoundingRadius->0], RectangleBox[{-10.6, 0}, {-10.4, 85},
          RoundingRadius->0], RectangleBox[{-10.4, 0}, {-10.2, 112},
          RoundingRadius->0], RectangleBox[{-10.2, 0}, {-10., 136},
          RoundingRadius->0], RectangleBox[{-10., 0}, {-9.8, 167},
          RoundingRadius->0], RectangleBox[{-9.8, 0}, {-9.6, 165},
          RoundingRadius->0], RectangleBox[{-9.6, 0}, {-9.4, 201},
          RoundingRadius->0], RectangleBox[{-9.4, 0}, {-9.2, 239},
          RoundingRadius->0], RectangleBox[{-9.2, 0}, {-9., 278},
          RoundingRadius->0], RectangleBox[{-9., 0}, {-8.8, 328},
          RoundingRadius->0], RectangleBox[{-8.8, 0}, {-8.6, 379},
          RoundingRadius->0], RectangleBox[{-8.6, 0}, {-8.4, 342},
          RoundingRadius->0], RectangleBox[{-8.4, 0}, {-8.2, 358},
          RoundingRadius->0], RectangleBox[{-8.2, 0}, {-8., 475},
          RoundingRadius->0], RectangleBox[{-8., 0}, {-7.8, 483},
          RoundingRadius->0], RectangleBox[{-7.8, 0}, {-7.6, 499},
          RoundingRadius->0], RectangleBox[{-7.6, 0}, {-7.4, 618},
          RoundingRadius->0], RectangleBox[{-7.4, 0}, {-7.2, 631},
          RoundingRadius->0], RectangleBox[{-7.2, 0}, {-7., 670},
          RoundingRadius->0], RectangleBox[{-7., 0}, {-6.8, 849},
          RoundingRadius->0], RectangleBox[{-6.8, 0}, {-6.6, 823},
          RoundingRadius->0], RectangleBox[{-6.6, 0}, {-6.4, 923},
          RoundingRadius->0], RectangleBox[{-6.4, 0}, {-6.2, 844},
          RoundingRadius->0], RectangleBox[{-6.2, 0}, {-6., 1087},
          RoundingRadius->0], RectangleBox[{-6., 0}, {-5.8, 1000},
          RoundingRadius->0], RectangleBox[{-5.8, 0}, {-5.6, 1174},
          RoundingRadius->0], RectangleBox[{-5.6, 0}, {-5.4, 1267},
          RoundingRadius->0], RectangleBox[{-5.4, 0}, {-5.2, 1294},
          RoundingRadius->0], RectangleBox[{-5.2, 0}, {-5., 1259},
          RoundingRadius->0], RectangleBox[{-5., 0}, {-4.8, 1541},
          RoundingRadius->0], RectangleBox[{-4.8, 0}, {-4.6, 1527},
          RoundingRadius->0], RectangleBox[{-4.6, 0}, {-4.4, 1585},
          RoundingRadius->0], RectangleBox[{-4.4, 0}, {-4.2, 1650},
          RoundingRadius->0], RectangleBox[{-4.2, 0}, {-4., 1742},
          RoundingRadius->0], RectangleBox[{-4., 0}, {-3.8, 1763},
          RoundingRadius->0], RectangleBox[{-3.8, 0}, {-3.6, 1984},
          RoundingRadius->0], RectangleBox[{-3.6, 0}, {-3.4, 1922},
          RoundingRadius->0], RectangleBox[{-3.4, 0}, {-3.2, 2062},
          RoundingRadius->0], RectangleBox[{-3.2, 0}, {-3., 1934},
          RoundingRadius->0], RectangleBox[{-3., 0}, {-2.8, 2122},
          RoundingRadius->0], RectangleBox[{-2.8, 0}, {-2.6, 2104},
          RoundingRadius->0], RectangleBox[{-2.6, 0}, {-2.4, 2068},
          RoundingRadius->0], RectangleBox[{-2.4, 0}, {-2.2, 2069},
          RoundingRadius->0], RectangleBox[{-2.2, 0}, {-2., 2085},
          RoundingRadius->0], RectangleBox[{-2., 0}, {-1.8, 2128},
          RoundingRadius->0], RectangleBox[{-1.8, 0}, {-1.6, 1994},
          RoundingRadius->0], RectangleBox[{-1.6, 0}, {-1.4, 2016},
          RoundingRadius->0], RectangleBox[{-1.4, 0}, {-1.2, 2057},
          RoundingRadius->0], RectangleBox[{-1.2, 0}, {-1., 2055},
          RoundingRadius->0], RectangleBox[{-1., 0}, {-0.8, 1996},
          RoundingRadius->0], RectangleBox[{-0.8, 0}, {-0.6, 2098},
          RoundingRadius->0], RectangleBox[{-0.6, 0}, {-0.4, 1823},
          RoundingRadius->0], RectangleBox[{-0.4, 0}, {-0.2, 1697},
          RoundingRadius->0], RectangleBox[{-0.2, 0}, {0., 1703},
          RoundingRadius->0], RectangleBox[{0., 0}, {0.2, 1828},
          RoundingRadius->0], RectangleBox[{0.2, 0}, {0.4, 1502},
          RoundingRadius->0], RectangleBox[{0.4, 0}, {0.6, 1650},
          RoundingRadius->0], RectangleBox[{0.6, 0}, {0.8, 1443},
          RoundingRadius->0], RectangleBox[{0.8, 0}, {1., 1434},
          RoundingRadius->0], RectangleBox[{1., 0}, {1.2, 1364},
          RoundingRadius->0], RectangleBox[{1.2, 0}, {1.4, 1168},
          RoundingRadius->0], RectangleBox[{1.4, 0}, {1.6, 1341},
          RoundingRadius->0], RectangleBox[{1.6, 0}, {1.8, 1143},
          RoundingRadius->0], RectangleBox[{1.8, 0}, {2., 1144},
          RoundingRadius->0], RectangleBox[{2., 0}, {2.2, 1095},
          RoundingRadius->0], RectangleBox[{2.2, 0}, {2.4, 985},
          RoundingRadius->0], RectangleBox[{2.4, 0}, {2.6, 819},
          RoundingRadius->0], RectangleBox[{2.6, 0}, {2.8, 881},
          RoundingRadius->0], RectangleBox[{2.8, 0}, {3., 818},
          RoundingRadius->0], RectangleBox[{3., 0}, {3.2, 665},
          RoundingRadius->0], RectangleBox[{3.2, 0}, {3.4, 595},
          RoundingRadius->0], RectangleBox[{3.4, 0}, {3.6, 640},
          RoundingRadius->0], RectangleBox[{3.6, 0}, {3.8, 459},
          RoundingRadius->0], RectangleBox[{3.8, 0}, {4., 501},
          RoundingRadius->0], RectangleBox[{4., 0}, {4.2, 447},
          RoundingRadius->0], RectangleBox[{4.2, 0}, {4.4, 383},
          RoundingRadius->0], RectangleBox[{4.4, 0}, {4.6, 385},
          RoundingRadius->0], RectangleBox[{4.6, 0}, {4.8, 380},
          RoundingRadius->0], RectangleBox[{4.8, 0}, {5., 281},
          RoundingRadius->0], RectangleBox[{5., 0}, {5.2, 205},
          RoundingRadius->0], RectangleBox[{5.2, 0}, {5.4, 239},
          RoundingRadius->0], RectangleBox[{5.4, 0}, {5.6, 173},
          RoundingRadius->0], RectangleBox[{5.6, 0}, {5.8, 155},
          RoundingRadius->0], RectangleBox[{5.8, 0}, {6., 110},
          RoundingRadius->0], RectangleBox[{6., 0}, {6.2, 159},
          RoundingRadius->0], RectangleBox[{6.2, 0}, {6.4, 92},
          RoundingRadius->0], RectangleBox[{6.4, 0}, {6.6, 90},
          RoundingRadius->0], RectangleBox[{6.6, 0}, {6.8, 83},
          RoundingRadius->0], RectangleBox[{6.8, 0}, {7., 67},
          RoundingRadius->0], RectangleBox[{7., 0}, {7.2, 54},
          RoundingRadius->0], RectangleBox[{7.2, 0}, {7.4, 45},
          RoundingRadius->0], RectangleBox[{7.4, 0}, {7.6, 58},
          RoundingRadius->0], RectangleBox[{7.6, 0}, {7.8, 14},
          RoundingRadius->0], RectangleBox[{7.8, 0}, {8., 38},
          RoundingRadius->0], RectangleBox[{8., 0}, {8.2, 21},
          RoundingRadius->0], RectangleBox[{8.2, 0}, {8.4, 24},
          RoundingRadius->0], RectangleBox[{8.4, 0}, {8.6, 14},
          RoundingRadius->0], RectangleBox[{8.6, 0}, {8.8, 11},
          RoundingRadius->0], RectangleBox[{8.8, 0}, {9., 20},
          RoundingRadius->0], RectangleBox[{9., 0}, {9.2, 22},
          RoundingRadius->0], RectangleBox[{9.2, 0}, {9.4, 4},
          RoundingRadius->0], RectangleBox[{9.4, 0}, {9.6, 4},
          RoundingRadius->0], RectangleBox[{9.6, 0}, {9.8, 5},
          RoundingRadius->0], RectangleBox[{10., 0}, {10.2, 8},
          RoundingRadius->0], RectangleBox[{10.2, 0}, {10.4, 1},
          RoundingRadius->0], RectangleBox[{10.4, 0}, {10.6, 5},
          RoundingRadius->0], RectangleBox[{10.6, 0}, {10.8, 1},
          RoundingRadius->0]}, {}, {}},
       AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
       Axes->{True, False},
       AxesLabel->{
         FormBox["\"x2\"", TraditionalForm], None},
       AxesOrigin->{-17.4, 0},
       FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
       GridLines->{None, None},
       PlotRange->{{-17.4, 10.8}, {All, All}},
       PlotRangePadding->{{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.1]}},
       Ticks->{Automatic, None}]}], "}"}]}]}], "}"}]], "Output",
 CellChangeTimes->{3.6330171676830606`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Add more iterations...", "Subsubsection",
 CellChangeTimes->{{3.633016199357771*^9, 3.633016219989996*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"MCMC", "[", 
   RowBox[{"plogexpr", ",", " ", "mcmc", ",", " ", "100000"}], "]"}], "[", 
  RowBox[{"{", 
   RowBox[{
   "\"\<BestFitParameters\>\"", ",", "\"\<ParameterErrors\>\"", ",", 
    "\"\<AverageAcceptance\>\"", ",", "\"\<TimeSpent\>\"", ",", 
    "\"\<NumSteps\>\"", ",", "\"\<BurnFraction\>\"", ",", "\"\<BurnEnd\>\"", 
    ",", "\"\<CorrelationMatrix\>\"", ",", "\"\<ParameterHistograms\>\""}], 
   "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.63301613318088*^9, 3.6330161563814497`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"\<\"BestFitParameters\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"x1", "\[Rule]", "1.0109675630653716`"}], ",", 
      RowBox[{"x2", "\[Rule]", 
       RowBox[{"-", "2.0059571674921575`"}]}]}], "}"}]}], ",", 
   RowBox[{"\<\"ParameterErrors\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"x1", "\[Rule]", "1.202154427184874`"}], ",", 
      RowBox[{"x2", "\[Rule]", "3.4261612750583805`"}]}], "}"}]}], ",", 
   RowBox[{"\<\"AverageAcceptance\"\>", "\[Rule]", "0.4501998601671264`"}], 
   ",", 
   RowBox[{"\<\"TimeSpent\"\>", "\[Rule]", 
    RowBox[{"15.058691`7.328302219618015", " ", "Second"}]}], ",", 
   RowBox[{"\<\"NumSteps\"\>", "\[Rule]", "199999"}], ",", 
   RowBox[{"\<\"BurnFraction\"\>", "\[Rule]", "0.1`"}], ",", 
   RowBox[{"\<\"BurnEnd\"\>", "\[Rule]", "20000"}], ",", 
   RowBox[{"\<\"CorrelationMatrix\"\>", "\[Rule]", 
    TagBox[
     RowBox[{"(", "\[NoBreak]", GridBox[{
        {"1.0000000000000182`", "0.011457053883097852`"},
        {"0.011457053883097852`", "0.9999999999999937`"}
       },
       GridBoxAlignment->{
        "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
         "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.7]}, 
           Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
     Function[BoxForm`e$, 
      MatrixForm[BoxForm`e$]]]}], ",", 
   RowBox[{"\<\"ParameterHistograms\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      GraphicsBox[
       {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
        EdgeForm[Opacity[-0.651]], {}, 
        {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
         EdgeForm[Opacity[-0.651]], RectangleBox[{-4.1, 0}, {-4.05, 1},
          RoundingRadius->0], RectangleBox[{-3.95, 0}, {-3.9, 1},
          RoundingRadius->0], RectangleBox[{-3.8, 0}, {-3.75, 1},
          RoundingRadius->0], RectangleBox[{-3.7, 0}, {-3.65, 7},
          RoundingRadius->0], RectangleBox[{-3.65, 0}, {-3.6, 1},
          RoundingRadius->0], RectangleBox[{-3.6, 0}, {-3.55, 3},
          RoundingRadius->0], RectangleBox[{-3.45, 0}, {-3.4, 13},
          RoundingRadius->0], RectangleBox[{-3.4, 0}, {-3.35, 9},
          RoundingRadius->0], RectangleBox[{-3.35, 0}, {-3.3, 9},
          RoundingRadius->0], RectangleBox[{-3.3, 0}, {-3.25, 9},
          RoundingRadius->0], RectangleBox[{-3.25, 0}, {-3.2, 1},
          RoundingRadius->0], RectangleBox[{-3.2, 0}, {-3.15, 7},
          RoundingRadius->0], RectangleBox[{-3.15, 0}, {-3.1, 3},
          RoundingRadius->0], RectangleBox[{-3.1, 0}, {-3.05, 4},
          RoundingRadius->0], RectangleBox[{-3.05, 0}, {-3., 20},
          RoundingRadius->0], RectangleBox[{-3., 0}, {-2.95, 9},
          RoundingRadius->0], RectangleBox[{-2.95, 0}, {-2.9, 19},
          RoundingRadius->0], RectangleBox[{-2.9, 0}, {-2.85, 6},
          RoundingRadius->0], RectangleBox[{-2.85, 0}, {-2.8, 25},
          RoundingRadius->0], RectangleBox[{-2.8, 0}, {-2.75, 26},
          RoundingRadius->0], RectangleBox[{-2.75, 0}, {-2.7, 41},
          RoundingRadius->0], RectangleBox[{-2.7, 0}, {-2.65, 38},
          RoundingRadius->0], RectangleBox[{-2.65, 0}, {-2.6, 44},
          RoundingRadius->0], RectangleBox[{-2.6, 0}, {-2.55, 32},
          RoundingRadius->0], RectangleBox[{-2.55, 0}, {-2.5, 34},
          RoundingRadius->0], RectangleBox[{-2.5, 0}, {-2.45, 44},
          RoundingRadius->0], RectangleBox[{-2.45, 0}, {-2.4, 35},
          RoundingRadius->0], RectangleBox[{-2.4, 0}, {-2.35, 70},
          RoundingRadius->0], RectangleBox[{-2.35, 0}, {-2.3, 67},
          RoundingRadius->0], RectangleBox[{-2.3, 0}, {-2.25, 52},
          RoundingRadius->0], RectangleBox[{-2.25, 0}, {-2.2, 70},
          RoundingRadius->0], RectangleBox[{-2.2, 0}, {-2.15, 72},
          RoundingRadius->0], RectangleBox[{-2.15, 0}, {-2.1, 97},
          RoundingRadius->0], RectangleBox[{-2.1, 0}, {-2.05, 103},
          RoundingRadius->0], RectangleBox[{-2.05, 0}, {-2., 116},
          RoundingRadius->0], RectangleBox[{-2., 0}, {-1.95, 128},
          RoundingRadius->0], RectangleBox[{-1.95, 0}, {-1.9, 128},
          RoundingRadius->0], RectangleBox[{-1.9, 0}, {-1.85, 170},
          RoundingRadius->0], RectangleBox[{-1.85, 0}, {-1.8, 196},
          RoundingRadius->0], RectangleBox[{-1.8, 0}, {-1.75, 179},
          RoundingRadius->0], RectangleBox[{-1.75, 0}, {-1.7, 251},
          RoundingRadius->0], RectangleBox[{-1.7, 0}, {-1.65, 226},
          RoundingRadius->0], RectangleBox[{-1.65, 0}, {-1.6, 279},
          RoundingRadius->0], RectangleBox[{-1.6, 0}, {-1.55, 343},
          RoundingRadius->0], RectangleBox[{-1.55, 0}, {-1.5, 338},
          RoundingRadius->0], RectangleBox[{-1.5, 0}, {-1.45, 350},
          RoundingRadius->0], RectangleBox[{-1.45, 0}, {-1.4, 384},
          RoundingRadius->0], RectangleBox[{-1.4, 0}, {-1.35, 486},
          RoundingRadius->0], RectangleBox[{-1.35, 0}, {-1.3, 480},
          RoundingRadius->0], RectangleBox[{-1.3, 0}, {-1.25, 600},
          RoundingRadius->0], RectangleBox[{-1.25, 0}, {-1.2, 550},
          RoundingRadius->0], RectangleBox[{-1.2, 0}, {-1.15, 556},
          RoundingRadius->0], RectangleBox[{-1.15, 0}, {-1.1, 560},
          RoundingRadius->0], RectangleBox[{-1.1, 0}, {-1.05, 669},
          RoundingRadius->0], RectangleBox[{-1.05, 0}, {-1., 662},
          RoundingRadius->0], RectangleBox[{-1., 0}, {-0.95, 800},
          RoundingRadius->0], RectangleBox[{-0.95, 0}, {-0.9, 858},
          RoundingRadius->0], RectangleBox[{-0.9, 0}, {-0.85, 758},
          RoundingRadius->0], RectangleBox[{-0.85, 0}, {-0.8, 979},
          RoundingRadius->0], RectangleBox[{-0.8, 0}, {-0.75, 964},
          RoundingRadius->0], RectangleBox[{-0.75, 0}, {-0.7, 1011},
          RoundingRadius->0], RectangleBox[{-0.7, 0}, {-0.65, 1170},
          RoundingRadius->0], RectangleBox[{-0.65, 0}, {-0.6, 1167},
          RoundingRadius->0], RectangleBox[{-0.6, 0}, {-0.55, 1209},
          RoundingRadius->0], RectangleBox[{-0.55, 0}, {-0.5, 1264},
          RoundingRadius->0], RectangleBox[{-0.5, 0}, {-0.45, 1407},
          RoundingRadius->0], RectangleBox[{-0.45, 0}, {-0.4, 1535},
          RoundingRadius->0], RectangleBox[{-0.4, 0}, {-0.35, 1286},
          RoundingRadius->0], RectangleBox[{-0.35, 0}, {-0.3, 1517},
          RoundingRadius->0], RectangleBox[{-0.3, 0}, {-0.25, 1671},
          RoundingRadius->0], RectangleBox[{-0.25, 0}, {-0.2, 1784},
          RoundingRadius->0], RectangleBox[{-0.2, 0}, {-0.15, 1784},
          RoundingRadius->0], RectangleBox[{-0.15, 0}, {-0.1, 1837},
          RoundingRadius->0], RectangleBox[{-0.1, 0}, {-0.05, 2033},
          RoundingRadius->0], RectangleBox[{-0.05, 0}, {0., 2122},
          RoundingRadius->0], RectangleBox[{0., 0}, {0.05, 2148},
          RoundingRadius->0], RectangleBox[{0.05, 0}, {0.1, 2357},
          RoundingRadius->0], RectangleBox[{0.1, 0}, {0.15, 2341},
          RoundingRadius->0], RectangleBox[{0.15, 0}, {0.2, 2266},
          RoundingRadius->0], RectangleBox[{0.2, 0}, {0.25, 2492},
          RoundingRadius->0], RectangleBox[{0.25, 0}, {0.3, 2498},
          RoundingRadius->0], RectangleBox[{0.3, 0}, {0.35, 2404},
          RoundingRadius->0], RectangleBox[{0.35, 0}, {0.4, 2589},
          RoundingRadius->0], RectangleBox[{0.4, 0}, {0.45, 2613},
          RoundingRadius->0], RectangleBox[{0.45, 0}, {0.5, 2778},
          RoundingRadius->0], RectangleBox[{0.5, 0}, {0.55, 2680},
          RoundingRadius->0], RectangleBox[{0.55, 0}, {0.6, 2765},
          RoundingRadius->0], RectangleBox[{0.6, 0}, {0.65, 2676},
          RoundingRadius->0], RectangleBox[{0.65, 0}, {0.7, 2986},
          RoundingRadius->0], RectangleBox[{0.7, 0}, {0.75, 2992},
          RoundingRadius->0], RectangleBox[{0.75, 0}, {0.8, 2919},
          RoundingRadius->0], RectangleBox[{0.8, 0}, {0.85, 2851},
          RoundingRadius->0], RectangleBox[{0.85, 0}, {0.9, 2962},
          RoundingRadius->0], RectangleBox[{0.9, 0}, {0.95, 3028},
          RoundingRadius->0], RectangleBox[{0.95, 0}, {1., 3058},
          RoundingRadius->0], RectangleBox[{1., 0}, {1.05, 2938},
          RoundingRadius->0], RectangleBox[{1.05, 0}, {1.1, 3031},
          RoundingRadius->0], RectangleBox[{1.1, 0}, {1.15, 3213},
          RoundingRadius->0], RectangleBox[{1.15, 0}, {1.2, 3051},
          RoundingRadius->0], RectangleBox[{1.2, 0}, {1.25, 3015},
          RoundingRadius->0], RectangleBox[{1.25, 0}, {1.3, 2782},
          RoundingRadius->0], RectangleBox[{1.3, 0}, {1.35, 2995},
          RoundingRadius->0], RectangleBox[{1.35, 0}, {1.4, 2838},
          RoundingRadius->0], RectangleBox[{1.4, 0}, {1.45, 2825},
          RoundingRadius->0], RectangleBox[{1.45, 0}, {1.5, 2705},
          RoundingRadius->0], RectangleBox[{1.5, 0}, {1.55, 2604},
          RoundingRadius->0], RectangleBox[{1.55, 0}, {1.6, 2683},
          RoundingRadius->0], RectangleBox[{1.6, 0}, {1.65, 2648},
          RoundingRadius->0], RectangleBox[{1.65, 0}, {1.7, 2730},
          RoundingRadius->0], RectangleBox[{1.7, 0}, {1.75, 2373},
          RoundingRadius->0], RectangleBox[{1.75, 0}, {1.8, 2385},
          RoundingRadius->0], RectangleBox[{1.8, 0}, {1.85, 2310},
          RoundingRadius->0], RectangleBox[{1.85, 0}, {1.9, 2305},
          RoundingRadius->0], RectangleBox[{1.9, 0}, {1.95, 2263},
          RoundingRadius->0], RectangleBox[{1.95, 0}, {2., 2119},
          RoundingRadius->0], RectangleBox[{2., 0}, {2.05, 2047},
          RoundingRadius->0], RectangleBox[{2.05, 0}, {2.1, 2061},
          RoundingRadius->0], RectangleBox[{2.1, 0}, {2.15, 1933},
          RoundingRadius->0], RectangleBox[{2.15, 0}, {2.2, 1984},
          RoundingRadius->0], RectangleBox[{2.2, 0}, {2.25, 1683},
          RoundingRadius->0], RectangleBox[{2.25, 0}, {2.3, 1702},
          RoundingRadius->0], RectangleBox[{2.3, 0}, {2.35, 1657},
          RoundingRadius->0], RectangleBox[{2.35, 0}, {2.4, 1571},
          RoundingRadius->0], RectangleBox[{2.4, 0}, {2.45, 1661},
          RoundingRadius->0], RectangleBox[{2.45, 0}, {2.5, 1395},
          RoundingRadius->0], RectangleBox[{2.5, 0}, {2.55, 1298},
          RoundingRadius->0], RectangleBox[{2.55, 0}, {2.6, 1324},
          RoundingRadius->0], RectangleBox[{2.6, 0}, {2.65, 1103},
          RoundingRadius->0], RectangleBox[{2.65, 0}, {2.7, 1120},
          RoundingRadius->0], RectangleBox[{2.7, 0}, {2.75, 1196},
          RoundingRadius->0], RectangleBox[{2.75, 0}, {2.8, 1081},
          RoundingRadius->0], RectangleBox[{2.8, 0}, {2.85, 958},
          RoundingRadius->0], RectangleBox[{2.85, 0}, {2.9, 799},
          RoundingRadius->0], RectangleBox[{2.9, 0}, {2.95, 824},
          RoundingRadius->0], RectangleBox[{2.95, 0}, {3., 793},
          RoundingRadius->0], RectangleBox[{3., 0}, {3.05, 777},
          RoundingRadius->0], RectangleBox[{3.05, 0}, {3.1, 761},
          RoundingRadius->0], RectangleBox[{3.1, 0}, {3.15, 653},
          RoundingRadius->0], RectangleBox[{3.15, 0}, {3.2, 625},
          RoundingRadius->0], RectangleBox[{3.2, 0}, {3.25, 532},
          RoundingRadius->0], RectangleBox[{3.25, 0}, {3.3, 506},
          RoundingRadius->0], RectangleBox[{3.3, 0}, {3.35, 400},
          RoundingRadius->0], RectangleBox[{3.35, 0}, {3.4, 382},
          RoundingRadius->0], RectangleBox[{3.4, 0}, {3.45, 417},
          RoundingRadius->0], RectangleBox[{3.45, 0}, {3.5, 342},
          RoundingRadius->0], RectangleBox[{3.5, 0}, {3.55, 315},
          RoundingRadius->0], RectangleBox[{3.55, 0}, {3.6, 291},
          RoundingRadius->0], RectangleBox[{3.6, 0}, {3.65, 282},
          RoundingRadius->0], RectangleBox[{3.65, 0}, {3.7, 254},
          RoundingRadius->0], RectangleBox[{3.7, 0}, {3.75, 246},
          RoundingRadius->0], RectangleBox[{3.75, 0}, {3.8, 200},
          RoundingRadius->0], RectangleBox[{3.8, 0}, {3.85, 202},
          RoundingRadius->0], RectangleBox[{3.85, 0}, {3.9, 202},
          RoundingRadius->0], RectangleBox[{3.9, 0}, {3.95, 179},
          RoundingRadius->0], RectangleBox[{3.95, 0}, {4., 126},
          RoundingRadius->0], RectangleBox[{4., 0}, {4.05, 138},
          RoundingRadius->0], RectangleBox[{4.05, 0}, {4.1, 85},
          RoundingRadius->0], RectangleBox[{4.1, 0}, {4.15, 63},
          RoundingRadius->0], RectangleBox[{4.15, 0}, {4.2, 78},
          RoundingRadius->0], RectangleBox[{4.2, 0}, {4.25, 92},
          RoundingRadius->0], RectangleBox[{4.25, 0}, {4.3, 94},
          RoundingRadius->0], RectangleBox[{4.3, 0}, {4.35, 56},
          RoundingRadius->0], RectangleBox[{4.35, 0}, {4.4, 60},
          RoundingRadius->0], RectangleBox[{4.4, 0}, {4.45, 70},
          RoundingRadius->0], RectangleBox[{4.45, 0}, {4.5, 36},
          RoundingRadius->0], RectangleBox[{4.5, 0}, {4.55, 34},
          RoundingRadius->0], RectangleBox[{4.55, 0}, {4.6, 38},
          RoundingRadius->0], RectangleBox[{4.6, 0}, {4.65, 44},
          RoundingRadius->0], RectangleBox[{4.65, 0}, {4.7, 18},
          RoundingRadius->0], RectangleBox[{4.7, 0}, {4.75, 26},
          RoundingRadius->0], RectangleBox[{4.75, 0}, {4.8, 16},
          RoundingRadius->0], RectangleBox[{4.8, 0}, {4.85, 19},
          RoundingRadius->0], RectangleBox[{4.85, 0}, {4.9, 22},
          RoundingRadius->0], RectangleBox[{4.9, 0}, {4.95, 23},
          RoundingRadius->0], RectangleBox[{4.95, 0}, {5., 15},
          RoundingRadius->0], RectangleBox[{5., 0}, {5.05, 4},
          RoundingRadius->0], RectangleBox[{5.05, 0}, {5.1, 22},
          RoundingRadius->0], RectangleBox[{5.1, 0}, {5.15, 21},
          RoundingRadius->0], RectangleBox[{5.15, 0}, {5.2, 2},
          RoundingRadius->0], RectangleBox[{5.2, 0}, {5.25, 8},
          RoundingRadius->0], RectangleBox[{5.25, 0}, {5.3, 10},
          RoundingRadius->0], RectangleBox[{5.3, 0}, {5.35, 3},
          RoundingRadius->0], RectangleBox[{5.35, 0}, {5.4, 3},
          RoundingRadius->0], RectangleBox[{5.4, 0}, {5.45, 1},
          RoundingRadius->0], RectangleBox[{5.45, 0}, {5.5, 2},
          RoundingRadius->0], RectangleBox[{5.5, 0}, {5.55, 1},
          RoundingRadius->0], RectangleBox[{5.55, 0}, {5.6, 3},
          RoundingRadius->0], RectangleBox[{5.65, 0}, {5.7, 3},
          RoundingRadius->0], RectangleBox[{5.75, 0}, {5.8, 2},
          RoundingRadius->0], RectangleBox[{5.8, 0}, {5.85, 5},
          RoundingRadius->0], RectangleBox[{6., 0}, {6.05, 3},
          RoundingRadius->0], RectangleBox[{6.05, 0}, {6.1, 1},
          RoundingRadius->0], RectangleBox[{6.3, 0}, {6.35, 1},
          RoundingRadius->0]}, {}, {}},
       AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
       Axes->{True, False},
       AxesLabel->{
         FormBox["\"x1\"", TraditionalForm], None},
       AxesOrigin->{-4.1, 0},
       FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
       GridLines->{None, None},
       PlotRange->{{-4.1, 6.35}, {All, All}},
       PlotRangePadding->{{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.1]}},
       Ticks->{Automatic, None}], ",", 
      GraphicsBox[
       {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
        EdgeForm[Opacity[-0.259]], {}, 
        {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
         EdgeForm[Opacity[-0.259]], RectangleBox[{-17.4, 0}, {-17.2, 1},
          RoundingRadius->0], RectangleBox[{-16.2, 0}, {-16., 5},
          RoundingRadius->0], RectangleBox[{-16., 0}, {-15.8, 4},
          RoundingRadius->0], RectangleBox[{-15.2, 0}, {-15., 15},
          RoundingRadius->0], RectangleBox[{-14.8, 0}, {-14.6, 5},
          RoundingRadius->0], RectangleBox[{-14.6, 0}, {-14.4, 10},
          RoundingRadius->0], RectangleBox[{-14.4, 0}, {-14.2, 9},
          RoundingRadius->0], RectangleBox[{-14.2, 0}, {-14., 1},
          RoundingRadius->0], RectangleBox[{-14., 0}, {-13.8, 15},
          RoundingRadius->0], RectangleBox[{-13.8, 0}, {-13.6, 13},
          RoundingRadius->0], RectangleBox[{-13.6, 0}, {-13.4, 19},
          RoundingRadius->0], RectangleBox[{-13.4, 0}, {-13.2, 19},
          RoundingRadius->0], RectangleBox[{-13.2, 0}, {-13., 14},
          RoundingRadius->0], RectangleBox[{-13., 0}, {-12.8, 20},
          RoundingRadius->0], RectangleBox[{-12.8, 0}, {-12.6, 29},
          RoundingRadius->0], RectangleBox[{-12.6, 0}, {-12.4, 48},
          RoundingRadius->0], RectangleBox[{-12.4, 0}, {-12.2, 57},
          RoundingRadius->0], RectangleBox[{-12.2, 0}, {-12., 24},
          RoundingRadius->0], RectangleBox[{-12., 0}, {-11.8, 74},
          RoundingRadius->0], RectangleBox[{-11.8, 0}, {-11.6, 113},
          RoundingRadius->0], RectangleBox[{-11.6, 0}, {-11.4, 74},
          RoundingRadius->0], RectangleBox[{-11.4, 0}, {-11.2, 87},
          RoundingRadius->0], RectangleBox[{-11.2, 0}, {-11., 147},
          RoundingRadius->0], RectangleBox[{-11., 0}, {-10.8, 143},
          RoundingRadius->0], RectangleBox[{-10.8, 0}, {-10.6, 207},
          RoundingRadius->0], RectangleBox[{-10.6, 0}, {-10.4, 186},
          RoundingRadius->0], RectangleBox[{-10.4, 0}, {-10.2, 222},
          RoundingRadius->0], RectangleBox[{-10.2, 0}, {-10., 228},
          RoundingRadius->0], RectangleBox[{-10., 0}, {-9.8, 289},
          RoundingRadius->0], RectangleBox[{-9.8, 0}, {-9.6, 285},
          RoundingRadius->0], RectangleBox[{-9.6, 0}, {-9.4, 361},
          RoundingRadius->0], RectangleBox[{-9.4, 0}, {-9.2, 420},
          RoundingRadius->0], RectangleBox[{-9.2, 0}, {-9., 523},
          RoundingRadius->0], RectangleBox[{-9., 0}, {-8.8, 584},
          RoundingRadius->0], RectangleBox[{-8.8, 0}, {-8.6, 754},
          RoundingRadius->0], RectangleBox[{-8.6, 0}, {-8.4, 683},
          RoundingRadius->0], RectangleBox[{-8.4, 0}, {-8.2, 804},
          RoundingRadius->0], RectangleBox[{-8.2, 0}, {-8., 807},
          RoundingRadius->0], RectangleBox[{-8., 0}, {-7.8, 956},
          RoundingRadius->0], RectangleBox[{-7.8, 0}, {-7.6, 1000},
          RoundingRadius->0], RectangleBox[{-7.6, 0}, {-7.4, 1225},
          RoundingRadius->0], RectangleBox[{-7.4, 0}, {-7.2, 1188},
          RoundingRadius->0], RectangleBox[{-7.2, 0}, {-7., 1343},
          RoundingRadius->0], RectangleBox[{-7., 0}, {-6.8, 1484},
          RoundingRadius->0], RectangleBox[{-6.8, 0}, {-6.6, 1521},
          RoundingRadius->0], RectangleBox[{-6.6, 0}, {-6.4, 1753},
          RoundingRadius->0], RectangleBox[{-6.4, 0}, {-6.2, 1760},
          RoundingRadius->0], RectangleBox[{-6.2, 0}, {-6., 2125},
          RoundingRadius->0], RectangleBox[{-6., 0}, {-5.8, 2119},
          RoundingRadius->0], RectangleBox[{-5.8, 0}, {-5.6, 2464},
          RoundingRadius->0], RectangleBox[{-5.6, 0}, {-5.4, 2474},
          RoundingRadius->0], RectangleBox[{-5.4, 0}, {-5.2, 2614},
          RoundingRadius->0], RectangleBox[{-5.2, 0}, {-5., 2694},
          RoundingRadius->0], RectangleBox[{-5., 0}, {-4.8, 3023},
          RoundingRadius->0], RectangleBox[{-4.8, 0}, {-4.6, 3104},
          RoundingRadius->0], RectangleBox[{-4.6, 0}, {-4.4, 3263},
          RoundingRadius->0], RectangleBox[{-4.4, 0}, {-4.2, 3363},
          RoundingRadius->0], RectangleBox[{-4.2, 0}, {-4., 3590},
          RoundingRadius->0], RectangleBox[{-4., 0}, {-3.8, 3576},
          RoundingRadius->0], RectangleBox[{-3.8, 0}, {-3.6, 3956},
          RoundingRadius->0], RectangleBox[{-3.6, 0}, {-3.4, 3847},
          RoundingRadius->0], RectangleBox[{-3.4, 0}, {-3.2, 3879},
          RoundingRadius->0], RectangleBox[{-3.2, 0}, {-3., 3825},
          RoundingRadius->0], RectangleBox[{-3., 0}, {-2.8, 4168},
          RoundingRadius->0], RectangleBox[{-2.8, 0}, {-2.6, 4094},
          RoundingRadius->0], RectangleBox[{-2.6, 0}, {-2.4, 4126},
          RoundingRadius->0], RectangleBox[{-2.4, 0}, {-2.2, 4301},
          RoundingRadius->0], RectangleBox[{-2.2, 0}, {-2., 4276},
          RoundingRadius->0], RectangleBox[{-2., 0}, {-1.8, 4182},
          RoundingRadius->0], RectangleBox[{-1.8, 0}, {-1.6, 4040},
          RoundingRadius->0], RectangleBox[{-1.6, 0}, {-1.4, 4248},
          RoundingRadius->0], RectangleBox[{-1.4, 0}, {-1.2, 4020},
          RoundingRadius->0], RectangleBox[{-1.2, 0}, {-1., 4067},
          RoundingRadius->0], RectangleBox[{-1., 0}, {-0.8, 4006},
          RoundingRadius->0], RectangleBox[{-0.8, 0}, {-0.6, 3885},
          RoundingRadius->0], RectangleBox[{-0.6, 0}, {-0.4, 3891},
          RoundingRadius->0], RectangleBox[{-0.4, 0}, {-0.2, 3497},
          RoundingRadius->0], RectangleBox[{-0.2, 0}, {0., 3602},
          RoundingRadius->0], RectangleBox[{0., 0}, {0.2, 3662},
          RoundingRadius->0], RectangleBox[{0.2, 0}, {0.4, 3120},
          RoundingRadius->0], RectangleBox[{0.4, 0}, {0.6, 3306},
          RoundingRadius->0], RectangleBox[{0.6, 0}, {0.8, 2996},
          RoundingRadius->0], RectangleBox[{0.8, 0}, {1., 2861},
          RoundingRadius->0], RectangleBox[{1., 0}, {1.2, 2765},
          RoundingRadius->0], RectangleBox[{1.2, 0}, {1.4, 2457},
          RoundingRadius->0], RectangleBox[{1.4, 0}, {1.6, 2526},
          RoundingRadius->0], RectangleBox[{1.6, 0}, {1.8, 2379},
          RoundingRadius->0], RectangleBox[{1.8, 0}, {2., 2195},
          RoundingRadius->0], RectangleBox[{2., 0}, {2.2, 2070},
          RoundingRadius->0], RectangleBox[{2.2, 0}, {2.4, 1869},
          RoundingRadius->0], RectangleBox[{2.4, 0}, {2.6, 1745},
          RoundingRadius->0], RectangleBox[{2.6, 0}, {2.8, 1750},
          RoundingRadius->0], RectangleBox[{2.8, 0}, {3., 1521},
          RoundingRadius->0], RectangleBox[{3., 0}, {3.2, 1308},
          RoundingRadius->0], RectangleBox[{3.2, 0}, {3.4, 1172},
          RoundingRadius->0], RectangleBox[{3.4, 0}, {3.6, 1183},
          RoundingRadius->0], RectangleBox[{3.6, 0}, {3.8, 1052},
          RoundingRadius->0], RectangleBox[{3.8, 0}, {4., 992},
          RoundingRadius->0], RectangleBox[{4., 0}, {4.2, 892},
          RoundingRadius->0], RectangleBox[{4.2, 0}, {4.4, 823},
          RoundingRadius->0], RectangleBox[{4.4, 0}, {4.6, 702},
          RoundingRadius->0], RectangleBox[{4.6, 0}, {4.8, 640},
          RoundingRadius->0], RectangleBox[{4.8, 0}, {5., 544},
          RoundingRadius->0], RectangleBox[{5., 0}, {5.2, 464},
          RoundingRadius->0], RectangleBox[{5.2, 0}, {5.4, 471},
          RoundingRadius->0], RectangleBox[{5.4, 0}, {5.6, 354},
          RoundingRadius->0], RectangleBox[{5.6, 0}, {5.8, 293},
          RoundingRadius->0], RectangleBox[{5.8, 0}, {6., 231},
          RoundingRadius->0], RectangleBox[{6., 0}, {6.2, 263},
          RoundingRadius->0], RectangleBox[{6.2, 0}, {6.4, 213},
          RoundingRadius->0], RectangleBox[{6.4, 0}, {6.6, 206},
          RoundingRadius->0], RectangleBox[{6.6, 0}, {6.8, 176},
          RoundingRadius->0], RectangleBox[{6.8, 0}, {7., 153},
          RoundingRadius->0], RectangleBox[{7., 0}, {7.2, 140},
          RoundingRadius->0], RectangleBox[{7.2, 0}, {7.4, 98},
          RoundingRadius->0], RectangleBox[{7.4, 0}, {7.6, 100},
          RoundingRadius->0], RectangleBox[{7.6, 0}, {7.8, 50},
          RoundingRadius->0], RectangleBox[{7.8, 0}, {8., 84},
          RoundingRadius->0], RectangleBox[{8., 0}, {8.2, 55},
          RoundingRadius->0], RectangleBox[{8.2, 0}, {8.4, 46},
          RoundingRadius->0], RectangleBox[{8.4, 0}, {8.6, 38},
          RoundingRadius->0], RectangleBox[{8.6, 0}, {8.8, 17},
          RoundingRadius->0], RectangleBox[{8.8, 0}, {9., 29},
          RoundingRadius->0], RectangleBox[{9., 0}, {9.2, 32},
          RoundingRadius->0], RectangleBox[{9.2, 0}, {9.4, 23},
          RoundingRadius->0], RectangleBox[{9.4, 0}, {9.6, 17},
          RoundingRadius->0], RectangleBox[{9.6, 0}, {9.8, 7},
          RoundingRadius->0], RectangleBox[{9.8, 0}, {10., 28},
          RoundingRadius->0], RectangleBox[{10., 0}, {10.2, 12},
          RoundingRadius->0], RectangleBox[{10.2, 0}, {10.4, 1},
          RoundingRadius->0], RectangleBox[{10.4, 0}, {10.6, 10},
          RoundingRadius->0], RectangleBox[{10.6, 0}, {10.8, 1},
          RoundingRadius->0], RectangleBox[{10.8, 0}, {11., 2},
          RoundingRadius->0], RectangleBox[{11., 0}, {11.2, 2},
          RoundingRadius->0], RectangleBox[{11.2, 0}, {11.4, 3},
          RoundingRadius->0], RectangleBox[{11.6, 0}, {11.8, 1},
          RoundingRadius->0], RectangleBox[{12., 0}, {12.2, 2},
          RoundingRadius->0]}, {}, {}},
       AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
       Axes->{True, False},
       AxesLabel->{
         FormBox["\"x2\"", TraditionalForm], None},
       AxesOrigin->{-17.4, 0},
       FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
       GridLines->{None, None},
       PlotRange->{{-17.4, 12.2}, {All, All}},
       PlotRangePadding->{{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.1]}},
       Ticks->{Automatic, None}]}], "}"}]}]}], "}"}]], "Output",
 CellChangeTimes->{{3.633016145235283*^9, 3.633016174261404*^9}, 
   3.633016773116061*^9, 3.6330169598133783`*^9, 3.633017072736044*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
MCMCModelFit example/test: straight line\
\>", "Section",
 CellChangeTimes->{{3.532828169389843*^9, 3.532828183295141*^9}, {
  3.532832686977034*^9, 3.532832687321089*^9}, {3.536963664650141*^9, 
  3.536963669409661*^9}, {3.537023856435667*^9, 3.537023856523425*^9}, {
  3.632970749420353*^9, 3.63297075353932*^9}}],

Cell[CellGroupData[{

Cell["Generate fake data with fake errors, then run MCMC routine", \
"Subsubsection",
 CellChangeTimes->{{3.5328281903907*^9, 3.532828206025057*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"error", "=", "2"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dattab", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{
        RowBox[{"5.", "x"}], "-", "3.", "+", 
        RowBox[{"RandomVariate", "[", 
         RowBox[{"NormalDistribution", "[", 
          RowBox[{"0", ",", "error"}], "]"}], 
         StyleBox["]", "DesignDiscussion"]}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "3", ",", ".01"}], "}"}]}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"errors", "=", 
   RowBox[{"Table", "[", 
    RowBox[{"error", ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "3", ",", ".01"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Timing", "[", 
  RowBox[{"mcmc", "=", 
   RowBox[{"MCMCModelFit", "[", 
    RowBox[{"dattab", ",", "errors", ",", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"a", " ", "x"}], "+", "b"}], ")"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"a", ",", "3", ",", ".1", ",", "Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"b", ",", 
         RowBox[{"-", "1"}], ",", ".1", ",", "Real"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", "x", "}"}], ",", "100000", ",", 
     RowBox[{"\"\<MakeBestFitPlot\>\"", "\[Rule]", "True"}]}], "]"}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.532470503043046*^9, 3.532470548641507*^9}, 
   3.532474583488461*^9, {3.532476805885297*^9, 3.532476807572055*^9}, {
   3.53247800497998*^9, 3.532478024954958*^9}, {3.532478280008748*^9, 
   3.532478290841416*^9}, 3.532479089348965*^9, {3.532623520760719*^9, 
   3.532623526575855*^9}, 3.532623679316721*^9, 3.532637787357731*^9, {
   3.532638327828121*^9, 3.532638328785019*^9}, {3.532639522569953*^9, 
   3.532639523491057*^9}, 3.532639778869751*^9, 3.532640120645333*^9, {
   3.53264037280981*^9, 3.532640375493689*^9}, {3.532640857760223*^9, 
   3.532640881211286*^9}, {3.532640919149064*^9, 3.532641020211923*^9}, {
   3.53264111761439*^9, 3.532641118354222*^9}, {3.532641262895351*^9, 
   3.53264128665473*^9}, {3.532641429995776*^9, 3.532641430557729*^9}, {
   3.532641702949858*^9, 3.532641703211575*^9}, {3.532721620704339*^9, 
   3.532721649787036*^9}, {3.532721725465728*^9, 3.532721725920355*^9}, {
   3.53272175817665*^9, 3.532721762613114*^9}, {3.532724683467804*^9, 
   3.532724684144259*^9}, {3.532725170886997*^9, 3.532725172882475*^9}, 
   3.532725205159178*^9, {3.532741471040704*^9, 3.532741471837734*^9}, {
   3.532741512792196*^9, 3.532741517014777*^9}, {3.532742638033692*^9, 
   3.532742693232846*^9}, {3.532744025702086*^9, 3.532744027772488*^9}, 
   3.532745607067218*^9, {3.532745638161403*^9, 3.532745638412065*^9}, {
   3.53275648187515*^9, 3.532756481921105*^9}, 3.532756519814057*^9, {
   3.532803998689296*^9, 3.532803999417313*^9}, 3.532804090839958*^9, 
   3.532813341919458*^9, {3.53282948034221*^9, 3.532829480672374*^9}, 
   3.532829519569096*^9, {3.532904966979572*^9, 3.532904967838793*^9}, {
   3.6305585511394777`*^9, 3.630558551450108*^9}, {3.6305586183363047`*^9, 
   3.630558625726315*^9}, {3.635049339498602*^9, 3.6350493404186697`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"60.7579309999999992442099028266966342926`7.804202889619448", ",", 
   RowBox[{"\<\"MCMCResult\"\>", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"a", "\[Rule]", "4.969882242329237`"}], ",", 
       RowBox[{"b", "\[Rule]", 
        RowBox[{"-", "2.969873720300513`"}]}]}], "}"}], 
     ",", "\<\"\[LeftSkeleton]100000\[RightSkeleton]\"\>"}], "]"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.532473060443391*^9, 3.532473065907316*^9}, 
   3.532473169696643*^9, 3.532473313631024*^9, 3.532474584575818*^9, 
   3.532474818820407*^9, 3.53247549154966*^9, 3.532475544699375*^9, 
   3.532475599044082*^9, 3.532476752500829*^9, 3.532477167849952*^9, 
   3.532477268712719*^9, 3.532477401481516*^9, 3.532477641581418*^9, 
   3.532477687191351*^9, 3.532477764399882*^9, 3.532477828442769*^9, {
   3.532478022114006*^9, 3.532478025336572*^9}, {3.532478281424607*^9, 
   3.532478291345506*^9}, 3.532478536295085*^9, 3.53247908978689*^9, 
   3.532623560649061*^9, 3.532623631715847*^9, 3.532623756090025*^9, 
   3.53263819969629*^9, 3.53263835885544*^9, 3.532639560834578*^9, 
   3.532639675177945*^9, {3.532639759479009*^9, 3.532639812618476*^9}, 
   3.532640159079712*^9, {3.532640362275654*^9, 3.532640376160499*^9}, 
   3.532640415049622*^9, 3.532640739354101*^9, {3.532640848339893*^9, 
   3.532640875090512*^9}, {3.532640912161776*^9, 3.532641001846752*^9}, 
   3.532641053772083*^9, 3.532641143395295*^9, 3.532641181600721*^9, 
   3.532641214140642*^9, {3.532641266153171*^9, 3.532641288045617*^9}, 
   3.532641455285237*^9, 3.532641711591224*^9, 3.532669552444262*^9, 
   3.532718975963412*^9, 3.53271907655373*^9, {3.532719244084182*^9, 
   3.532719250709148*^9}, 3.53272159916773*^9, 3.532721652811228*^9, 
   3.532721709876041*^9, 3.532721741447227*^9, 3.532721800470679*^9, 
   3.532722177519086*^9, {3.53272224745859*^9, 3.532722275243825*^9}, 
   3.532722603406935*^9, 3.532722676158246*^9, 3.532724727026152*^9, 
   3.532725091346218*^9, 3.532725139885261*^9, {3.532725178066734*^9, 
   3.532725207203033*^9}, 3.532725252418734*^9, 3.532741518388848*^9, 
   3.532741649673482*^9, {3.532742649750627*^9, 3.532742698081972*^9}, 
   3.532744078363848*^9, 3.532745173058586*^9, 3.532745399879708*^9, {
   3.532745615983711*^9, 3.532745669508604*^9}, 3.532745704270217*^9, 
   3.532756499701463*^9, 3.532756547305325*^9, 3.532802535721067*^9, 
   3.532802952170231*^9, 3.53280299560712*^9, 3.532803224716802*^9, 
   3.532804009366049*^9, 3.532804097615051*^9, 3.532813349072314*^9, {
   3.532813382094482*^9, 3.532813403715179*^9}, {3.532829517819882*^9, 
   3.532829542973808*^9}, 3.532829705952082*^9, 3.532877412653538*^9, 
   3.532904232498519*^9, {3.532904456128675*^9, 3.53290451156397*^9}, 
   3.532904939281447*^9, 3.53290501376286*^9, 3.532914444179324*^9, 
   3.532978369460804*^9, 3.536961012757203*^9, 3.537024951642039*^9, 
   3.53703010218586*^9, 3.630558546211481*^9, 3.630558606207419*^9, 
   3.630558680749984*^9, 3.632969231455173*^9, 3.632969328532428*^9, 
   3.632969489287829*^9, 3.632969751067328*^9, 3.6329698299185743`*^9, 
   3.632969970138069*^9, 3.6330172471609383`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Available data from MCMC", "Subsubsection",
 CellChangeTimes->{{3.532829228760613*^9, 3.532829249463151*^9}, 
   3.532890010591705*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"mcmc", "[", "\"\<Properties\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.532472280163117*^9, 3.532472288076469*^9}, {
   3.532472320917828*^9, 3.532472324847211*^9}, {3.532472593945009*^9, 
   3.532472602067549*^9}, {3.532472726171518*^9, 3.532472739759409*^9}, {
   3.532473800024789*^9, 3.532473810190777*^9}, {3.532473861320991*^9, 
   3.532474050745886*^9}, {3.532474296275855*^9, 3.532474310162503*^9}, {
   3.532474668540355*^9, 3.532474680668287*^9}, {3.532475638270148*^9, 
   3.532475674120084*^9}, {3.532477375049203*^9, 3.532477380845759*^9}, {
   3.532478060476784*^9, 3.532478124808575*^9}, {3.532478596630058*^9, 
   3.532478650730509*^9}, {3.532478698265753*^9, 3.532478813791011*^9}, {
   3.53247885604622*^9, 3.532478913793344*^9}, 3.532478953020617*^9, {
   3.532623249621946*^9, 3.5326232576917*^9}, {3.532623315356314*^9, 
   3.532623332607389*^9}, {3.53262344295765*^9, 3.532623443381827*^9}, {
   3.532639549598212*^9, 3.532639554697877*^9}, {3.532641292764724*^9, 
   3.53264130709235*^9}, {3.532641413842683*^9, 3.532641422742432*^9}, {
   3.532741613802932*^9, 3.532741615294134*^9}, {3.532742621142598*^9, 
   3.532742626185339*^9}, {3.532743996676396*^9, 3.53274399902497*^9}, {
   3.53274544235384*^9, 3.532745460499028*^9}, 3.532829251568089*^9, {
   3.532829482705209*^9, 3.532829483013887*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"BestFitParameters\"\>", ",", "\<\"ParameterErrors\"\>", 
   ",", "\<\"AverageAcceptance\"\>", ",", "\<\"TimeSpent\"\>", 
   ",", "\<\"NumSteps\"\>", ",", "\<\"Parameters\"\>", 
   ",", "\<\"ProposalSpreads\"\>", ",", "\<\"ParameterDomains\"\>", 
   ",", "\<\"BurnFraction\"\>", ",", "\<\"BurnEnd\"\>", 
   ",", "\<\"CorrelationMatrix\"\>", ",", "\<\"ParameterRun\"\>", 
   ",", "\<\"ParametersLogPRun\"\>", ",", "\<\"TransitionLogPRun\"\>", 
   ",", "\<\"BestFitPlot\"\>", ",", "\<\"ParameterRunPlots\"\>", 
   ",", "\<\"ParameterHistograms\"\>"}], "}"}]], "Output",
 CellChangeTimes->{3.532829256664527*^9, 3.532829546930204*^9, 
  3.532904849881196*^9, 3.535932304843434*^9, 3.536959405605065*^9, 
  3.6305586103403997`*^9, 3.630558685984651*^9, 3.632970037910736*^9, 
  3.633017247310833*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Results", "Subsubsection",
 CellChangeTimes->{{3.532832753373936*^9, 3.53283275505381*^9}, 
   3.532832850258202*^9, {3.532890007607726*^9, 3.53289000991167*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"mcmc", "[", 
  RowBox[{"{", 
   RowBox[{
   "\"\<BestFitParameters\>\"", ",", "\"\<ParameterErrors\>\"", ",", 
    "\"\<AverageAcceptance\>\"", ",", "\"\<CorrelationMatrix\>\""}], "}"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"mcmc", "[", "\"\<ParameterHistograms\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"mcmc", "[", "\"\<BestFitPlot\>\"", "]"}]}], "Input",
 CellChangeTimes->{{3.532814146681756*^9, 3.532814265090119*^9}, {
   3.532814352348615*^9, 3.532814472976097*^9}, {3.532814547936155*^9, 
   3.532814591067298*^9}, {3.532814669642845*^9, 3.532814712289361*^9}, {
   3.532814757028062*^9, 3.532814817226626*^9}, {3.532814890354059*^9, 
   3.532814891008666*^9}, {3.532814950889757*^9, 3.532814962349358*^9}, {
   3.532815083635743*^9, 3.532815159185936*^9}, {3.532815281132838*^9, 
   3.532815297604359*^9}, {3.532815450502363*^9, 3.532815454602201*^9}, {
   3.532815723170902*^9, 3.532815727481724*^9}, {3.532815990361492*^9, 
   3.532815993442109*^9}, {3.532816059409387*^9, 3.532816059661065*^9}, 
   3.532822554338734*^9, 3.532822618007026*^9, {3.532827552903625*^9, 
   3.532827557346223*^9}, {3.532832746702154*^9, 3.532832748040124*^9}, 
   3.532877311434612*^9, {3.537024912324957*^9, 3.537024928517816*^9}, 
   3.537030079820947*^9, {3.633017251609207*^9, 3.633017254544438*^9}, {
   3.633017286298088*^9, 3.633017290723155*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"\<\"BestFitParameters\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "\[Rule]", "4.969882242329237`"}], ",", 
      RowBox[{"b", "\[Rule]", 
       RowBox[{"-", "2.969873720300513`"}]}]}], "}"}]}], ",", 
   RowBox[{"\<\"ParameterErrors\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "\[Rule]", "0.13209538623319161`"}], ",", 
      RowBox[{"b", "\[Rule]", "0.22909386250862873`"}]}], "}"}]}], ",", 
   RowBox[{"\<\"AverageAcceptance\"\>", "\[Rule]", "0.4625133034327949`"}], 
   ",", 
   RowBox[{"\<\"CorrelationMatrix\"\>", "\[Rule]", 
    TagBox[
     RowBox[{"(", "\[NoBreak]", GridBox[{
        {"1.0000000000000053`", 
         RowBox[{"-", "0.8688708423934898`"}]},
        {
         RowBox[{"-", "0.8688708423934898`"}], "0.9999999999999902`"}
       },
       GridBoxAlignment->{
        "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
         "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.7]}, 
           Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
     Function[BoxForm`e$, 
      MatrixForm[BoxForm`e$]]]}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.532814194723003*^9, {3.532814242291733*^9, 3.532814265679334*^9}, {
   3.532814558103692*^9, 3.532814591328485*^9}, {3.532814769881647*^9, 
   3.532814793244091*^9}, 3.532814863450305*^9, 3.532815013362019*^9, {
   3.532815105988823*^9, 3.532815146007161*^9}, 3.53281524954426*^9, 
   3.532815334175509*^9, 3.532815501545065*^9, {3.532816064314044*^9, 
   3.532816088635428*^9}, 3.532816138304587*^9, 3.532822602580641*^9, 
   3.532822664517603*^9, 3.53282760304772*^9, 3.532827682668352*^9, 
   3.532827740272399*^9, 3.532832981795433*^9, {3.532877301440702*^9, 
   3.532877312665293*^9}, 3.532877375844033*^9, 3.532889984752663*^9, 
   3.532904205648501*^9, 3.532904851184289*^9, 3.532914387807757*^9, 
   3.535932307161292*^9, 3.53695877452464*^9, 3.536959088755789*^9, 
   3.536959264590485*^9, 3.536959298827192*^9, 3.536959390204209*^9, {
   3.536960048796137*^9, 3.536960071883321*^9}, 3.536960517888471*^9, 
   3.536960716151445*^9, 3.536960750678051*^9, 3.537024916147507*^9, 
   3.53702495175086*^9, 3.537030112309099*^9, 3.630558691091366*^9, 
   3.632969835664494*^9, 3.632970044558853*^9, 3.633017247362913*^9, {
   3.63301728711793*^9, 3.6330172916505737`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   GraphicsBox[
    {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
     EdgeForm[Opacity[0.027999999999999997`]], {}, 
     {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
      EdgeForm[Opacity[0.027999999999999997`]], 
      RectangleBox[{4.45, 0}, {4.46, 3},
       RoundingRadius->0], RectangleBox[{4.5, 0}, {4.51, 6},
       RoundingRadius->0], RectangleBox[{4.51, 0}, {4.52, 3},
       RoundingRadius->0], RectangleBox[{4.52, 0}, {4.53, 14},
       RoundingRadius->0], RectangleBox[{4.53, 0}, {4.54, 15},
       RoundingRadius->0], RectangleBox[{4.54, 0}, {4.55, 13},
       RoundingRadius->0], RectangleBox[{4.55, 0}, {4.56, 13},
       RoundingRadius->0], RectangleBox[{4.56, 0}, {4.57, 37},
       RoundingRadius->0], RectangleBox[{4.57, 0}, {4.58, 24},
       RoundingRadius->0], RectangleBox[{4.58, 0}, {4.59, 61},
       RoundingRadius->0], RectangleBox[{4.59, 0}, {4.6, 30},
       RoundingRadius->0], RectangleBox[{4.6, 0}, {4.61, 82},
       RoundingRadius->0], RectangleBox[{4.61, 0}, {4.62, 56},
       RoundingRadius->0], RectangleBox[{4.62, 0}, {4.63, 92},
       RoundingRadius->0], RectangleBox[{4.63, 0}, {4.64, 134},
       RoundingRadius->0], RectangleBox[{4.64, 0}, {4.65, 135},
       RoundingRadius->0], RectangleBox[{4.65, 0}, {4.66, 115},
       RoundingRadius->0], RectangleBox[{4.66, 0}, {4.67, 224},
       RoundingRadius->0], RectangleBox[{4.67, 0}, {4.68, 208},
       RoundingRadius->0], RectangleBox[{4.68, 0}, {4.69, 273},
       RoundingRadius->0], RectangleBox[{4.69, 0}, {4.7, 257},
       RoundingRadius->0], RectangleBox[{4.7, 0}, {4.71, 436},
       RoundingRadius->0], RectangleBox[{4.71, 0}, {4.72, 375},
       RoundingRadius->0], RectangleBox[{4.72, 0}, {4.73, 480},
       RoundingRadius->0], RectangleBox[{4.73, 0}, {4.74, 624},
       RoundingRadius->0], RectangleBox[{4.74, 0}, {4.75, 659},
       RoundingRadius->0], RectangleBox[{4.75, 0}, {4.76, 728},
       RoundingRadius->0], RectangleBox[{4.76, 0}, {4.77, 919},
       RoundingRadius->0], RectangleBox[{4.77, 0}, {4.78, 923},
       RoundingRadius->0], RectangleBox[{4.78, 0}, {4.79, 1072},
       RoundingRadius->0], RectangleBox[{4.79, 0}, {4.8, 1144},
       RoundingRadius->0], RectangleBox[{4.8, 0}, {4.81, 1315},
       RoundingRadius->0], RectangleBox[{4.81, 0}, {4.82, 1323},
       RoundingRadius->0], RectangleBox[{4.82, 0}, {4.83, 1571},
       RoundingRadius->0], RectangleBox[{4.83, 0}, {4.84, 1556},
       RoundingRadius->0], RectangleBox[{4.84, 0}, {4.85, 1648},
       RoundingRadius->0], RectangleBox[{4.85, 0}, {4.86, 1835},
       RoundingRadius->0], RectangleBox[{4.86, 0}, {4.87, 1882},
       RoundingRadius->0], RectangleBox[{4.87, 0}, {4.88, 2119},
       RoundingRadius->0], RectangleBox[{4.88, 0}, {4.89, 2199},
       RoundingRadius->0], RectangleBox[{4.89, 0}, {4.9, 2152},
       RoundingRadius->0], RectangleBox[{4.9, 0}, {4.91, 2547},
       RoundingRadius->0], RectangleBox[{4.91, 0}, {4.92, 2492},
       RoundingRadius->0], RectangleBox[{4.92, 0}, {4.93, 2577},
       RoundingRadius->0], RectangleBox[{4.93, 0}, {4.94, 2625},
       RoundingRadius->0], RectangleBox[{4.94, 0}, {4.95, 2598},
       RoundingRadius->0], RectangleBox[{4.95, 0}, {4.96, 2639},
       RoundingRadius->0], RectangleBox[{4.96, 0}, {4.97, 2594},
       RoundingRadius->0], RectangleBox[{4.97, 0}, {4.98, 2726},
       RoundingRadius->0], RectangleBox[{4.98, 0}, {4.99, 2713},
       RoundingRadius->0], RectangleBox[{4.99, 0}, {5., 2541},
       RoundingRadius->0], RectangleBox[{5., 0}, {5.01, 2530},
       RoundingRadius->0], RectangleBox[{5.01, 0}, {5.02, 2367},
       RoundingRadius->0], RectangleBox[{5.02, 0}, {5.03, 2451},
       RoundingRadius->0], RectangleBox[{5.03, 0}, {5.04, 2518},
       RoundingRadius->0], RectangleBox[{5.04, 0}, {5.05, 2510},
       RoundingRadius->0], RectangleBox[{5.05, 0}, {5.06, 2354},
       RoundingRadius->0], RectangleBox[{5.06, 0}, {5.07, 2106},
       RoundingRadius->0], RectangleBox[{5.07, 0}, {5.08, 1925},
       RoundingRadius->0], RectangleBox[{5.08, 0}, {5.09, 1887},
       RoundingRadius->0], RectangleBox[{5.09, 0}, {5.1, 1719},
       RoundingRadius->0], RectangleBox[{5.1, 0}, {5.11, 1748},
       RoundingRadius->0], RectangleBox[{5.11, 0}, {5.12, 1561},
       RoundingRadius->0], RectangleBox[{5.12, 0}, {5.13, 1346},
       RoundingRadius->0], RectangleBox[{5.13, 0}, {5.14, 1254},
       RoundingRadius->0], RectangleBox[{5.14, 0}, {5.15, 1167},
       RoundingRadius->0], RectangleBox[{5.15, 0}, {5.16, 1164},
       RoundingRadius->0], RectangleBox[{5.16, 0}, {5.17, 849},
       RoundingRadius->0], RectangleBox[{5.17, 0}, {5.18, 904},
       RoundingRadius->0], RectangleBox[{5.18, 0}, {5.19, 733},
       RoundingRadius->0], RectangleBox[{5.19, 0}, {5.2, 597},
       RoundingRadius->0], RectangleBox[{5.2, 0}, {5.21, 572},
       RoundingRadius->0], RectangleBox[{5.21, 0}, {5.22, 514},
       RoundingRadius->0], RectangleBox[{5.22, 0}, {5.23, 327},
       RoundingRadius->0], RectangleBox[{5.23, 0}, {5.24, 350},
       RoundingRadius->0], RectangleBox[{5.24, 0}, {5.25, 288},
       RoundingRadius->0], RectangleBox[{5.25, 0}, {5.26, 241},
       RoundingRadius->0], RectangleBox[{5.26, 0}, {5.27, 229},
       RoundingRadius->0], RectangleBox[{5.27, 0}, {5.28, 178},
       RoundingRadius->0], RectangleBox[{5.28, 0}, {5.29, 187},
       RoundingRadius->0], RectangleBox[{5.29, 0}, {5.3, 124},
       RoundingRadius->0], RectangleBox[{5.3, 0}, {5.31, 114},
       RoundingRadius->0], RectangleBox[{5.31, 0}, {5.32, 82},
       RoundingRadius->0], RectangleBox[{5.32, 0}, {5.33, 73},
       RoundingRadius->0], RectangleBox[{5.33, 0}, {5.34, 47},
       RoundingRadius->0], RectangleBox[{5.34, 0}, {5.35, 21},
       RoundingRadius->0], RectangleBox[{5.35, 0}, {5.36, 38},
       RoundingRadius->0], RectangleBox[{5.36, 0}, {5.37, 29},
       RoundingRadius->0], RectangleBox[{5.37, 0}, {5.38, 15},
       RoundingRadius->0], RectangleBox[{5.38, 0}, {5.39, 13},
       RoundingRadius->0], RectangleBox[{5.39, 0}, {5.4, 24},
       RoundingRadius->0], RectangleBox[{5.4, 0}, {5.41, 18},
       RoundingRadius->0], RectangleBox[{5.41, 0}, {5.42, 5},
       RoundingRadius->0], RectangleBox[{5.42, 0}, {5.43, 9},
       RoundingRadius->0], RectangleBox[{5.44, 0}, {5.45, 4},
       RoundingRadius->0], RectangleBox[{5.48, 0}, {5.49, 2},
       RoundingRadius->0]}, {}, {}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, False},
    AxesLabel->{
      FormBox["\"a\"", TraditionalForm], None},
    AxesOrigin->{4.45, 0},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    PlotRange->{{4.45, 5.49}, {All, All}},
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.02], 
       Scaled[0.1]}},
    Ticks->{Automatic, None}], ",", 
   GraphicsBox[
    {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
     EdgeForm[Opacity[0.105]], {}, 
     {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
      EdgeForm[Opacity[0.105]], RectangleBox[{-3.84, 0}, {-3.82, 1},
       RoundingRadius->0], RectangleBox[{-3.82, 0}, {-3.8, 9},
       RoundingRadius->0], RectangleBox[{-3.8, 0}, {-3.78, 1},
       RoundingRadius->0], RectangleBox[{-3.78, 0}, {-3.76, 2},
       RoundingRadius->0], RectangleBox[{-3.76, 0}, {-3.74, 13},
       RoundingRadius->0], RectangleBox[{-3.74, 0}, {-3.72, 4},
       RoundingRadius->0], RectangleBox[{-3.72, 0}, {-3.7, 11},
       RoundingRadius->0], RectangleBox[{-3.7, 0}, {-3.68, 12},
       RoundingRadius->0], RectangleBox[{-3.68, 0}, {-3.66, 35},
       RoundingRadius->0], RectangleBox[{-3.66, 0}, {-3.64, 36},
       RoundingRadius->0], RectangleBox[{-3.64, 0}, {-3.62, 24},
       RoundingRadius->0], RectangleBox[{-3.62, 0}, {-3.6, 42},
       RoundingRadius->0], RectangleBox[{-3.6, 0}, {-3.58, 77},
       RoundingRadius->0], RectangleBox[{-3.58, 0}, {-3.56, 103},
       RoundingRadius->0], RectangleBox[{-3.56, 0}, {-3.54, 111},
       RoundingRadius->0], RectangleBox[{-3.54, 0}, {-3.52, 135},
       RoundingRadius->0], RectangleBox[{-3.52, 0}, {-3.5, 210},
       RoundingRadius->0], RectangleBox[{-3.5, 0}, {-3.48, 190},
       RoundingRadius->0], RectangleBox[{-3.48, 0}, {-3.46, 274},
       RoundingRadius->0], RectangleBox[{-3.46, 0}, {-3.44, 363},
       RoundingRadius->0], RectangleBox[{-3.44, 0}, {-3.42, 451},
       RoundingRadius->0], RectangleBox[{-3.42, 0}, {-3.4, 486},
       RoundingRadius->0], RectangleBox[{-3.4, 0}, {-3.38, 543},
       RoundingRadius->0], RectangleBox[{-3.38, 0}, {-3.36, 775},
       RoundingRadius->0], RectangleBox[{-3.36, 0}, {-3.34, 837},
       RoundingRadius->0], RectangleBox[{-3.34, 0}, {-3.32, 989},
       RoundingRadius->0], RectangleBox[{-3.32, 0}, {-3.3, 1109},
       RoundingRadius->0], RectangleBox[{-3.3, 0}, {-3.28, 1163},
       RoundingRadius->0], RectangleBox[{-3.28, 0}, {-3.26, 1367},
       RoundingRadius->0], RectangleBox[{-3.26, 0}, {-3.24, 1535},
       RoundingRadius->0], RectangleBox[{-3.24, 0}, {-3.22, 1607},
       RoundingRadius->0], RectangleBox[{-3.22, 0}, {-3.2, 1886},
       RoundingRadius->0], RectangleBox[{-3.2, 0}, {-3.18, 1979},
       RoundingRadius->0], RectangleBox[{-3.18, 0}, {-3.16, 2076},
       RoundingRadius->0], RectangleBox[{-3.16, 0}, {-3.14, 2278},
       RoundingRadius->0], RectangleBox[{-3.14, 0}, {-3.12, 2619},
       RoundingRadius->0], RectangleBox[{-3.12, 0}, {-3.1, 2642},
       RoundingRadius->0], RectangleBox[{-3.1, 0}, {-3.08, 2791},
       RoundingRadius->0], RectangleBox[{-3.08, 0}, {-3.06, 3050},
       RoundingRadius->0], RectangleBox[{-3.06, 0}, {-3.04, 2760},
       RoundingRadius->0], RectangleBox[{-3.04, 0}, {-3.02, 2843},
       RoundingRadius->0], RectangleBox[{-3.02, 0}, {-3., 3169},
       RoundingRadius->0], RectangleBox[{-3., 0}, {-2.98, 3190},
       RoundingRadius->0], RectangleBox[{-2.98, 0}, {-2.96, 3100},
       RoundingRadius->0], RectangleBox[{-2.96, 0}, {-2.94, 3011},
       RoundingRadius->0], RectangleBox[{-2.94, 0}, {-2.92, 2855},
       RoundingRadius->0], RectangleBox[{-2.92, 0}, {-2.9, 3052},
       RoundingRadius->0], RectangleBox[{-2.9, 0}, {-2.88, 3021},
       RoundingRadius->0], RectangleBox[{-2.88, 0}, {-2.86, 2733},
       RoundingRadius->0], RectangleBox[{-2.86, 0}, {-2.84, 2449},
       RoundingRadius->0], RectangleBox[{-2.84, 0}, {-2.82, 2530},
       RoundingRadius->0], RectangleBox[{-2.82, 0}, {-2.8, 2390},
       RoundingRadius->0], RectangleBox[{-2.8, 0}, {-2.78, 2331},
       RoundingRadius->0], RectangleBox[{-2.78, 0}, {-2.76, 2172},
       RoundingRadius->0], RectangleBox[{-2.76, 0}, {-2.74, 1926},
       RoundingRadius->0], RectangleBox[{-2.74, 0}, {-2.72, 1733},
       RoundingRadius->0], RectangleBox[{-2.72, 0}, {-2.7, 1782},
       RoundingRadius->0], RectangleBox[{-2.7, 0}, {-2.68, 1629},
       RoundingRadius->0], RectangleBox[{-2.68, 0}, {-2.66, 1399},
       RoundingRadius->0], RectangleBox[{-2.66, 0}, {-2.64, 1188},
       RoundingRadius->0], RectangleBox[{-2.64, 0}, {-2.62, 1048},
       RoundingRadius->0], RectangleBox[{-2.62, 0}, {-2.6, 830},
       RoundingRadius->0], RectangleBox[{-2.6, 0}, {-2.58, 913},
       RoundingRadius->0], RectangleBox[{-2.58, 0}, {-2.56, 729},
       RoundingRadius->0], RectangleBox[{-2.56, 0}, {-2.54, 595},
       RoundingRadius->0], RectangleBox[{-2.54, 0}, {-2.52, 527},
       RoundingRadius->0], RectangleBox[{-2.52, 0}, {-2.5, 428},
       RoundingRadius->0], RectangleBox[{-2.5, 0}, {-2.48, 381},
       RoundingRadius->0], RectangleBox[{-2.48, 0}, {-2.46, 324},
       RoundingRadius->0], RectangleBox[{-2.46, 0}, {-2.44, 273},
       RoundingRadius->0], RectangleBox[{-2.44, 0}, {-2.42, 223},
       RoundingRadius->0], RectangleBox[{-2.42, 0}, {-2.4, 139},
       RoundingRadius->0], RectangleBox[{-2.4, 0}, {-2.38, 115},
       RoundingRadius->0], RectangleBox[{-2.38, 0}, {-2.36, 123},
       RoundingRadius->0], RectangleBox[{-2.36, 0}, {-2.34, 74},
       RoundingRadius->0], RectangleBox[{-2.34, 0}, {-2.32, 56},
       RoundingRadius->0], RectangleBox[{-2.32, 0}, {-2.3, 45},
       RoundingRadius->0], RectangleBox[{-2.3, 0}, {-2.28, 25},
       RoundingRadius->0], RectangleBox[{-2.28, 0}, {-2.26, 21},
       RoundingRadius->0], RectangleBox[{-2.26, 0}, {-2.24, 6},
       RoundingRadius->0], RectangleBox[{-2.24, 0}, {-2.22, 5},
       RoundingRadius->0], RectangleBox[{-2.22, 0}, {-2.2, 6},
       RoundingRadius->0], RectangleBox[{-2.2, 0}, {-2.18, 5},
       RoundingRadius->0], RectangleBox[{-2.18, 0}, {-2.16, 7},
       RoundingRadius->0], RectangleBox[{-2.16, 0}, {-2.14, 4},
       RoundingRadius->0]}, {}, {}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, False},
    AxesLabel->{
      FormBox["\"b\"", TraditionalForm], None},
    AxesOrigin->{-3.84, 0},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    PlotRange->{{-3.84, -2.14}, {All, All}},
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.02], 
       Scaled[0.1]}},
    Ticks->{Automatic, None}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.532814194723003*^9, {3.532814242291733*^9, 3.532814265679334*^9}, {
   3.532814558103692*^9, 3.532814591328485*^9}, {3.532814769881647*^9, 
   3.532814793244091*^9}, 3.532814863450305*^9, 3.532815013362019*^9, {
   3.532815105988823*^9, 3.532815146007161*^9}, 3.53281524954426*^9, 
   3.532815334175509*^9, 3.532815501545065*^9, {3.532816064314044*^9, 
   3.532816088635428*^9}, 3.532816138304587*^9, 3.532822602580641*^9, 
   3.532822664517603*^9, 3.53282760304772*^9, 3.532827682668352*^9, 
   3.532827740272399*^9, 3.532832981795433*^9, {3.532877301440702*^9, 
   3.532877312665293*^9}, 3.532877375844033*^9, 3.532889984752663*^9, 
   3.532904205648501*^9, 3.532904851184289*^9, 3.532914387807757*^9, 
   3.535932307161292*^9, 3.53695877452464*^9, 3.536959088755789*^9, 
   3.536959264590485*^9, 3.536959298827192*^9, 3.536959390204209*^9, {
   3.536960048796137*^9, 3.536960071883321*^9}, 3.536960517888471*^9, 
   3.536960716151445*^9, 3.536960750678051*^9, 3.537024916147507*^9, 
   3.53702495175086*^9, 3.537030112309099*^9, 3.630558691091366*^9, 
   3.632969835664494*^9, 3.632970044558853*^9, 3.633017247362913*^9, {
   3.63301728711793*^9, 3.633017292157442*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1:eJwVxXk41GkcAPAxjtdRStlZuc/51ajV08qm4v1GKcqxqRlHqx1XklsROpBR
KzM5i8og245ot9LBpMyMxHSYzVG2R4hGu46aGUTu3f3j83zMAqP3hpBJJJL7
f/7/6+6oEq/oGMfNRT4LexqRMDOYWP0n1QOzPFQ5sjokbP0sDWdTA3CbSo1R
3i0klN91zo6gRuGwWC2HrqtImE4ZNzxAPYUL3RpSmIlI+KLFbdCbysHyOYvp
Y2uRMLos4ZknlYt5TNk496KaUJSdXe9O/QPrWmcOycNVhapqcWgoXIAZxcZc
Wj9Z6HqaybpPb8GNh3PPx6eThLVJIT3X2ySYsBVHuRycE7z1O2ITl9iBS3Y7
+7btmxLo7GSHiqALBxLx95PLxgTLO0NqfvDvxqPxil2l2iMCC9OIG6zAPlyn
d8JUqtUv2NQT+WJbXj9O1RNFXnotEYhmUvd0XvmAyyZTTTTpd3GYQCxuSB/E
PpOti/THXbg4iKf/zc9/YykjoHHGfBCv8+mfXAgZwnMutL6x9TLcO+4pAdcR
XEd3WcJwncBjfavWU/Z/wpYdZhSNg9M4pzr5EIMhw48uOFR8OrCAqcvU3Y9f
kWO17Xv7fNOV4EFMajWnVIGbpJcteOoq0GmVj37MG8N+Fho2g0FqYHmmY/VP
xeP4XOaSWLZCHey9+mxLr0zgVxq3JzzitaAnhuXIzv6C5bQkrPR8KdTY+y59
mjuJveuOvOesWQ4UesvbStYUNqj6PaPQRwfwACm38ehXLKsWPKtMWwHFlLCl
1OPTWBsMaYonKyGde/jsxvAZvKpC6/MduS6USIqaOTGzOLZoRyvPjgIno/Ll
RnFz+HWJp3tVwrcwwlyt5xs4j63iRtdblevB+flhld7QBSz6q8PmtXQVPBzd
KdP2W8Su2h558ysM4I3VpoHNliTo9i4q3LDFEMLWBNnkXycB33rdvasnjEBE
90/ZZqwEZ9r32Z2uNIbvfYZv6JYrQbFWS8fFTyYQccaly8GADBKN0PB8jimc
C1WfUconQ2ehVz3TwgweGzEXh3WVgXzkffHzJjPgL2Qq0zjK8BvPvira3xwk
d52H2ToqELNu065bC+bw1DS0OTtPBRzruXZfuBaQUbu/vF9TFTJuS+iJtpZw
wPxdgD9bFeSfK1QK3ljC7AMbA2ukBu0FTtLRSCs4oTz0svCUGtQ5ueruIVOB
YmnPtCIhaLb/0rajggqJUfQJzSQEbkXhohR7AgztgsXUFATaA4ok/a0ECOdj
rzqdRNBpnbSB70iAJpu9PTkNQYDgbMWkMwHc6qaCoV8QHP34KyvWg4DmfzZs
FF9GcM22z/VQEAG6QcsSWI8QzLzybt/LJoBPM3Irb0DQoN+dpbhAQMAYzfix
EEFGcKBzTh4BlWkuzRNNCJZ/jbnXeomALWUnKcGtCKgmnIu7rhEQ2DPywKkX
gVek2M+xlgB0fTor4D0CSq3nyh4+ATcj0MHkAQTvSF0vUh4RMDlrjmo+Iggr
GNzKFxGQpe/HMJMhOFVPNrF9SYDNwCFrBwWC7apZXe0SAjpvHFv0GUeg6amT
E9tGgLF9Li9nCkHBgInSrTcEPCGVptycRuC3lsd3f0tAmPimp3gWgWnCd3Gj
3QQsyXloIZ1HIBXcp53vJeAOQzy1uIigSsPhw5p+Av4F+uAwbw==
      "]]}}, {{}, 
    {RGBColor[0.24720000000000014`, 0.24, 0.6], PointBox[CompressedData["
1:eJw11nk81PkfB/C5Z3KM27Du+0ratlOb92crpWP7lWprpd3KJrVEmyMk2122
Tdk2q3vTdohOaQkzhUSUMzYdxpFbgzEGw/zwfc/3H48v5vP5vF/P9/uD1ZZg
760MGo3mSqfRxr+qnperZ6X5pmmIovXvLBZHHYI488jaM3UG+H4GXmTGzBI4
6Iv+NT/cserfS0Drj0vLduPjz6/B9Z7fM8/lWorOJY0/t6A4OvHnzBI+/v4d
2Hj7q+4MkUzYuWr8O/eB8zBQ7eYyHn4+HXy3piimftQXqdUkh8xTewxTppOr
56UCXC8TvETs5oedk0ROvvHP+h2zoe/cQzsao09IrZ8L9wRnCqcyP8C1sU/X
JIsgyynQ5pn3MO73FEje3W82vu4QfjXx5MGodpnr2VCxkNo/H6ZVbo74zqdP
mNfvOLZDASzJuWV1qlYLz1MI1w7Iskcy6CLviQ1fgEawS97/qpVC6nxFUOa6
W+uH531CcdT4gsXAoS/S1Rrh4XlLYCrT5UK4KEu4a/x4IaVwYcY9edY+Bubz
Co4frp7tvFsKlEYZmGqY3Fj7XlNE1VMG1YK/fUnmoNBrYoNyeHvpQFDk5gas
rxw6DNIu/BAsFY7v5htfAXuqtyWbtfFFVL2VsDjwK78daX3CiXJqKmHfj7SG
E/vphKq/CuYO6Gz5Nogtshg/jnk1cF9Et+6VN2Ie1TDbJMP4Uo++aJv/+PMG
qm1DxXLBIFD51ED5+S1RJv82CcdX079TA5GfS9398yRCKq9a+NK8qDaiWUMk
G1+uvxbEOnOmTnXSRt//QM5K/fCgVVvkMbHgW0jN+b7f60IdUHm+hY+roqOz
S98KJ453uA7C+Ff9XqUrhFS+76Dkc90vzT4iYWnJ+PMOBB2adxYrFZj3e3if
IHP5Z4EEDCYO+AF+Cnv4ztSjEvvnA9jy/GYnpLNFE8v5foT6hAOWszPPokc9
0PY7bk38kUmoeurh19GKpo01Fdhv9dDTHilZ18jG+urhSm7hAntxF1BeYrAL
qI1wiBMDVa8YwHi7nZm4Fyg/MWiYzK7d5cQmVP0NcKxpZfVPVeqE8myA0M3f
eakLOzCPBriZpu61dFYcUL6NUO1g80dYMENE5dMIHh+P6FUfl6F3I/g+Ldq9
mqNNqLyaQOOa25dJhZXY/03QGrv04QibJaLya4Kzys2Dh+14hOqHZtAt7VYW
5moTKs9muHD09Q/v3WRA9UczXOb9ETqoGBBS+X6CEx4L2DFv9AjVL5/gaNdM
3bCgIaDy/gRyv5Sb08seY/+0QEO1RCFsUQCVfwskdhcJvQ9JgOqnFhC5n43k
7VQKKY9WCCneH/DgxTBQHq2wb+H6mbEh/ejRCt4n41Ij6+iE8miFqLd1axc6
teD8tEGt52rZSXk+zm8brDyVvy/3fifOUxs8y98cI/jZAD3aQdo8slesrktO
TXi0g9zLz9dsRj7Oeztc0b8+7dLhJ3i/dMDKwG//6TrYCpRHB8w3NXy0d6Uc
KI8O2L2Avqb0Hg3vh05Q083vWjM0CpRHJ/wwjbXebAqXUB6dsD7ff+jqvf+E
lEcXTA/8hj9pDx09ukBj+OmBD2P1Uh5d8F0Wybt9S4H93g0J6Qm6eSVs9OiG
M3DYalh7BD26Ifoqf8W/ATL0+AxWq2ppPmrahPL4DBuinnWxCniE8vgMGfcX
s//RlKKHBIrc20bWhWpif0mg/4Q8OpMrQx8J/Kq3ZErWqCbeNxJYckRUX3NF
i1BeEjgZ3mwSYqCB9UrA7+dRAb9BD/0kcK0kvqx4rA+o+ntAu09968nJAzhf
PZD8WOl7LEEBVB498Od9dY5OihmhfHuANmnt6itNhdivPfA1o7m54pEaobx7
gMeUahgksgiVVy8QmnrdQ5+bQsq/FyztlxtOtcgXUvn1QnyCmB93gI7z2Qt3
oytaLPqVmGcv/LE95VJaEJ1Q/dELF1+6SQtv9mC+fXDtamLiz/9NIlS/9EG8
v4vjiBsH8+6DKu+FNzTu6hCqf/ogJjTtoPCQHOehD76IL/fh39MjVD/1wV/x
fS2NYUaE8pDC6KOpu7ntbPSQwp1drwt6A/Tw/pKCZtjpF0orY/SQgueh7KiX
g4M4P1KImt+0Tr1KBz2k8GjmV2sC01UeUjDipYevOF+JHv2g1D+bW/CcSyiP
fvhUoT/6LoyF/dkPxxJm3d01h44e/TDT5r1v6mk97Nd+qGs14exo1kCPfni3
X0wen1NDDxmk5z2wWlKgmkcZLFcGzbx8dAgoDxl0+DudDu7TRw8ZZPv3aMX7
MwnlIYPHuYYVhreN0EMGtBQL25i7xoTyGICWqrVTyk2N0GMAnDisJ1yWPnoM
wA4PhdaaOiXO8wC4eD1YaVJCw3kYgHL1MIsXTTT0GIBTxU/2qfH10UMOe7cs
bLsxRYAeY+9zi3X2fLRFDznwPNVznt+Q4PzL4VdFWf6TAD7OhxzmhSp+m1b1
BXrIITw2O+e6NRM95DByJbV96lLVfT0IKb+c1Uk8KsP5GAS3v/UbBVcs0WMQ
jvldTG2MMUKPQSg+42P0pEDlMQgZLp4s72Uqj0Fof2QY+FJqhB5DkO/1rb/T
fwL0GIL1Z+wzcmq18H4ZAqO7508FeOngfTkEm5h2ZutStNFjCFbERtsN/KXy
GILtkwpjTvAE6DEM8hyBzhmWDnoMgwvvUEhalg56DEOY2HLGsJSN8zEMaxpv
xe6Q2aLHMNztOqpZMWSAHsPAM0v+I/93LnoooN1O3XnhBRP0UMDF7VaHMu6z
0UMBPFbytDd/6uJ8KOBjzp7lS4N46DH2/tuBnd2OJuihAI+RpGDLYXP0UEBK
hWyObaEAPUbA1tzlbxNPbZyPEfh0LqkgaMgIPUYg4NaxZ5e3qjxGgN/kGy4L
EaDHCExuCA/e0G6OHiMgSNk6/8MhQ/QYBSG7c491kRl6jEJYos3S7deM0WMU
5hqPXDTP4qDHKByYbqL7eq8NeozC5uxVTzVDVR6jkFo2xXPDHgP0UIKL/xp/
4++N0UMJdrF+xk2OhuihhDvLcnfeuuyMHkowaMvjJL9ReSihZzjKLVhpjB5K
OHjfezP/e2v0oJEYy66fio3MsZ6xOboM7l7VluhDI+frXmtZdRphfTTisCvJ
nDZiil40ojzhEDDlsgmZKNefRp5k/6g7fYEA/Whkn/WNw9c9DfB+oJFE9+Q2
Tz0r9KSRwOXDNL+x/ag8aMTqfVXMigdG6Esjm3xSYtcvsMR8aMTmXFLCq1+s
0JtGklr2bMoxs8S86GST5oKD52TW6E8nyhU1p/t6TTA/Otk5P+d4X6kA+4FO
nrzWvr5lLx/zpJNIEv6la7FqXukkKGJ6usNYPVS+dOL+seSJ3gkB9gudSLc4
162SGGPedHL2z4NPyyt0sX/oRLL0dl9DnSHmTyfTXtJ/P73ZGvuJTrgCq02+
rrbowSCrfRpSO2tVHgziWVY8Z/X3Kg8GuSFYz7Owt0UPBhGdPx1dvc4SPRhE
4ZUf53pS1X8M4tVrsWjeVhP0YJD9tqbJghod9GCQvQ29Tf1SB/RgkA7npXGh
OSoPBlnpf3rNzHsG6MEgb3fO/JwfaooeDPLcO3nAwMwaPRjk2Jb7f5UdMEUP
JlGc0S2IvmiGHkxiYXlkdUu6LXowyc4Fh9cui7BDDyZhxXsKrhQ5oweTSG+v
zFd42KIHk3y7seT39nor9GCSyhC3ZTd5tujBJDR675HWTCv0YBK/9ymc3YWW
6MEkZnGclIol1ujBJF8PhXGLnK3Qg0ncIpIajx1zQo+xv6MzLA/yHG3Rg0WO
+9hbq7nYoweLdPVuE9P9jNGDRWy2z3qsXa3yYBHbOl7i/Txz9GCRbvvPX6ud
dkQPFhEElK0osXRADxZhvUw3DFczRw8W6cwM/9S93xo9WOS1hC/d0WmJHizy
au1DSfIbF/RgkTwfzRfnOLbowSKl/QWuvRtt0INNKleEVulPs0MPNrmWcHPm
Nzvt0INNyocYveF2U9CDTSLC8rj2Ear/R9lkno3xDtdYO/RgE/6XfpO0U53Q
g02uBoVODpphgh5s0tmr5mHy3hk92ET81I8d0WuFHmxSJY4sPTnfHj3YhLEw
xif5kBN6sEngkjk301Y6oAeH5OZsWDq5who9OKRtw3rJnTWm6MEhRyetcHxW
YI4eHJIy6D7/9lpr9OAQFyO9Iv3f7NCDQ+a+utyt5aHy4JCwh4uF239xRg8O
ua7/PDL6Tyf04JAvMoIDpons0IND8ioV1UbTXdGDQxaFLDr+zMIVPThkh+Nd
x/nggh4c4vRYXq80d0UPLmm5d9klL8MBPbikOqsra5u5A3pwyexC7qWarY7o
wSUJ23z/SQywQQ8usUyQnIxKskYPLrGN8vvrxS3VfHAJnzaZLT/igB5cElP/
q527niV6cElsX7J7UY0jenCJJu+3SqvttujBJa1zz/7ET7dHj7Hz3Z47vHyR
PXrwSM+27HmJ5ZPJ/wGMuqLt
      "]]}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->False,
  AxesOrigin->{0, 0},
  Frame->True,
  FrameLabel->{None, None},
  Method->{},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.532814194723003*^9, {3.532814242291733*^9, 3.532814265679334*^9}, {
   3.532814558103692*^9, 3.532814591328485*^9}, {3.532814769881647*^9, 
   3.532814793244091*^9}, 3.532814863450305*^9, 3.532815013362019*^9, {
   3.532815105988823*^9, 3.532815146007161*^9}, 3.53281524954426*^9, 
   3.532815334175509*^9, 3.532815501545065*^9, {3.532816064314044*^9, 
   3.532816088635428*^9}, 3.532816138304587*^9, 3.532822602580641*^9, 
   3.532822664517603*^9, 3.53282760304772*^9, 3.532827682668352*^9, 
   3.532827740272399*^9, 3.532832981795433*^9, {3.532877301440702*^9, 
   3.532877312665293*^9}, 3.532877375844033*^9, 3.532889984752663*^9, 
   3.532904205648501*^9, 3.532904851184289*^9, 3.532914387807757*^9, 
   3.535932307161292*^9, 3.53695877452464*^9, 3.536959088755789*^9, 
   3.536959264590485*^9, 3.536959298827192*^9, 3.536959390204209*^9, {
   3.536960048796137*^9, 3.536960071883321*^9}, 3.536960517888471*^9, 
   3.536960716151445*^9, 3.536960750678051*^9, 3.537024916147507*^9, 
   3.53702495175086*^9, 3.537030112309099*^9, 3.630558691091366*^9, 
   3.632969835664494*^9, 3.632970044558853*^9, 3.633017247362913*^9, {
   3.63301728711793*^9, 3.633017292216975*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Comparison with analytics", "Subsubsection",
 CellChangeTimes->{{3.532829571760285*^9, 3.532829578353379*^9}}],

Cell["\<\
In this case of a straight line we can also compare with analytic results. \
The best-fit parameters and parameter errors obtained with MCMC vs. analytic \
least-squares methods agree nicely! (See e.g. Bevington 2003, ch. 6.)\
\>", "Text",
 CellChangeTimes->{{3.53282823149476*^9, 3.532828370503629*^9}, {
  3.532829091128548*^9, 3.532829202506707*^9}, {3.532829582405156*^9, 
  3.532829622577196*^9}, {3.532829730969376*^9, 3.532829752624051*^9}, {
  3.53287742594675*^9, 3.53287744684701*^9}, {3.53291448986967*^9, 
  3.5329144931329*^9}, {3.536963684803816*^9, 3.536963698145788*^9}, {
  3.537023829408561*^9, 3.537023838284738*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Delta", "=", 
    RowBox[{
     RowBox[{
      RowBox[{"Total", "[", 
       RowBox[{"1", "/", 
        SuperscriptBox["errors", "2"]}], "]"}], 
      RowBox[{"Total", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"dattab", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "1"}], "]"}], "]"}], "^", "2"}], "/", 
        RowBox[{"errors", "^", "2"}]}], "]"}]}], "-", 
     RowBox[{
      RowBox[{"Total", "[", 
       RowBox[{
        RowBox[{"dattab", "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", "1"}], "]"}], "]"}], "/", 
        RowBox[{"errors", "^", "2"}]}], "]"}], "^", "2"}]}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Join", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\"\<TrueParameters\>\"", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"a", "\[Rule]", "5"}], ",", 
        RowBox[{"b", "\[Rule]", 
         RowBox[{"-", "3"}]}]}], "}"}]}], ",", 
     RowBox[{"\"\<MCMCBestFitParameters\>\"", "->", 
      RowBox[{"mcmc", "[", "\"\<BestFitParameters\>\"", "]"}]}], ",", 
     RowBox[{"\"\<AnalyticBestFitParameters\>\"", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"a", "\[Rule]", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"Total", "[", 
              RowBox[{"1", "/", 
               RowBox[{"errors", "^", "2"}]}], "]"}], 
             RowBox[{"Total", "[", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"Times", "@@@", "dattab"}], ")"}], "/", 
               RowBox[{"errors", "^", "2"}]}], "]"}]}], "-", 
            RowBox[{
             RowBox[{"Total", "[", 
              RowBox[{
               RowBox[{"dattab", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", "1"}], "]"}], "]"}], "/", 
               RowBox[{"errors", "^", "2"}]}], "]"}], 
             RowBox[{"Total", "[", 
              RowBox[{
               RowBox[{"dattab", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", "2"}], "]"}], "]"}], "/", 
               RowBox[{"errors", "^", "2"}]}], "]"}]}]}], ")"}], "/", 
          "Delta"}]}], ",", 
        RowBox[{"b", "->", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"Total", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"dattab", "[", 
                 RowBox[{"[", 
                  RowBox[{"All", ",", "1"}], "]"}], "]"}], "^", "2"}], "/", 
               RowBox[{"errors", "^", "2"}]}], "]"}], 
             RowBox[{"Total", "[", 
              RowBox[{
               RowBox[{"dattab", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", "2"}], "]"}], "]"}], "/", 
               RowBox[{"errors", "^", "2"}]}], "]"}]}], "-", 
            RowBox[{
             RowBox[{"Total", "[", 
              RowBox[{
               RowBox[{"dattab", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", "1"}], "]"}], "]"}], "/", 
               RowBox[{"errors", "^", "2"}]}], "]"}], 
             RowBox[{"Total", "[", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"Times", "@@@", "dattab"}], ")"}], "/", 
               RowBox[{"errors", "^", "2"}]}], "]"}]}]}], ")"}], "/", 
          "Delta"}]}]}], "}"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"\"\<MCMCErrors\>\"", "->", 
      RowBox[{"mcmc", "[", "\"\<ParameterErrors\>\"", "]"}]}], ",", 
     RowBox[{"\"\<AnalyticErrors\>\"", "->", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"a", "\[Rule]", 
         RowBox[{"Sqrt", "[", 
          RowBox[{
           RowBox[{"1", "/", "Delta"}], "*", 
           RowBox[{"Total", "[", 
            RowBox[{"1", "/", 
             RowBox[{"errors", "^", "2"}]}], "]"}]}], "]"}]}], ",", 
        RowBox[{"b", "\[Rule]", 
         RowBox[{"Sqrt", "[", 
          RowBox[{
           RowBox[{"1", "/", "Delta"}], "*", 
           RowBox[{"Total", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"dattab", "[", 
               RowBox[{"[", 
                RowBox[{"All", ",", "1"}], "]"}], "]"}], "^", "2"}], "/", 
             RowBox[{"errors", "^", "2"}]}], "]"}]}], "]"}]}]}], "}"}]}]}], 
    "}"}], ",", 
   RowBox[{"FilterRules", "[", 
    RowBox[{
     RowBox[{"mcmc", "[", 
      RowBox[{"[", "1", "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "\"\<BestFitReducedChisq\>\"", ",", "\"\<AverageAcceptance\>\"", ",", 
       "\"\<CorrelationMatrix\>\""}], "}"}]}], "]"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.532472280163117*^9, 3.532472288076469*^9}, {
   3.532472320917828*^9, 3.532472324847211*^9}, {3.532472593945009*^9, 
   3.532472602067549*^9}, {3.532472726171518*^9, 3.532472739759409*^9}, {
   3.532473800024789*^9, 3.532473810190777*^9}, {3.532473861320991*^9, 
   3.532474050745886*^9}, {3.532474296275855*^9, 3.532474310162503*^9}, {
   3.532474668540355*^9, 3.532474680668287*^9}, {3.532475638270148*^9, 
   3.532475674120084*^9}, {3.532477375049203*^9, 3.532477380845759*^9}, {
   3.532478060476784*^9, 3.532478124808575*^9}, {3.532478596630058*^9, 
   3.532478650730509*^9}, {3.532478698265753*^9, 3.532478813791011*^9}, {
   3.53247885604622*^9, 3.532478913793344*^9}, 3.532478953020617*^9, {
   3.532623249621946*^9, 3.5326232576917*^9}, {3.532623315356314*^9, 
   3.532623332607389*^9}, {3.53262344295765*^9, 3.532623443381827*^9}, {
   3.532639549598212*^9, 3.532639554697877*^9}, {3.532641292764724*^9, 
   3.53264130709235*^9}, {3.532641413842683*^9, 3.532641422742432*^9}, {
   3.532741613802932*^9, 3.532741615294134*^9}, {3.532742621142598*^9, 
   3.532742626185339*^9}, {3.532743996676396*^9, 3.53274399902497*^9}, {
   3.53274544235384*^9, 3.532745460499028*^9}, {3.532829251568089*^9, 
   3.532829275873211*^9}, {3.532829371373755*^9, 3.532829467686678*^9}, {
   3.53282950426682*^9, 3.532829504968556*^9}, {3.532829640014876*^9, 
   3.532829654036674*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"\<\"TrueParameters\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "\[Rule]", "5"}], ",", 
      RowBox[{"b", "\[Rule]", 
       RowBox[{"-", "3"}]}]}], "}"}]}], ",", 
   RowBox[{"\<\"MCMCBestFitParameters\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "\[Rule]", "4.969882242329237`"}], ",", 
      RowBox[{"b", "\[Rule]", 
       RowBox[{"-", "2.969873720300513`"}]}]}], "}"}]}], ",", 
   RowBox[{"\<\"AnalyticBestFitParameters\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "\[Rule]", "5.101313199111863`"}], ",", 
      RowBox[{"b", "\[Rule]", 
       RowBox[{"-", "3.2039218186140737`"}]}]}], "}"}]}], ",", 
   RowBox[{"\<\"MCMCErrors\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "\[Rule]", "0.13209538623319161`"}], ",", 
      RowBox[{"b", "\[Rule]", "0.22909386250862873`"}]}], "}"}]}], ",", 
   RowBox[{"\<\"AnalyticErrors\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "\[Rule]", "0.1326701658515837`"}], ",", 
      RowBox[{"b", "\[Rule]", "0.22998288107116935`"}]}], "}"}]}], ",", 
   RowBox[{"\<\"AverageAcceptance\"\>", "\[Rule]", "0.4625133034327949`"}], 
   ",", 
   RowBox[{"\<\"CorrelationMatrix\"\>", "\[Rule]", 
    TagBox[
     RowBox[{"(", "\[NoBreak]", GridBox[{
        {"1.0000000000000053`", 
         RowBox[{"-", "0.8688708423934898`"}]},
        {
         RowBox[{"-", "0.8688708423934898`"}], "0.9999999999999902`"}
       },
       GridBoxAlignment->{
        "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
         "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.7]}, 
           Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
     Function[BoxForm`e$, 
      MatrixForm[BoxForm`e$]]]}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.53282938740371*^9, {3.532829452928657*^9, 3.532829467999581*^9}, 
   3.532829555396047*^9, 3.532829655059865*^9, 3.532829706179403*^9, 
   3.532877459586921*^9, 3.532904952471742*^9, 3.532905068000976*^9, 
   3.532914453243007*^9, 3.532978379599466*^9, 3.536961020991007*^9, 
   3.537024954692602*^9, 3.53703011697235*^9, 3.632969855525474*^9, 
   3.632970049450598*^9, 3.633017248001788*^9, 3.633017296975481*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Verify error estimates reproduce expected normal distribution\
\>", "Subsubsection",
 CellChangeTimes->{{3.532829773737997*^9, 3.532829781256326*^9}, {
  3.536963728194936*^9, 3.536963738369781*^9}}],

Cell["\<\
Here we perform MCMC fitting 500 times, each time recording the alleged \
parameter errors from MCMC as well as from analytics (see above). We then \
determine what percentage of the time the true parameters fall within the \
error estimates, which should be 68% (since they are both 1\[Sigma]). Takes \
~1.5 hours to run, but works!\
\>", "Text",
 CellChangeTimes->{{3.536963748386999*^9, 3.536963852604259*^9}, {
  3.633017377819839*^9, 3.633017396940638*^9}, {3.633017430199329*^9, 
  3.633017439910043*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Monitor", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"trtab", "=", 
     RowBox[{"Table", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"error", "=", "2"}], ";", "\[IndentingNewLine]", 
        RowBox[{"dattab", "=", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"x", ",", 
             RowBox[{
              RowBox[{"5.", "x"}], "-", "3.", "+", 
              RowBox[{"RandomVariate", "[", 
               RowBox[{"NormalDistribution", "[", 
                RowBox[{"0", ",", "error"}], "]"}], 
               StyleBox["]", "DesignDiscussion"]}]}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"x", ",", "0", ",", "3", ",", ".01"}], "}"}]}], "]"}]}], 
        ";", "\[IndentingNewLine]", 
        RowBox[{"errors", "=", 
         RowBox[{"Table", "[", 
          RowBox[{"error", ",", 
           RowBox[{"{", 
            RowBox[{"x", ",", "0", ",", "3", ",", ".01"}], "}"}]}], "]"}]}], 
        ";", "\[IndentingNewLine]", 
        RowBox[{"res", "=", 
         RowBox[{"MCMCModelFit", "[", 
          RowBox[{"dattab", ",", "errors", ",", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"a", " ", "x"}], "+", "b"}], ")"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"a", ",", "5", ",", ".02", ",", "Real"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"b", ",", 
               RowBox[{"-", "3"}], ",", ".02", ",", "Real"}], "}"}]}], "}"}], 
           ",", 
           RowBox[{"{", "x", "}"}], ",", "10000"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"Delta", "=", 
         RowBox[{
          RowBox[{
           RowBox[{"Total", "[", 
            RowBox[{"1", "/", 
             SuperscriptBox["errors", "2"]}], "]"}], 
           RowBox[{"Total", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"dattab", "[", 
               RowBox[{"[", 
                RowBox[{"All", ",", "1"}], "]"}], "]"}], "^", "2"}], "/", 
             RowBox[{"errors", "^", "2"}]}], "]"}]}], "-", 
          RowBox[{
           RowBox[{"Total", "[", 
            RowBox[{
             RowBox[{"dattab", "[", 
              RowBox[{"[", 
               RowBox[{"All", ",", "1"}], "]"}], "]"}], "/", 
             RowBox[{"errors", "^", "2"}]}], "]"}], "^", "2"}]}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"a", "/.", 
            RowBox[{"res", "[", "\"\<BestFitParameters\>\"", "]"}]}], ")"}], 
          ",", 
          RowBox[{"(", 
           RowBox[{"a", "/.", 
            RowBox[{"res", "[", "\"\<ParameterErrors\>\"", "]"}]}], ")"}], 
          ",", 
          RowBox[{"Sqrt", "[", 
           RowBox[{
            RowBox[{"1", "/", "Delta"}], "*", 
            RowBox[{"Total", "[", 
             RowBox[{"1", "/", 
              RowBox[{"errors", "^", "2"}]}], "]"}]}], "]"}]}], "}"}]}], 
       "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"ii", ",", "500"}], "}"}]}], "\[IndentingNewLine]", "]"}]}], 
    ";"}], ",", "\[IndentingNewLine]", 
   RowBox[{"ii", "//", "N"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"res", "=", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{"Abs", "[", 
                RowBox[{
                 RowBox[{"#", "[", 
                  RowBox[{"[", "1", "]"}], "]"}], "-", "5"}], "]"}], "<", 
               RowBox[{"#", "[", 
                RowBox[{"[", "2", "]"}], "]"}]}], ",", 
              RowBox[{
               RowBox[{"Abs", "[", 
                RowBox[{
                 RowBox[{"#", "[", 
                  RowBox[{"[", "1", "]"}], "]"}], "-", "5"}], "]"}], "<", 
               RowBox[{"#", "[", 
                RowBox[{"[", "3", "]"}], "]"}]}]}], "}"}], "&"}], "/@", 
           "trtab"}], "/.", 
          RowBox[{"True", "\[Rule]", "1"}]}], "/.", 
         RowBox[{"False", "\[Rule]", "0"}]}], "//", "Total"}], ")"}], "/", 
      "500"}], "//", "N"}], ")"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"{", 
  RowBox[{
   RowBox[{"\"\<MCMCResult\>\"", "\[Rule]", 
    RowBox[{"res", "[", 
     RowBox[{"[", "1", "]"}], "]"}]}], ",", 
   RowBox[{"\"\<AnalyticResult\>\"", "\[Rule]", 
    RowBox[{"res", "[", 
     RowBox[{"[", "2", "]"}], "]"}]}]}], "}"}]}], "Input",
 CellChangeTimes->{{3.532706366645864*^9, 3.53270637643475*^9}, {
   3.53270642509025*^9, 3.532706437278814*^9}, {3.532706494036688*^9, 
   3.532706556363465*^9}, {3.532706586643051*^9, 3.532706641636472*^9}, {
   3.532706734118424*^9, 3.532706749368385*^9}, {3.53270678031137*^9, 
   3.532706810309079*^9}, {3.532707353667915*^9, 3.532707359237288*^9}, {
   3.532708170208859*^9, 3.532708185821083*^9}, {3.532708231793628*^9, 
   3.532708255784682*^9}, 3.532708305618498*^9, {3.532708337936048*^9, 
   3.532708338303201*^9}, {3.532717011992537*^9, 3.532717059084602*^9}, {
   3.532745892214766*^9, 3.532745895461437*^9}, {3.532745945336588*^9, 
   3.532745948157021*^9}, {3.532813480647834*^9, 3.532813519510226*^9}, {
   3.532828101357779*^9, 3.532828102321787*^9}, {3.532829769518437*^9, 
   3.532829770067649*^9}, {3.532829857548024*^9, 3.532829857854267*^9}, {
   3.532832624872642*^9, 3.532832626189043*^9}, {3.536963902410967*^9, 
   3.536963934185959*^9}, {3.6330173123397818`*^9, 3.633017312738596*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"\<\"MCMCResult\"\>", "\[Rule]", "0.656`"}], ",", 
   RowBox[{"\<\"AnalyticResult\"\>", "\[Rule]", "0.664`"}]}], "}"}]], "Output",\

 CellChangeTimes->{3.532829362641353*^9, 3.532979756527657*^9, 
  3.536962311008577*^9, 3.6330172714285717`*^9, 3.6330204011903954`*^9}]
}, Open  ]],

Cell["Both should be (?):", "Text",
 CellChangeTimes->{{3.532832617490886*^9, 3.532832633145567*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"1", "-", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"1", "-", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"CDF", "[", 
        RowBox[{
         RowBox[{"NormalDistribution", "[", 
          RowBox[{"0", ",", "1"}], "]"}], ",", "x"}], "]"}], "/.", 
       RowBox[{"x", "\[Rule]", "1."}]}], ")"}]}], ")"}], "2"}]}]], "Input"],

Cell[BoxData["0.6826894921370859`"], "Output",
 CellChangeTimes->{3.532832646505053*^9, 3.536963536228556*^9, 
  3.633020426293415*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
MCMCModelFit example: curvy line\
\>", "Section",
 CellChangeTimes->{{3.53282986686729*^9, 3.532829869898766*^9}, {
   3.532832660936375*^9, 3.532832670712478*^9}, 3.532914601196254*^9, {
   3.532969558890286*^9, 3.53296956104379*^9}, {3.537023862228487*^9, 
   3.537023862299207*^9}, 3.632970762517075*^9}],

Cell[CellGroupData[{

Cell["Generate fake data with fake errors, then run MCMC routine", \
"Subsubsection",
 CellChangeTimes->{{3.532829890935514*^9, 3.53282992335454*^9}, {
  3.532832698802858*^9, 3.532832709567472*^9}}],

Cell["\<\
Important to give good initial guesses for parameters. Try messing up the \
guesses below, and you may sit at a local minimum.\
\>", "Text",
 CellChangeTimes->{{3.532829890935514*^9, 3.53282992335454*^9}, {
  3.532832698802858*^9, 3.532832725564071*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"error", "=", "1.5"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dattab", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{
        RowBox[{"1.3", "x"}], "-", 
        RowBox[{"2", 
         RowBox[{"Sin", "[", 
          RowBox[{"2", "x"}], "]"}]}], "+", "7", "+", 
        RowBox[{"RandomVariate", "[", 
         RowBox[{"NormalDistribution", "[", 
          RowBox[{"0", ",", "error"}], "]"}], 
         StyleBox["]", "DesignDiscussion"]}]}]}], 
      StyleBox["}", "DesignDiscussion"]}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "10", ",", ".1"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"errors", "=", 
   RowBox[{"Table", "[", 
    RowBox[{"error", ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "10", ",", ".1"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"spr", "=", ".04"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"mcmc", "=", 
  RowBox[{"MCMCModelFit", "[", 
   RowBox[{"dattab", ",", "errors", ",", 
    RowBox[{
     RowBox[{"a", " ", "x"}], "+", 
     RowBox[{"b", " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"c", " ", "x"}], "]"}]}], "+", "d"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"a", ",", "1.3", ",", "spr", ",", "Real"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"b", ",", 
        RowBox[{"-", "2"}], ",", "spr", ",", "Real"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"c", ",", "2", ",", "spr", ",", "Real"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"d", ",", "7", ",", "spr", ",", "Real"}], "}"}]}], "}"}], ",", 
    
    RowBox[{"{", "x", "}"}], ",", "100000"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"FilterRules", "[", 
  RowBox[{
   RowBox[{"mcmc", "[", 
    RowBox[{"[", "1", "]"}], "]"}], ",", 
   RowBox[{"{", "\"\<AverageAcceptance\>\"", "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.532814146681756*^9, 3.532814265090119*^9}, {
   3.532814352348615*^9, 3.532814472976097*^9}, {3.532814547936155*^9, 
   3.532814591067298*^9}, {3.532814669642845*^9, 3.532814712289361*^9}, {
   3.532814757028062*^9, 3.532814817226626*^9}, {3.532814890354059*^9, 
   3.532814891008666*^9}, {3.532814950889757*^9, 3.532814962349358*^9}, {
   3.532815083635743*^9, 3.532815159185936*^9}, {3.532815281132838*^9, 
   3.532815297604359*^9}, {3.532815450502363*^9, 3.532815454602201*^9}, {
   3.532815723170902*^9, 3.532815727481724*^9}, {3.532815990361492*^9, 
   3.532815993442109*^9}, {3.532816059409387*^9, 3.532816059661065*^9}, 
   3.532822554338734*^9, 3.532822618007026*^9, {3.532827552903625*^9, 
   3.532827557346223*^9}, {3.532832746702154*^9, 3.532832748040124*^9}, 
   3.532832962380911*^9, 3.53287728731263*^9, {3.532877357977958*^9, 
   3.532877358576998*^9}, {3.532903349443473*^9, 3.532903355477784*^9}, 
   3.53290391552494*^9, {3.532904115704713*^9, 3.532904179647114*^9}, {
   3.536959245957504*^9, 3.536959246304507*^9}, {3.53695928239877*^9, 
   3.536959331911233*^9}, {3.536959489773539*^9, 3.536959537393909*^9}, {
   3.536959704621524*^9, 3.536959704676385*^9}, {3.536959998975576*^9, 
   3.536960003114509*^9}, {3.536960054931554*^9, 3.536960108011731*^9}, {
   3.536960151361839*^9, 3.53696018435766*^9}, {3.536960269354792*^9, 
   3.536960272368584*^9}, {3.536960410814857*^9, 3.536960412226024*^9}, {
   3.536960454869358*^9, 3.536960459983879*^9}, 3.536960720454531*^9, {
   3.537030165465654*^9, 3.53703018714504*^9}}],

Cell[BoxData[
 RowBox[{"\<\"MCMCResult\"\>", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"a", "\[Rule]", "1.2625810147133563`"}], ",", 
     RowBox[{"b", "\[Rule]", 
      RowBox[{"-", "1.9063339259766892`"}]}], ",", 
     RowBox[{"c", "\[Rule]", "2.0027458367349427`"}], ",", 
     RowBox[{"d", "\[Rule]", "7.237024503713571`"}]}], "}"}], 
   ",", "\<\"\[LeftSkeleton]100000\[RightSkeleton]\"\>"}], "]"}]], "Output",
 CellChangeTimes->{
  3.53290335581326*^9, 3.532903593297519*^9, {3.532903900351143*^9, 
   3.532903917125535*^9}, 3.532903957585054*^9, {3.532904033153893*^9, 
   3.532904106716142*^9}, {3.532904144596037*^9, 3.53290415996901*^9}, 
   3.532904190065269*^9, 3.532904833038923*^9, 3.532914384118895*^9, 
   3.535932302013659*^9, 3.536958680941283*^9, {3.536959054150761*^9, 
   3.536959079815533*^9}, 3.536959119150425*^9, 3.536959261898285*^9, 
   3.536959293672815*^9, 3.536959332890173*^9, 3.536959385423017*^9, {
   3.536959490279196*^9, 3.536959537765935*^9}, 3.536959594295873*^9, {
   3.536959701284544*^9, 3.53695970507487*^9}, 3.536959937397684*^9, {
   3.536959999799485*^9, 3.536960006431543*^9}, {3.536960059319677*^9, 
   3.536960104242488*^9}, {3.536960135423897*^9, 3.536960197041838*^9}, {
   3.536960273220637*^9, 3.536960282235593*^9}, {3.536960441009848*^9, 
   3.536960486561587*^9}, 3.536960576011373*^9, 3.536960748374712*^9, 
   3.536960828766548*^9, 3.537030155542202*^9, 3.537030188574967*^9, 
   3.5370302352065*^9, 3.63055875855224*^9, 3.6329700862460938`*^9, 
   3.632970161973127*^9, 3.632970273547371*^9, 3.6330204734312572`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"AverageAcceptance\"\>", "\[Rule]", "0.2769356892098679`"}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.53290335581326*^9, 3.532903593297519*^9, {3.532903900351143*^9, 
   3.532903917125535*^9}, 3.532903957585054*^9, {3.532904033153893*^9, 
   3.532904106716142*^9}, {3.532904144596037*^9, 3.53290415996901*^9}, 
   3.532904190065269*^9, 3.532904833038923*^9, 3.532914384118895*^9, 
   3.535932302013659*^9, 3.536958680941283*^9, {3.536959054150761*^9, 
   3.536959079815533*^9}, 3.536959119150425*^9, 3.536959261898285*^9, 
   3.536959293672815*^9, 3.536959332890173*^9, 3.536959385423017*^9, {
   3.536959490279196*^9, 3.536959537765935*^9}, 3.536959594295873*^9, {
   3.536959701284544*^9, 3.53695970507487*^9}, 3.536959937397684*^9, {
   3.536959999799485*^9, 3.536960006431543*^9}, {3.536960059319677*^9, 
   3.536960104242488*^9}, {3.536960135423897*^9, 3.536960197041838*^9}, {
   3.536960273220637*^9, 3.536960282235593*^9}, {3.536960441009848*^9, 
   3.536960486561587*^9}, 3.536960576011373*^9, 3.536960748374712*^9, 
   3.536960828766548*^9, 3.537030155542202*^9, 3.537030188574967*^9, 
   3.5370302352065*^9, 3.63055875855224*^9, 3.6329700862460938`*^9, 
   3.632970161973127*^9, 3.632970273547371*^9, 3.6330204734557123`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Results", "Subsubsection",
 CellChangeTimes->{{3.532832753373936*^9, 3.53283275505381*^9}, 
   3.532832850258202*^9, {3.532890007607726*^9, 3.53289000991167*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"ListPlot", "[", 
    RowBox[{"dattab", ",", 
     RowBox[{"Joined", "\[Rule]", "False"}]}], "]"}], ",", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"7", "+", 
        RowBox[{"1.3", "x"}], "-", 
        RowBox[{"2", 
         RowBox[{"Sin", "[", 
          RowBox[{"2", "x"}], "]"}]}]}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{"a", " ", "x"}], "+", 
         RowBox[{"b", " ", 
          RowBox[{"Sin", "[", 
           RowBox[{"c", " ", "x"}], "]"}]}], "+", "d"}], "/.", 
        RowBox[{"mcmc", "[", "\"\<BestFitParameters\>\"", "]"}]}]}], "}"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "10"}], "}"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Directive", "[", 
         RowBox[{"Red", ",", "Dashed", ",", 
          RowBox[{"Opacity", "[", "1", "]"}]}], "]"}], ",", "Blue"}], 
       "}"}]}]}], "]"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"FilterRules", "[", 
  RowBox[{
   RowBox[{"mcmc", "[", 
    RowBox[{"[", "1", "]"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "\"\<BestFitParameters\>\"", ",", "\"\<ParameterErrors\>\"", ",", 
     "\"\<AverageAcceptance\>\"", ",", "\"\<CorrelationMatrix\>\""}], "}"}]}],
   "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"mcmc", "[", 
   RowBox[{"\"\<ParameterRunPlots\>\"", ",", 
    RowBox[{"ImageSize", "\[Rule]", "250"}]}], "]"}], "//", 
  "Rasterize"}], "\[IndentingNewLine]", 
 RowBox[{"mcmc", "[", 
  RowBox[{"\"\<ParameterHistograms\>\"", ",", 
   RowBox[{"ImageSize", "\[Rule]", "250"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.532814146681756*^9, 3.532814265090119*^9}, {
   3.532814352348615*^9, 3.532814472976097*^9}, {3.532814547936155*^9, 
   3.532814591067298*^9}, {3.532814669642845*^9, 3.532814712289361*^9}, {
   3.532814757028062*^9, 3.532814817226626*^9}, {3.532814890354059*^9, 
   3.532814891008666*^9}, {3.532814950889757*^9, 3.532814962349358*^9}, {
   3.532815083635743*^9, 3.532815159185936*^9}, {3.532815281132838*^9, 
   3.532815297604359*^9}, {3.532815450502363*^9, 3.532815454602201*^9}, {
   3.532815723170902*^9, 3.532815727481724*^9}, {3.532815990361492*^9, 
   3.532815993442109*^9}, {3.532816059409387*^9, 3.532816059661065*^9}, 
   3.532822554338734*^9, 3.532822618007026*^9, {3.532827552903625*^9, 
   3.532827557346223*^9}, {3.532832746702154*^9, 3.532832748040124*^9}, 
   3.532877311434612*^9, {3.63055878624277*^9, 3.6305588069685097`*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, 
    {RGBColor[0.24720000000000014`, 0.24, 0.6], PointBox[CompressedData["
1:eJw11AlQVGUcAPDlEFaO3AP23mXf3mzLsocgR/r+FRIqGqAD44RO1IAGxEYD
BUXGUSN5DJnDQoEpwyFZZsVEgAeMiFzSEjhKkmCANA5EiIKYSEH9v//Mmzdv
3vf9/sf35lGv2eKSnRkMRvLKtXon8eLuOs6tVgq++Hw1mumm+Qu/+KRI8Lmb
Vnny/3Qa58J662oM0ukHc19/M1GF73+lI5ZTuganhPC/doceMalD7t8S4vpx
Wv9BeXXMSS7sS1mNSfr9l27oZyuJf48ejpj+MclbCH3XVmOaPpr2pD9Szkdv
ljY22mqdBnm4/j7Nab29rfATPvoP6K7590KielW4/yFd0Fv6SlOrBvMt0NvG
auIZW6XoLdI1E39kOjJJv49pycvBjUVuavSe0JtqbZduUjL0luhH1Bt+Jblq
9JZprl3cHjmiRI8BZb+7zW2u0uF6BmQHnBPY04zoO8EIdWzS/2kA7neGq7c3
nooLV2I+F5h8XLe37gcdeq6Q517UbVsmniv03/uI7SPSoLcGDJre+D1TpD83
OPjZI22XQoKeO/TUZBXkh6nRY4Lm+LimbfRZ9JgQnLNZk3OKnN9acDrw3cUW
pgo9D2jokYmb+lXoecKM1FpsLKXQ8wJW9aXD194h9XlB9Ekhy5xPPG/oW7wr
6NhJ5vUM6I91bDwbIkdvHbyQ4fjKf1aGHgsmdtw8F52kwPUsePsfZu7yGnKe
LKjsmfEr1qjgv+1WNnxpjYmKvULyseFhrETxbrIWPQ7sohPDZjfo0OOAfFIv
lQzo0eNABS99e4ZRj/VwYdPY/KHM5wLQ48LTtMykzgt69HxAHyn6WJRkQM8H
aoM9jmcMGdHzgYz6hsAjz5vR8wXanOTKDiDn7wstmaOiIA8jejwIGausvJ5j
Ro8H+WHDA7PFgejx4Gx0V5vytAk9PrSPbj/fKzOgxwdN/9LQh38Z0BPAlQqz
hu1EPAH42CVSxt/EE4CiT3BRNGBATwg7qrJrvlk2oSeEMh4/i9tB+hXBz9TY
QmKVP3oi8GZ3FieEkH5FUD/irOzXGdETw/7DbXN57mR+Ysj5TdOd4BuIngR2
NqTYtniS+iQA9Xf8w2NN6EnAsbBXmjCuQ08KcvVlndcRUp8U8lOZqdMOM3oy
kDNzi8zhJvRkEKE4zRGvI/XJwHCmSGGpIf36wVCzy5lXO8l5+EHUiJlX6Uk8
OWjL2erURQt+X3I48P0wf3ehEX05pD9Qsk5UBOF+OZgaxdRb0RbMJ4cM54CZ
XdkW9CiYaC93VOWtR4+Cwlx7KGM+CD0K7DdsM/FbrOhRUB7WWXI1zooeBWHl
K/+7giD0FHBiv1vzhkHiKYC3b63h7h4LegqQTJV+G6QNRk8BAm1X9XUX4ilA
KpWd/6mN1KeEpLIKdsmnwTgfJcTMz31dtETmqYQ0sXJr/CEy/5X3FY4WrYl4
Sgg9Gno5hUnmpwK7nyVyLMsM/wK45GmU
      "]]}, {}}, {{}, {}, 
    {RGBColor[1, 0, 0], Opacity[1], Dashing[{Small, Small}], 
     LineBox[CompressedData["
1:eJwV13k8VG8bBnB72QkzGNswlhiMMUmlzpVKWZKUSJJkSaQsRfFrQ6lsUZKK
FJW0RxvZC1mLSrKUpVCiSJbU+7x/+Xw/Z8yc536u+z7PYXrucvQW4OPjSxTk
4/v/34sHPEVMvE4uyTgh/OHfPwYqmzXsnDX8qIhLn5VjfjPw70VxlIbGPspM
rXyf2DADF0vj1YU1jlOaYvYytE4GAhbv2flb/RxlldwoyCtioHl6++kR9Vzq
yR46/Wo4A7M+dOsOqT+h+P7eK1s4qozW0md7vvU/oZKqZ9/5N6iMG1fTKr7e
e0q5r76UUt2tDPtg+y2Dy4qomarmQp/XykgVfZr6xbeE2ijY+vbdPWXMuVAt
8ONdOfX745Wj14KUkfUyM+ireg2l0CBzru6XEsbSCvS74moojnro4PUhJVj5
1va8nqyhDJp6liT0KeGb4G+np80vKWue9JHQN0owX2y/8PixOmqyoGzbgwIl
NN35I6A73Ej1htjUKIUrYQ4l6i5p1ER5XzKRP7tbCYt0Ti885tVEFWq0nlP3
U0LCWO7o/ldNlNBr9S5HVyXwTr3x9sx7RV3pDpeyWqyEgy/ZNiZbmimdsP49
kcJKuH7vkU7emWZKSn/c+tlfRbxOsxTUrmumgop/7hKfUATL16VIcUELZbUy
kts0qIiXgtFGfHJvqMKYJKl/TYqgLf4wp/HFW2pt/WCU5CVFgOUzvGrmLdX+
5MJCbroi/MR/1JabvqN2aLab+pxWRNF7kZiHl95R6i4bvf7EKsJzL/f3xf2t
1LEfLcO9wYq4fef4hwCjNqrU1v52ibUiBucMxtlsbaMun0hvmL9CEbp7bZbo
nW6j0vrKnxdDEZcsxLN6Jtuon1MRiZPzFZFcE+fj+vwDle4s08/SVUQDe4hu
PvGB2supoNO0FCGetLpGwaCd6hpXqqapKyJ6gxT7VVI71RT06I8VXRF7exJ/
rHTroI6J6X71mq2I+1Yjl7UTOyiGzMENLUKKGM51WC9Y3kFdCg7vXseviO27
ZR8V63ZS7PI1uVFTdLjOJEfOG+2kZieeFro+REeqx6ihnE4XtXY/PTZ9kI7m
inVdIy5dlP1z0fKLX+iwOyFvebO4i5pKn5319hMdmeK1UbIrPlIrrj2YkHtH
x5LFEW6H3D9Sku4qagktdLQHGswbDvtItQbyYpRe06H4+uTnuhsfqRm5Dlev
ejoeClqULKr8SH23nzeoVUvH+nnfzt7o+EiZd9b+Gaum41SanXWszCeq8Nrm
r7WVdHBe/mH+nvuJuh1X/PlVOR0N0zenvJd9opTr9LIHSukQ2yJ5c9neT5Sw
6USW/TM6ric9i76f+InSlnfju1BIh1X5zs3M3E+UedgLt+kndERpN0j9+/CJ
+jn3ifXIQzo0nQ982fnrE5US0zIeU0BHaaxRabtUNzXEVflgmE+H+9PONFu9
bmriu49Q/306/nxNCHq6tJtatnrzofx7dKSrUjZzN3VTe8/sc0u5S4f5mmHN
tNBuamHWrKvRd+jYc39Ny55r3dTSiJKCjFt0yPf+u9lb2k2N3jh7puomHfcV
7sasa+umFmksoQkSO6z0cC8f7aZ4l+SXr82j43u4zHwTyR7KpWS1wf0bdMTd
KJW+pNND3Sv/9k6bWL99d78UeqjIw8+dbubSUS3JLPtvYw+1amXk3RXEvtSr
c9+Ce6gTD2NGf1yng+/y+NMPJ3uo0sJK3CdOE1Jpf5ndQ1mdPN0YTczxXTrz
5FkPpRG78IYfcXWNj1ru2x4q4GpjmwexBzuOShvuoboc4b+DeCLhnsex2b1U
hqud91HipB9vD+9l9lKXmo++zifWW//nsvfCXmq78IaiX8SlD5mV69f1UvqO
owbW5P5clFb2LQvopYI0/PXvEI9EBIiYxvRSas8vlOqS9cV2ntLVzOil3u9c
+Pv/69dY+miV7KNe6o94zVsHUp/HV9r9+Jp6qXbqki///+snInByuL+Xilk+
eK+SuH+77s1O/j7q24crz9JJ/Q/V2tXXK/dRUYsuJEfdJvk0Cv5eZNpHrZoM
NT9I9utu0lnpm3Z9lNlk1sN4sp+rRos45737KM4mP/k7ZL8/OnWvPXGgj3Lx
63HpIXkIfzwrZN/ZPqr+6NQJfZKX3P8cC5xr+qgPpyte/yD5svwY9taqu496
Yer1K+gxHW2WF3/Pm+6jlqgfVBd+SvI7u3+BvOFn6j8b4cteJL87kv8rbkr6
TGlUu87Mfk6HwK/LXSW5n6m7tYpTzCqSN+dqvjvlnynh35vn2tfQ8VJFbln8
2GfqhHOSyUfSXwbXrldZu3yhdjzrcvtK+rNStKHfPOgLdea877aMNjrcAkZF
9U58oYpXthd6dZA8mSyxEyn6QolWVwYa9NDxrbC5qVy9nzIfb9XNGqYjWm3y
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
9FcM6U7Ly+ZOsSAjc/pSP10c+W2PWcrfWBC0M/raYS2Ob4k74tqaWBis8DxU
fUscB448Tp+XwYL6qdYdCfnisDjnx5lKZ2G9u73T+kJxVIm/v/r8LAvFEwv0
P1aLg3n4Y0jQKRaSDWVbfveII3bbzUVqMSwsOluiq6ssAc6ygGvvd7Kw22ve
nCENCThFB3nI+bNw1STvz31dCZTZxvav307ury711ZJ5Ejgz92TGsCcLvXyB
ERscJFBQsW5ujAsLcTtUGmOOSsD306JcixUslM1PfmIbL4Fwrs+LSUsWxoVm
Z8uelsBwa+qJErDgkTkafjFLApu+Fi30tmCB1/JSs6BIAu6hEWeVeSz4ZUEy
okICX0N6bdS4LGQEPvyNlxJoe6kz24DDwmzRy3V17ySwzvRp4xY2Cx2L9+3t
/SmBsdqx9/O1WZgjPuxxY1ICNf0FWjFaLKxq9bLdzSeJQm5u8wcmC/eDHTT+
SEpiR59zco4aC0ev6b6UmyuJut+Ln+YpslAYejH/vbEk3hzJ915BZ2FkqVxm
ppkknjycrOtXYMG1/W+IwXJJ9Hy5+9tOjgUj2beqy7ZIYvzYSMtJKXJejf98
5Iy3JBbee1FxVJKFi2K/v3zxJ7/f4Bd0QoIFCSHF+3Hhkmhas1X3phgLlYf0
6F0HJOEmmr3kpSgLETPmkSYxkni1OIn7YzbZ//GNVm9PSSL5uX39xlksXA7Z
kaeXJomXG92PnBdhYePIfpmIDEkYVp3ifBYm+7Xz5J76bEn4Vjd2LiCuHjjf
pp4nibEL/SmpQiwc9LlJBd+ThNbEmQ1/BFkw6ynKrnwkiVUj+w39iXPaOwL9
KiVx+oII10uABbeN35sLX0rCtfVwwHd+FuTf/jWXeiUJm0sdLYeJax2lMzze
SeKksG2QGvGRRnXBBx2S0FXpXVnJx8JCO8524V5yv1/z3EOIf1Sj3nmQ1MMj
odCA+PqKtdwbI5JQWuzhNfRPCx7lW8/+GZfEUrEu98fEilTwH/sZSRwWu3c3
jrix8MjWLEEpjOt7b9lBfNQ85cWoqBRyfgXvXku8pOCKgZWMFD5GLRxYSjxu
kp+URpNC7W6hxkXEt25X/hpUkYJpHb8uRexl8MZ1sZYUTkvajdsSq1zvK0mc
KwWXWX1LPYlbWOOsbmMpOLc9lDpCfDJL5ATPTAqpAylb84gt1ejDRy3I9zWY
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
/wBRWT0k
      "]]}, 
    {RGBColor[0, 0, 1], LineBox[CompressedData["
1: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
5JpkLIgLx7V///vHgt2KmjgJ4v8BqBOkaA==
      "]]}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  AxesOrigin->{0., 4.905581051046548},
  Frame->True,
  FrameLabel->{None, None},
  Method->{},
  PlotRange->{{0., 10.}, {4.905581051046548, 22.564683056341327`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{0.2, 0.2}, {0.35318204010589554`, 
   0.35318204010589554`}}]], "Output",
 CellChangeTimes->{
  3.532814194723003*^9, {3.532814242291733*^9, 3.532814265679334*^9}, {
   3.532814558103692*^9, 3.532814591328485*^9}, {3.532814769881647*^9, 
   3.532814793244091*^9}, 3.532814863450305*^9, 3.532815013362019*^9, {
   3.532815105988823*^9, 3.532815146007161*^9}, 3.53281524954426*^9, 
   3.532815334175509*^9, 3.532815501545065*^9, {3.532816064314044*^9, 
   3.532816088635428*^9}, 3.532816138304587*^9, 3.532822602580641*^9, 
   3.532822664517603*^9, 3.53282760304772*^9, 3.532827682668352*^9, 
   3.532827740272399*^9, 3.532832981795433*^9, {3.532877301440702*^9, 
   3.532877312665293*^9}, 3.532877375844033*^9, 3.532889984752663*^9, 
   3.532904205648501*^9, 3.532904851184289*^9, 3.532914387807757*^9, 
   3.535932307161292*^9, 3.53695877452464*^9, 3.536959088755789*^9, 
   3.536959264590485*^9, 3.536959298827192*^9, 3.536959390204209*^9, {
   3.536960048796137*^9, 3.536960071883321*^9}, 3.536960517888471*^9, 
   3.536960716151445*^9, 3.536960750678051*^9, 3.537030155971631*^9, 
   3.537030238677665*^9, {3.6305587927074823`*^9, 3.630558807437377*^9}, 
   3.632970294524981*^9, 3.63302047357015*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"\<\"BestFitParameters\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "\[Rule]", "1.2625810147133563`"}], ",", 
      RowBox[{"b", "\[Rule]", 
       RowBox[{"-", "1.9063339259766892`"}]}], ",", 
      RowBox[{"c", "\[Rule]", "2.0027458367349427`"}], ",", 
      RowBox[{"d", "\[Rule]", "7.237024503713571`"}]}], "}"}]}], ",", 
   RowBox[{"\<\"ParameterErrors\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "\[Rule]", "0.04984464639496426`"}], ",", 
      RowBox[{"b", "\[Rule]", "0.21238401560230794`"}], ",", 
      RowBox[{"c", "\[Rule]", "0.01933415035745686`"}], ",", 
      RowBox[{"d", "\[Rule]", "0.28072178406960946`"}]}], "}"}]}], ",", 
   RowBox[{"\<\"AverageAcceptance\"\>", "\[Rule]", "0.2769356892098679`"}], 
   ",", 
   RowBox[{"\<\"CorrelationMatrix\"\>", "\[Rule]", 
    TagBox[
     RowBox[{"(", "\[NoBreak]", GridBox[{
        {"1.0000000000000226`", "0.14476815987254057`", 
         "0.21550622295340432`", 
         RowBox[{"-", "0.8487042375325634`"}]},
        {"0.14476815987254057`", "1.0000000000000064`", 
         "0.06476953546915715`", 
         RowBox[{"-", "0.14803801763641633`"}]},
        {"0.21550622295340432`", "0.06476953546915715`", "1.000000000000025`", 
         RowBox[{"-", "0.12750739471506398`"}]},
        {
         RowBox[{"-", "0.8487042375325634`"}], 
         RowBox[{"-", "0.14803801763641633`"}], 
         RowBox[{"-", "0.12750739471506398`"}], "1.0000000000000264`"}
       },
       GridBoxAlignment->{
        "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
         "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.7]}, 
           Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
     Function[BoxForm`e$, 
      MatrixForm[BoxForm`e$]]]}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.532814194723003*^9, {3.532814242291733*^9, 3.532814265679334*^9}, {
   3.532814558103692*^9, 3.532814591328485*^9}, {3.532814769881647*^9, 
   3.532814793244091*^9}, 3.532814863450305*^9, 3.532815013362019*^9, {
   3.532815105988823*^9, 3.532815146007161*^9}, 3.53281524954426*^9, 
   3.532815334175509*^9, 3.532815501545065*^9, {3.532816064314044*^9, 
   3.532816088635428*^9}, 3.532816138304587*^9, 3.532822602580641*^9, 
   3.532822664517603*^9, 3.53282760304772*^9, 3.532827682668352*^9, 
   3.532827740272399*^9, 3.532832981795433*^9, {3.532877301440702*^9, 
   3.532877312665293*^9}, 3.532877375844033*^9, 3.532889984752663*^9, 
   3.532904205648501*^9, 3.532904851184289*^9, 3.532914387807757*^9, 
   3.535932307161292*^9, 3.53695877452464*^9, 3.536959088755789*^9, 
   3.536959264590485*^9, 3.536959298827192*^9, 3.536959390204209*^9, {
   3.536960048796137*^9, 3.536960071883321*^9}, 3.536960517888471*^9, 
   3.536960716151445*^9, 3.536960750678051*^9, 3.537030155971631*^9, 
   3.537030238677665*^9, {3.6305587927074823`*^9, 3.630558807437377*^9}, 
   3.632970294524981*^9, 3.633020473597115*^9}],

Cell[BoxData[
 GraphicsBox[RasterBox[CompressedData["
1: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
7McxSuC8xoRb5rt4zx4F7STbQ+jFyT4bjFvWMEX7WQMfOhrrZVcSMMZYQ9Mq
iaC+f4AnkqSpDfMNLg20Qtdwa14DgUvvbdyqjx/0ImsgOl0pXINkDRZ1WeO3
3yqnT9tF6EXc7l94+vR5d+/Z2QpSzsaBMaKxqN8fzVVpQ9jgciS+66l9LbJx
lO6nOKAf3clPdsVKis5CskbHIVmDRV3WkHCIzlaQTMzn7dOnM4bC3lByeIRK
3OCS4HpqX39to42r2yaAi4Mka2jGnpiSNTqLLl+vAc999ZUvXX+uzeMka4wS
XTGEW0gF/aF4f5/fF2KtpfgNLqtwnzXc1jXQbdpnC4dcvGePQs6GdxzOdQ3R
Xfzocc/di+1Zo82QrOEWuqCCVIpFk/UaphtctoI13NU1kDXcvWePwsoXbvej
CyqFO+gsa+Ryp4tFl0fURwPJGm6htyqI68rR5f+c6W7LBrWvzXp316IXWaMr
FHD30FnW6Dagw59Op2IsoLcqSPfPa2jV3QrcvWcvYvNX/Nb2vYLeqhQ2oIzY
56gVkxp1Hzo2ntiRh3Y8m71VQVxP7RuvJ92d19Dq7dU4fmDlQb370VuVwgYO
WaPpX7vttt2WnhbdtuPp6a0K4npqr7tmTo+2bBKtQ29VChsoEhKtQaeLdgNQ
nPWd2pCAMf/QTj23GzLbW5VCQkLCBg5ZY4z92oVJat2v3ZAkyRoSEmMGbdC8
JCQUyRoSEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhIS
EhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhIS
EhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhIS
EhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEl2A
cqlQKBYL+UK50ymRkJCQkOh+lPMpv6IE42nJGhISHKBLVdC7VKVOJ0RCoo2o
lIvFEntaqR6Uhg9LUa8/VaqUq79ISEgg8qk+RVHi6XynEyIh0R7kQoriC0Vj
0aDHGxoC6qhkAori8Ud37ogrBvzRZEUr9XkVTzAcDviC8aFOp1lCoo2o7VNR
l2qkT1VO+7x9ReYXCYmxjOJgIJjAwh7zKIFETiulvJ5oUSvFvEowkYXw3EBf
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
   "], {{0, 0}, {530, 
   346}}, {0, 255},
   ColorFunction->RGBColor],
  ImageSize->{530, 346},
  PlotRange->{{0, 530}, {0, 346}}]], "Output",
 CellChangeTimes->{
  3.532814194723003*^9, {3.532814242291733*^9, 3.532814265679334*^9}, {
   3.532814558103692*^9, 3.532814591328485*^9}, {3.532814769881647*^9, 
   3.532814793244091*^9}, 3.532814863450305*^9, 3.532815013362019*^9, {
   3.532815105988823*^9, 3.532815146007161*^9}, 3.53281524954426*^9, 
   3.532815334175509*^9, 3.532815501545065*^9, {3.532816064314044*^9, 
   3.532816088635428*^9}, 3.532816138304587*^9, 3.532822602580641*^9, 
   3.532822664517603*^9, 3.53282760304772*^9, 3.532827682668352*^9, 
   3.532827740272399*^9, 3.532832981795433*^9, {3.532877301440702*^9, 
   3.532877312665293*^9}, 3.532877375844033*^9, 3.532889984752663*^9, 
   3.532904205648501*^9, 3.532904851184289*^9, 3.532914387807757*^9, 
   3.535932307161292*^9, 3.53695877452464*^9, 3.536959088755789*^9, 
   3.536959264590485*^9, 3.536959298827192*^9, 3.536959390204209*^9, {
   3.536960048796137*^9, 3.536960071883321*^9}, 3.536960517888471*^9, 
   3.536960716151445*^9, 3.536960750678051*^9, 3.537030155971631*^9, 
   3.537030238677665*^9, {3.6305587927074823`*^9, 3.630558807437377*^9}, 
   3.632970294524981*^9, 3.633020475107058*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   GraphicsBox[
    {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
     EdgeForm[Opacity[0.182]], {}, 
     {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
      EdgeForm[Opacity[0.182]], RectangleBox[{1.08, 0}, {1.085, 1},
       RoundingRadius->0], RectangleBox[{1.085, 0}, {1.09, 1},
       RoundingRadius->0], RectangleBox[{1.1, 0}, {1.105, 6},
       RoundingRadius->0], RectangleBox[{1.105, 0}, {1.11, 24},
       RoundingRadius->0], RectangleBox[{1.11, 0}, {1.115, 19},
       RoundingRadius->0], RectangleBox[{1.115, 0}, {1.12, 27},
       RoundingRadius->0], RectangleBox[{1.12, 0}, {1.125, 41},
       RoundingRadius->0], RectangleBox[{1.125, 0}, {1.13, 74},
       RoundingRadius->0], RectangleBox[{1.13, 0}, {1.135, 120},
       RoundingRadius->0], RectangleBox[{1.135, 0}, {1.14, 78},
       RoundingRadius->0], RectangleBox[{1.14, 0}, {1.145, 188},
       RoundingRadius->0], RectangleBox[{1.145, 0}, {1.15, 205},
       RoundingRadius->0], RectangleBox[{1.15, 0}, {1.155, 302},
       RoundingRadius->0], RectangleBox[{1.155, 0}, {1.16, 321},
       RoundingRadius->0], RectangleBox[{1.16, 0}, {1.165, 438},
       RoundingRadius->0], RectangleBox[{1.165, 0}, {1.17, 518},
       RoundingRadius->0], RectangleBox[{1.17, 0}, {1.175, 804},
       RoundingRadius->0], RectangleBox[{1.175, 0}, {1.18, 881},
       RoundingRadius->0], RectangleBox[{1.18, 0}, {1.185, 981},
       RoundingRadius->0], RectangleBox[{1.185, 0}, {1.19, 1074},
       RoundingRadius->0], RectangleBox[{1.19, 0}, {1.195, 1456},
       RoundingRadius->0], RectangleBox[{1.195, 0}, {1.2, 1543},
       RoundingRadius->0], RectangleBox[{1.2, 0}, {1.205, 1825},
       RoundingRadius->0], RectangleBox[{1.205, 0}, {1.21, 2126},
       RoundingRadius->0], RectangleBox[{1.21, 0}, {1.215, 2489},
       RoundingRadius->0], RectangleBox[{1.215, 0}, {1.22, 2607},
       RoundingRadius->0], RectangleBox[{1.22, 0}, {1.225, 2792},
       RoundingRadius->0], RectangleBox[{1.225, 0}, {1.23, 2979},
       RoundingRadius->0], RectangleBox[{1.23, 0}, {1.235, 3373},
       RoundingRadius->0], RectangleBox[{1.235, 0}, {1.24, 3096},
       RoundingRadius->0], RectangleBox[{1.24, 0}, {1.245, 3111},
       RoundingRadius->0], RectangleBox[{1.245, 0}, {1.25, 3074},
       RoundingRadius->0], RectangleBox[{1.25, 0}, {1.255, 3610},
       RoundingRadius->0], RectangleBox[{1.255, 0}, {1.26, 3657},
       RoundingRadius->0], RectangleBox[{1.26, 0}, {1.265, 3551},
       RoundingRadius->0], RectangleBox[{1.265, 0}, {1.27, 3394},
       RoundingRadius->0], RectangleBox[{1.27, 0}, {1.275, 3579},
       RoundingRadius->0], RectangleBox[{1.275, 0}, {1.28, 3603},
       RoundingRadius->0], RectangleBox[{1.28, 0}, {1.285, 3239},
       RoundingRadius->0], RectangleBox[{1.285, 0}, {1.29, 2924},
       RoundingRadius->0], RectangleBox[{1.29, 0}, {1.295, 2807},
       RoundingRadius->0], RectangleBox[{1.295, 0}, {1.3, 2596},
       RoundingRadius->0], RectangleBox[{1.3, 0}, {1.305, 2727},
       RoundingRadius->0], RectangleBox[{1.305, 0}, {1.31, 2357},
       RoundingRadius->0], RectangleBox[{1.31, 0}, {1.315, 2125},
       RoundingRadius->0], RectangleBox[{1.315, 0}, {1.32, 1787},
       RoundingRadius->0], RectangleBox[{1.32, 0}, {1.325, 1663},
       RoundingRadius->0], RectangleBox[{1.325, 0}, {1.33, 1459},
       RoundingRadius->0], RectangleBox[{1.33, 0}, {1.335, 1416},
       RoundingRadius->0], RectangleBox[{1.335, 0}, {1.34, 1125},
       RoundingRadius->0], RectangleBox[{1.34, 0}, {1.345, 974},
       RoundingRadius->0], RectangleBox[{1.345, 0}, {1.35, 808},
       RoundingRadius->0], RectangleBox[{1.35, 0}, {1.355, 789},
       RoundingRadius->0], RectangleBox[{1.355, 0}, {1.36, 632},
       RoundingRadius->0], RectangleBox[{1.36, 0}, {1.365, 549},
       RoundingRadius->0], RectangleBox[{1.365, 0}, {1.37, 401},
       RoundingRadius->0], RectangleBox[{1.37, 0}, {1.375, 369},
       RoundingRadius->0], RectangleBox[{1.375, 0}, {1.38, 275},
       RoundingRadius->0], RectangleBox[{1.38, 0}, {1.385, 205},
       RoundingRadius->0], RectangleBox[{1.385, 0}, {1.39, 196},
       RoundingRadius->0], RectangleBox[{1.39, 0}, {1.395, 157},
       RoundingRadius->0], RectangleBox[{1.395, 0}, {1.4, 107},
       RoundingRadius->0], RectangleBox[{1.4, 0}, {1.405, 83},
       RoundingRadius->0], RectangleBox[{1.405, 0}, {1.41, 82},
       RoundingRadius->0], RectangleBox[{1.41, 0}, {1.415, 68},
       RoundingRadius->0], RectangleBox[{1.415, 0}, {1.42, 49},
       RoundingRadius->0], RectangleBox[{1.42, 0}, {1.425, 25},
       RoundingRadius->0], RectangleBox[{1.425, 0}, {1.43, 10},
       RoundingRadius->0], RectangleBox[{1.43, 0}, {1.435, 6},
       RoundingRadius->0], RectangleBox[{1.435, 0}, {1.44, 10},
       RoundingRadius->0], RectangleBox[{1.44, 0}, {1.445, 3},
       RoundingRadius->0], RectangleBox[{1.45, 0}, {1.455, 2},
       RoundingRadius->0], RectangleBox[{1.47, 0}, {1.475, 1},
       RoundingRadius->0], RectangleBox[{1.48, 0}, {1.485, 7},
       RoundingRadius->0]}, {}, {}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, False},
    AxesLabel->{
      FormBox["\"a\"", TraditionalForm], None},
    AxesOrigin->{1.08, 0},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    ImageSize->250,
    PlotRange->{{1.08, 1.485}, {All, All}},
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.02], 
       Scaled[0.1]}},
    Ticks->{Automatic, None}], ",", 
   GraphicsBox[
    {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
     EdgeForm[Opacity[0.16799999999999998`]], {}, 
     {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
      EdgeForm[Opacity[0.16799999999999998`]], 
      RectangleBox[{-2.74, 0}, {-2.72, 10},
       RoundingRadius->0], RectangleBox[{-2.7, 0}, {-2.68, 2},
       RoundingRadius->0], RectangleBox[{-2.68, 0}, {-2.66, 3},
       RoundingRadius->0], RectangleBox[{-2.66, 0}, {-2.64, 10},
       RoundingRadius->0], RectangleBox[{-2.64, 0}, {-2.62, 12},
       RoundingRadius->0], RectangleBox[{-2.62, 0}, {-2.6, 23},
       RoundingRadius->0], RectangleBox[{-2.6, 0}, {-2.58, 19},
       RoundingRadius->0], RectangleBox[{-2.58, 0}, {-2.56, 15},
       RoundingRadius->0], RectangleBox[{-2.56, 0}, {-2.54, 9},
       RoundingRadius->0], RectangleBox[{-2.54, 0}, {-2.52, 52},
       RoundingRadius->0], RectangleBox[{-2.52, 0}, {-2.5, 30},
       RoundingRadius->0], RectangleBox[{-2.5, 0}, {-2.48, 59},
       RoundingRadius->0], RectangleBox[{-2.48, 0}, {-2.46, 89},
       RoundingRadius->0], RectangleBox[{-2.46, 0}, {-2.44, 108},
       RoundingRadius->0], RectangleBox[{-2.44, 0}, {-2.42, 152},
       RoundingRadius->0], RectangleBox[{-2.42, 0}, {-2.4, 246},
       RoundingRadius->0], RectangleBox[{-2.4, 0}, {-2.38, 298},
       RoundingRadius->0], RectangleBox[{-2.38, 0}, {-2.36, 374},
       RoundingRadius->0], RectangleBox[{-2.36, 0}, {-2.34, 529},
       RoundingRadius->0], RectangleBox[{-2.34, 0}, {-2.32, 488},
       RoundingRadius->0], RectangleBox[{-2.32, 0}, {-2.3, 573},
       RoundingRadius->0], RectangleBox[{-2.3, 0}, {-2.28, 641},
       RoundingRadius->0], RectangleBox[{-2.28, 0}, {-2.26, 740},
       RoundingRadius->0], RectangleBox[{-2.26, 0}, {-2.24, 947},
       RoundingRadius->0], RectangleBox[{-2.24, 0}, {-2.22, 1125},
       RoundingRadius->0], RectangleBox[{-2.22, 0}, {-2.2, 1068},
       RoundingRadius->0], RectangleBox[{-2.2, 0}, {-2.18, 1380},
       RoundingRadius->0], RectangleBox[{-2.18, 0}, {-2.16, 1502},
       RoundingRadius->0], RectangleBox[{-2.16, 0}, {-2.14, 1795},
       RoundingRadius->0], RectangleBox[{-2.14, 0}, {-2.12, 1891},
       RoundingRadius->0], RectangleBox[{-2.12, 0}, {-2.1, 2201},
       RoundingRadius->0], RectangleBox[{-2.1, 0}, {-2.08, 2374},
       RoundingRadius->0], RectangleBox[{-2.08, 0}, {-2.06, 2552},
       RoundingRadius->0], RectangleBox[{-2.06, 0}, {-2.04, 2692},
       RoundingRadius->0], RectangleBox[{-2.04, 0}, {-2.02, 2735},
       RoundingRadius->0], RectangleBox[{-2.02, 0}, {-2., 2578},
       RoundingRadius->0], RectangleBox[{-2., 0}, {-1.98, 2882},
       RoundingRadius->0], RectangleBox[{-1.98, 0}, {-1.96, 3126},
       RoundingRadius->0], RectangleBox[{-1.96, 0}, {-1.94, 3202},
       RoundingRadius->0], RectangleBox[{-1.94, 0}, {-1.92, 3723},
       RoundingRadius->0], RectangleBox[{-1.92, 0}, {-1.9, 3554},
       RoundingRadius->0], RectangleBox[{-1.9, 0}, {-1.88, 3293},
       RoundingRadius->0], RectangleBox[{-1.88, 0}, {-1.86, 3684},
       RoundingRadius->0], RectangleBox[{-1.86, 0}, {-1.84, 3286},
       RoundingRadius->0], RectangleBox[{-1.84, 0}, {-1.82, 3441},
       RoundingRadius->0], RectangleBox[{-1.82, 0}, {-1.8, 2954},
       RoundingRadius->0], RectangleBox[{-1.8, 0}, {-1.78, 2967},
       RoundingRadius->0], RectangleBox[{-1.78, 0}, {-1.76, 2626},
       RoundingRadius->0], RectangleBox[{-1.76, 0}, {-1.74, 2502},
       RoundingRadius->0], RectangleBox[{-1.74, 0}, {-1.72, 2407},
       RoundingRadius->0], RectangleBox[{-1.72, 0}, {-1.7, 2115},
       RoundingRadius->0], RectangleBox[{-1.7, 0}, {-1.68, 1985},
       RoundingRadius->0], RectangleBox[{-1.68, 0}, {-1.66, 1984},
       RoundingRadius->0], RectangleBox[{-1.66, 0}, {-1.64, 1646},
       RoundingRadius->0], RectangleBox[{-1.64, 0}, {-1.62, 1359},
       RoundingRadius->0], RectangleBox[{-1.62, 0}, {-1.6, 1256},
       RoundingRadius->0], RectangleBox[{-1.6, 0}, {-1.58, 989},
       RoundingRadius->0], RectangleBox[{-1.58, 0}, {-1.56, 918},
       RoundingRadius->0], RectangleBox[{-1.56, 0}, {-1.54, 730},
       RoundingRadius->0], RectangleBox[{-1.54, 0}, {-1.52, 734},
       RoundingRadius->0], RectangleBox[{-1.52, 0}, {-1.5, 629},
       RoundingRadius->0], RectangleBox[{-1.5, 0}, {-1.48, 562},
       RoundingRadius->0], RectangleBox[{-1.48, 0}, {-1.46, 536},
       RoundingRadius->0], RectangleBox[{-1.46, 0}, {-1.44, 359},
       RoundingRadius->0], RectangleBox[{-1.44, 0}, {-1.42, 286},
       RoundingRadius->0], RectangleBox[{-1.42, 0}, {-1.4, 237},
       RoundingRadius->0], RectangleBox[{-1.4, 0}, {-1.38, 185},
       RoundingRadius->0], RectangleBox[{-1.38, 0}, {-1.36, 156},
       RoundingRadius->0], RectangleBox[{-1.36, 0}, {-1.34, 88},
       RoundingRadius->0], RectangleBox[{-1.34, 0}, {-1.32, 103},
       RoundingRadius->0], RectangleBox[{-1.32, 0}, {-1.3, 47},
       RoundingRadius->0], RectangleBox[{-1.3, 0}, {-1.28, 43},
       RoundingRadius->0], RectangleBox[{-1.28, 0}, {-1.26, 50},
       RoundingRadius->0], RectangleBox[{-1.26, 0}, {-1.24, 16},
       RoundingRadius->0], RectangleBox[{-1.24, 0}, {-1.22, 15},
       RoundingRadius->0], RectangleBox[{-1.22, 0}, {-1.2, 4},
       RoundingRadius->0]}, {}, {}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, False},
    AxesLabel->{
      FormBox["\"b\"", TraditionalForm], None},
    AxesOrigin->{-2.74, 0},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    ImageSize->250,
    PlotRange->{{-2.74, -1.2}, {All, All}},
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.02], 
       Scaled[0.1]}},
    Ticks->{Automatic, None}], ",", 
   GraphicsBox[
    {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
     EdgeForm[Opacity[0.13999999999999999`]], {}, 
     {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
      EdgeForm[Opacity[0.13999999999999999`]], 
      RectangleBox[{1.922, 0}, {1.924, 2},
       RoundingRadius->0], RectangleBox[{1.924, 0}, {1.926, 1},
       RoundingRadius->0], RectangleBox[{1.93, 0}, {1.932, 4},
       RoundingRadius->0], RectangleBox[{1.932, 0}, {1.934, 6},
       RoundingRadius->0], RectangleBox[{1.934, 0}, {1.936, 7},
       RoundingRadius->0], RectangleBox[{1.936, 0}, {1.938, 2},
       RoundingRadius->0], RectangleBox[{1.938, 0}, {1.94, 14},
       RoundingRadius->0], RectangleBox[{1.94, 0}, {1.942, 18},
       RoundingRadius->0], RectangleBox[{1.942, 0}, {1.944, 32},
       RoundingRadius->0], RectangleBox[{1.944, 0}, {1.946, 45},
       RoundingRadius->0], RectangleBox[{1.946, 0}, {1.948, 50},
       RoundingRadius->0], RectangleBox[{1.948, 0}, {1.95, 72},
       RoundingRadius->0], RectangleBox[{1.95, 0}, {1.952, 88},
       RoundingRadius->0], RectangleBox[{1.952, 0}, {1.954, 113},
       RoundingRadius->0], RectangleBox[{1.954, 0}, {1.956, 186},
       RoundingRadius->0], RectangleBox[{1.956, 0}, {1.958, 240},
       RoundingRadius->0], RectangleBox[{1.958, 0}, {1.96, 275},
       RoundingRadius->0], RectangleBox[{1.96, 0}, {1.962, 306},
       RoundingRadius->0], RectangleBox[{1.962, 0}, {1.964, 371},
       RoundingRadius->0], RectangleBox[{1.964, 0}, {1.966, 600},
       RoundingRadius->0], RectangleBox[{1.966, 0}, {1.968, 609},
       RoundingRadius->0], RectangleBox[{1.968, 0}, {1.97, 683},
       RoundingRadius->0], RectangleBox[{1.97, 0}, {1.972, 977},
       RoundingRadius->0], RectangleBox[{1.972, 0}, {1.974, 1324},
       RoundingRadius->0], RectangleBox[{1.974, 0}, {1.976, 1354},
       RoundingRadius->0], RectangleBox[{1.976, 0}, {1.978, 1627},
       RoundingRadius->0], RectangleBox[{1.978, 0}, {1.98, 1670},
       RoundingRadius->0], RectangleBox[{1.98, 0}, {1.982, 1823},
       RoundingRadius->0], RectangleBox[{1.982, 0}, {1.984, 2271},
       RoundingRadius->0], RectangleBox[{1.984, 0}, {1.986, 2601},
       RoundingRadius->0], RectangleBox[{1.986, 0}, {1.988, 2853},
       RoundingRadius->0], RectangleBox[{1.988, 0}, {1.99, 2995},
       RoundingRadius->0], RectangleBox[{1.99, 0}, {1.992, 3227},
       RoundingRadius->0], RectangleBox[{1.992, 0}, {1.994, 3216},
       RoundingRadius->0], RectangleBox[{1.994, 0}, {1.996, 3350},
       RoundingRadius->0], RectangleBox[{1.996, 0}, {1.998, 3514},
       RoundingRadius->0], RectangleBox[{1.998, 0}, {2., 3654},
       RoundingRadius->0], RectangleBox[{2., 0}, {2.002, 3600},
       RoundingRadius->0], RectangleBox[{2.002, 0}, {2.004, 3787},
       RoundingRadius->0], RectangleBox[{2.004, 0}, {2.006, 3798},
       RoundingRadius->0], RectangleBox[{2.006, 0}, {2.008, 3546},
       RoundingRadius->0], RectangleBox[{2.008, 0}, {2.01, 3554},
       RoundingRadius->0], RectangleBox[{2.01, 0}, {2.012, 3212},
       RoundingRadius->0], RectangleBox[{2.012, 0}, {2.014, 3432},
       RoundingRadius->0], RectangleBox[{2.014, 0}, {2.016, 3174},
       RoundingRadius->0], RectangleBox[{2.016, 0}, {2.018, 2789},
       RoundingRadius->0], RectangleBox[{2.018, 0}, {2.02, 2655},
       RoundingRadius->0], RectangleBox[{2.02, 0}, {2.022, 2293},
       RoundingRadius->0], RectangleBox[{2.022, 0}, {2.024, 1961},
       RoundingRadius->0], RectangleBox[{2.024, 0}, {2.026, 1771},
       RoundingRadius->0], RectangleBox[{2.026, 0}, {2.028, 1560},
       RoundingRadius->0], RectangleBox[{2.028, 0}, {2.03, 1395},
       RoundingRadius->0], RectangleBox[{2.03, 0}, {2.032, 1197},
       RoundingRadius->0], RectangleBox[{2.032, 0}, {2.034, 1131},
       RoundingRadius->0], RectangleBox[{2.034, 0}, {2.036, 832},
       RoundingRadius->0], RectangleBox[{2.036, 0}, {2.038, 770},
       RoundingRadius->0], RectangleBox[{2.038, 0}, {2.04, 733},
       RoundingRadius->0], RectangleBox[{2.04, 0}, {2.042, 510},
       RoundingRadius->0], RectangleBox[{2.042, 0}, {2.044, 460},
       RoundingRadius->0], RectangleBox[{2.044, 0}, {2.046, 371},
       RoundingRadius->0], RectangleBox[{2.046, 0}, {2.048, 234},
       RoundingRadius->0], RectangleBox[{2.048, 0}, {2.05, 231},
       RoundingRadius->0], RectangleBox[{2.05, 0}, {2.052, 233},
       RoundingRadius->0], RectangleBox[{2.052, 0}, {2.054, 157},
       RoundingRadius->0], RectangleBox[{2.054, 0}, {2.056, 114},
       RoundingRadius->0], RectangleBox[{2.056, 0}, {2.058, 53},
       RoundingRadius->0], RectangleBox[{2.058, 0}, {2.06, 87},
       RoundingRadius->0], RectangleBox[{2.06, 0}, {2.062, 38},
       RoundingRadius->0], RectangleBox[{2.062, 0}, {2.064, 24},
       RoundingRadius->0], RectangleBox[{2.064, 0}, {2.066, 32},
       RoundingRadius->0], RectangleBox[{2.066, 0}, {2.068, 19},
       RoundingRadius->0], RectangleBox[{2.068, 0}, {2.07, 35},
       RoundingRadius->0], RectangleBox[{2.07, 0}, {2.072, 5},
       RoundingRadius->0], RectangleBox[{2.072, 0}, {2.074, 2},
       RoundingRadius->0], RectangleBox[{2.074, 0}, {2.076, 9},
       RoundingRadius->0], RectangleBox[{2.076, 0}, {2.078, 7},
       RoundingRadius->0], RectangleBox[{2.078, 0}, {2.08, 4},
       RoundingRadius->0], RectangleBox[{2.08, 0}, {2.082, 2},
       RoundingRadius->0], RectangleBox[{2.082, 0}, {2.084, 3},
       RoundingRadius->0], RectangleBox[{2.084, 0}, {2.086, 1},
       RoundingRadius->0]}, {}, {}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, False},
    AxesLabel->{
      FormBox["\"c\"", TraditionalForm], None},
    AxesOrigin->{1.922, 0},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    ImageSize->250,
    PlotRange->{{1.922, 2.086}, {All, All}},
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.02], 
       Scaled[0.1]}},
    Ticks->{Automatic, None}], ",", 
   GraphicsBox[
    {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
     EdgeForm[Opacity[0.027999999999999997`]], {}, 
     {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
      EdgeForm[Opacity[0.027999999999999997`]], 
      RectangleBox[{6.22, 0}, {6.24, 1},
       RoundingRadius->0], RectangleBox[{6.24, 0}, {6.26, 9},
       RoundingRadius->0], RectangleBox[{6.28, 0}, {6.3, 5},
       RoundingRadius->0], RectangleBox[{6.3, 0}, {6.32, 10},
       RoundingRadius->0], RectangleBox[{6.32, 0}, {6.34, 22},
       RoundingRadius->0], RectangleBox[{6.34, 0}, {6.36, 42},
       RoundingRadius->0], RectangleBox[{6.36, 0}, {6.38, 55},
       RoundingRadius->0], RectangleBox[{6.38, 0}, {6.4, 27},
       RoundingRadius->0], RectangleBox[{6.4, 0}, {6.42, 28},
       RoundingRadius->0], RectangleBox[{6.42, 0}, {6.44, 99},
       RoundingRadius->0], RectangleBox[{6.44, 0}, {6.46, 56},
       RoundingRadius->0], RectangleBox[{6.46, 0}, {6.48, 116},
       RoundingRadius->0], RectangleBox[{6.48, 0}, {6.5, 93},
       RoundingRadius->0], RectangleBox[{6.5, 0}, {6.52, 123},
       RoundingRadius->0], RectangleBox[{6.52, 0}, {6.54, 224},
       RoundingRadius->0], RectangleBox[{6.54, 0}, {6.56, 183},
       RoundingRadius->0], RectangleBox[{6.56, 0}, {6.58, 207},
       RoundingRadius->0], RectangleBox[{6.58, 0}, {6.6, 236},
       RoundingRadius->0], RectangleBox[{6.6, 0}, {6.62, 326},
       RoundingRadius->0], RectangleBox[{6.62, 0}, {6.64, 297},
       RoundingRadius->0], RectangleBox[{6.64, 0}, {6.66, 297},
       RoundingRadius->0], RectangleBox[{6.66, 0}, {6.68, 382},
       RoundingRadius->0], RectangleBox[{6.68, 0}, {6.7, 387},
       RoundingRadius->0], RectangleBox[{6.7, 0}, {6.72, 383},
       RoundingRadius->0], RectangleBox[{6.72, 0}, {6.74, 508},
       RoundingRadius->0], RectangleBox[{6.74, 0}, {6.76, 488},
       RoundingRadius->0], RectangleBox[{6.76, 0}, {6.78, 492},
       RoundingRadius->0], RectangleBox[{6.78, 0}, {6.8, 596},
       RoundingRadius->0], RectangleBox[{6.8, 0}, {6.82, 717},
       RoundingRadius->0], RectangleBox[{6.82, 0}, {6.84, 1018},
       RoundingRadius->0], RectangleBox[{6.84, 0}, {6.86, 967},
       RoundingRadius->0], RectangleBox[{6.86, 0}, {6.88, 1350},
       RoundingRadius->0], RectangleBox[{6.88, 0}, {6.9, 1121},
       RoundingRadius->0], RectangleBox[{6.9, 0}, {6.92, 1340},
       RoundingRadius->0], RectangleBox[{6.92, 0}, {6.94, 1305},
       RoundingRadius->0], RectangleBox[{6.94, 0}, {6.96, 1298},
       RoundingRadius->0], RectangleBox[{6.96, 0}, {6.98, 1576},
       RoundingRadius->0], RectangleBox[{6.98, 0}, {7., 1625},
       RoundingRadius->0], RectangleBox[{7., 0}, {7.02, 1647},
       RoundingRadius->0], RectangleBox[{7.02, 0}, {7.04, 1930},
       RoundingRadius->0], RectangleBox[{7.04, 0}, {7.06, 2067},
       RoundingRadius->0], RectangleBox[{7.06, 0}, {7.08, 1840},
       RoundingRadius->0], RectangleBox[{7.08, 0}, {7.1, 2004},
       RoundingRadius->0], RectangleBox[{7.1, 0}, {7.12, 2130},
       RoundingRadius->0], RectangleBox[{7.12, 0}, {7.14, 2131},
       RoundingRadius->0], RectangleBox[{7.14, 0}, {7.16, 2338},
       RoundingRadius->0], RectangleBox[{7.16, 0}, {7.18, 2238},
       RoundingRadius->0], RectangleBox[{7.18, 0}, {7.2, 2438},
       RoundingRadius->0], RectangleBox[{7.2, 0}, {7.22, 2416},
       RoundingRadius->0], RectangleBox[{7.22, 0}, {7.24, 2640},
       RoundingRadius->0], RectangleBox[{7.24, 0}, {7.26, 2561},
       RoundingRadius->0], RectangleBox[{7.26, 0}, {7.28, 2602},
       RoundingRadius->0], RectangleBox[{7.28, 0}, {7.3, 2729},
       RoundingRadius->0], RectangleBox[{7.3, 0}, {7.32, 2437},
       RoundingRadius->0], RectangleBox[{7.32, 0}, {7.34, 2392},
       RoundingRadius->0], RectangleBox[{7.34, 0}, {7.36, 2395},
       RoundingRadius->0], RectangleBox[{7.36, 0}, {7.38, 2315},
       RoundingRadius->0], RectangleBox[{7.38, 0}, {7.4, 2246},
       RoundingRadius->0], RectangleBox[{7.4, 0}, {7.42, 2071},
       RoundingRadius->0], RectangleBox[{7.42, 0}, {7.44, 2316},
       RoundingRadius->0], RectangleBox[{7.44, 0}, {7.46, 2255},
       RoundingRadius->0], RectangleBox[{7.46, 0}, {7.48, 2068},
       RoundingRadius->0], RectangleBox[{7.48, 0}, {7.5, 1714},
       RoundingRadius->0], RectangleBox[{7.5, 0}, {7.52, 1576},
       RoundingRadius->0], RectangleBox[{7.52, 0}, {7.54, 1526},
       RoundingRadius->0], RectangleBox[{7.54, 0}, {7.56, 1507},
       RoundingRadius->0], RectangleBox[{7.56, 0}, {7.58, 1630},
       RoundingRadius->0], RectangleBox[{7.58, 0}, {7.6, 1305},
       RoundingRadius->0], RectangleBox[{7.6, 0}, {7.62, 1375},
       RoundingRadius->0], RectangleBox[{7.62, 0}, {7.64, 1117},
       RoundingRadius->0], RectangleBox[{7.64, 0}, {7.66, 1060},
       RoundingRadius->0], RectangleBox[{7.66, 0}, {7.68, 904},
       RoundingRadius->0], RectangleBox[{7.68, 0}, {7.7, 829},
       RoundingRadius->0], RectangleBox[{7.7, 0}, {7.72, 510},
       RoundingRadius->0], RectangleBox[{7.72, 0}, {7.74, 518},
       RoundingRadius->0], RectangleBox[{7.74, 0}, {7.76, 389},
       RoundingRadius->0], RectangleBox[{7.76, 0}, {7.78, 351},
       RoundingRadius->0], RectangleBox[{7.78, 0}, {7.8, 245},
       RoundingRadius->0], RectangleBox[{7.8, 0}, {7.82, 132},
       RoundingRadius->0], RectangleBox[{7.82, 0}, {7.84, 143},
       RoundingRadius->0], RectangleBox[{7.84, 0}, {7.86, 188},
       RoundingRadius->0], RectangleBox[{7.86, 0}, {7.88, 149},
       RoundingRadius->0], RectangleBox[{7.88, 0}, {7.9, 135},
       RoundingRadius->0], RectangleBox[{7.9, 0}, {7.92, 82},
       RoundingRadius->0], RectangleBox[{7.92, 0}, {7.94, 79},
       RoundingRadius->0], RectangleBox[{7.94, 0}, {7.96, 48},
       RoundingRadius->0], RectangleBox[{7.96, 0}, {7.98, 72},
       RoundingRadius->0], RectangleBox[{7.98, 0}, {8., 51},
       RoundingRadius->0], RectangleBox[{8., 0}, {8.02, 19},
       RoundingRadius->0], RectangleBox[{8.02, 0}, {8.04, 12},
       RoundingRadius->0], RectangleBox[{8.04, 0}, {8.06, 39},
       RoundingRadius->0], RectangleBox[{8.06, 0}, {8.08, 19},
       RoundingRadius->0], RectangleBox[{8.08, 0}, {8.1, 29},
       RoundingRadius->0], RectangleBox[{8.1, 0}, {8.12, 14},
       RoundingRadius->0], RectangleBox[{8.12, 0}, {8.14, 13},
       RoundingRadius->0], RectangleBox[{8.14, 0}, {8.16, 6},
       RoundingRadius->0]}, {}, {}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, False},
    AxesLabel->{
      FormBox["\"d\"", TraditionalForm], None},
    AxesOrigin->{6.22, 0},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    ImageSize->250,
    PlotRange->{{6.22, 8.16}, {All, All}},
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.02], 
       Scaled[0.1]}},
    Ticks->{Automatic, None}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.532814194723003*^9, {3.532814242291733*^9, 3.532814265679334*^9}, {
   3.532814558103692*^9, 3.532814591328485*^9}, {3.532814769881647*^9, 
   3.532814793244091*^9}, 3.532814863450305*^9, 3.532815013362019*^9, {
   3.532815105988823*^9, 3.532815146007161*^9}, 3.53281524954426*^9, 
   3.532815334175509*^9, 3.532815501545065*^9, {3.532816064314044*^9, 
   3.532816088635428*^9}, 3.532816138304587*^9, 3.532822602580641*^9, 
   3.532822664517603*^9, 3.53282760304772*^9, 3.532827682668352*^9, 
   3.532827740272399*^9, 3.532832981795433*^9, {3.532877301440702*^9, 
   3.532877312665293*^9}, 3.532877375844033*^9, 3.532889984752663*^9, 
   3.532904205648501*^9, 3.532904851184289*^9, 3.532914387807757*^9, 
   3.535932307161292*^9, 3.53695877452464*^9, 3.536959088755789*^9, 
   3.536959264590485*^9, 3.536959298827192*^9, 3.536959390204209*^9, {
   3.536960048796137*^9, 3.536960071883321*^9}, 3.536960517888471*^9, 
   3.536960716151445*^9, 3.536960750678051*^9, 3.537030155971631*^9, 
   3.537030238677665*^9, {3.6305587927074823`*^9, 3.630558807437377*^9}, 
   3.632970294524981*^9, 3.63302047610375*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
MCMCModelFit real-world[ish] example: fitting radial velocity data from an \
eccentric stellar binary\
\>", "Section",
 CellChangeTimes->{{3.532914607129857*^9, 3.532914640475357*^9}, {
  3.532969539505485*^9, 3.532969552465427*^9}, {3.632970770317518*^9, 
  3.6329707733146553`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"rvdata", "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"55308.9298`", ",", 
        RowBox[{"-", "10.58`"}], ",", 
        RowBox[{"-", "19.61`"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"55310.6587`", ",", 
        RowBox[{"-", "8.07`"}], ",", 
        RowBox[{"-", "21.3`"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"55310.9353`", ",", 
        RowBox[{"-", "7.51`"}], ",", 
        RowBox[{"-", "22.83`"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"55311.8277`", ",", 
        RowBox[{"-", "3.54`"}], ",", 
        RowBox[{"-", "26.81`"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"55311.8353`", ",", 
        RowBox[{"-", "3.38`"}], ",", 
        RowBox[{"-", "26.77`"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"55311.8427`", ",", 
        RowBox[{"-", "3.33`"}], ",", 
        RowBox[{"-", "26.82`"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"55311.8775`", ",", 
        RowBox[{"-", "3.1`"}], ",", 
        RowBox[{"-", "27.24`"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"55311.9883`", ",", 
        RowBox[{"-", "2.07`"}], ",", 
        RowBox[{"-", "28.01`"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"55312.1251`", ",", 
        RowBox[{"-", "1.02`"}], ",", 
        RowBox[{"-", "28.79`"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"55312.1265`", ",", 
        RowBox[{"-", "1.03`"}], ",", 
        RowBox[{"-", "28.93`"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"55312.1278`", ",", 
        RowBox[{"-", "1.13`"}], ",", 
        RowBox[{"-", "28.9`"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"55312.1292`", ",", 
        RowBox[{"-", "0.99`"}], ",", 
        RowBox[{"-", "28.85`"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"55312.8216`", ",", 
        RowBox[{"-", "7.07`"}], ",", 
        RowBox[{"-", "24.23`"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"55312.83`", ",", 
        RowBox[{"-", "7.1`"}], ",", 
        RowBox[{"-", "23.91`"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"55312.8899`", ",", 
        RowBox[{"-", "8.37`"}], ",", 
        RowBox[{"-", "22.69`"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"55312.9897`", ",", 
        RowBox[{"-", "9.42`"}], ",", 
        RowBox[{"-", "20.12`"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"55313.9043`", ",", 
        RowBox[{"-", "16.45`"}], ",", 
        RowBox[{"-", "13.73`"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"55313.9888`", ",", 
        RowBox[{"-", "17.13`"}], ",", 
        RowBox[{"-", "13.47`"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"55314.8513`", ",", 
        RowBox[{"-", "17.92`"}], ",", 
        RowBox[{"-", "12.81`"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"55314.9021`", ",", 
        RowBox[{"-", "18.43`"}], ",", 
        RowBox[{"-", "12.43`"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"55315.0767`", ",", 
        RowBox[{"-", "18.24`"}], ",", 
        RowBox[{"-", "12.32`"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"55315.913`", ",", 
        RowBox[{"-", "18.75`"}], ",", 
        RowBox[{"-", "12.32`"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"55316.8788`", ",", 
        RowBox[{"-", "19.12`"}], ",", 
        RowBox[{"-", "11.9`"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"55317.87`", ",", 
        RowBox[{"-", "18.23`"}], ",", 
        RowBox[{"-", "12.06`"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"55318.9274`", ",", 
        RowBox[{"-", "18.45`"}], ",", 
        RowBox[{"-", "11.91`"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"55319.0179`", ",", 
        RowBox[{"-", "18.32`"}], ",", 
        RowBox[{"-", "12.25`"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"55319.9909`", ",", 
        RowBox[{"-", "18.47`"}], ",", 
        RowBox[{"-", "12.04`"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"55320.9937`", ",", 
        RowBox[{"-", "18.44`"}], ",", 
        RowBox[{"-", "12.26`"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"55321.0389`", ",", 
        RowBox[{"-", "18.`"}], ",", 
        RowBox[{"-", "12.6`"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"55321.9376`", ",", 
        RowBox[{"-", "18.42`"}], ",", 
        RowBox[{"-", "12.23`"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"55342.9718`", ",", 
        RowBox[{"-", "14.41`"}], ",", 
        RowBox[{"-", "16.09`"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"55343.9095`", ",", 
        RowBox[{"-", "14.03`"}], ",", 
        RowBox[{"-", "16.3`"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"55344.8253`", ",", 
        RowBox[{"-", "13.87`"}], ",", 
        RowBox[{"-", "16.45`"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"55345.8418`", ",", 
        RowBox[{"-", "13.55`"}], ",", 
        RowBox[{"-", "17.12`"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"55346.7917`", ",", 
        RowBox[{"-", "13.32`"}], ",", 
        RowBox[{"-", "16.99`"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"55347.8754`", ",", 
        RowBox[{"-", "12.61`"}], ",", 
        RowBox[{"-", "17.79`"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"55348.7957`", ",", 
        RowBox[{"-", "12.73`"}], ",", 
        RowBox[{"-", "17.5`"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"55349.836`", ",", 
        RowBox[{"-", "11.9`"}], ",", 
        RowBox[{"-", "18.97`"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"55352.7859`", ",", 
        RowBox[{"-", "7.26`"}], ",", 
        RowBox[{"-", "22.86`"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"55352.8244`", ",", 
        RowBox[{"-", "7.07`"}], ",", 
        RowBox[{"-", "22.86`"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"55352.985`", ",", 
        RowBox[{"-", "6.72`"}], ",", 
        RowBox[{"-", "23.7`"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"55353.779`", ",", 
        RowBox[{"-", "2.21`"}], ",", 
        RowBox[{"-", "27.67`"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"55353.7974`", ",", 
        RowBox[{"-", "1.92`"}], ",", 
        RowBox[{"-", "27.52`"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"55353.9845`", ",", 
        RowBox[{"-", "0.9`"}], ",", 
        RowBox[{"-", "29.34`"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"55366.9826`", ",", 
        RowBox[{"-", "17.77`"}], ",", 
        RowBox[{"-", "12.78`"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"55367.8032`", ",", 
        RowBox[{"-", "17.85`"}], ",", 
        RowBox[{"-", "12.72`"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"55368.7601`", ",", 
        RowBox[{"-", "17.46`"}], ",", 
        RowBox[{"-", "13.05`"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"55369.7711`", ",", 
        RowBox[{"-", "17.29`"}], ",", 
        RowBox[{"-", "13.36`"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"55370.7447`", ",", 
        RowBox[{"-", "17.4`"}], ",", 
        RowBox[{"-", "12.99`"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"55373.759`", ",", 
        RowBox[{"-", "17.42`"}], ",", 
        RowBox[{"-", "13.17`"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"55376.9083`", ",", 
        RowBox[{"-", "16.44`"}], ",", 
        RowBox[{"-", "14.22`"}]}], "}"}]}], "}"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\n", 
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"rvdata", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", 
        RowBox[{"1", ";;", "2"}]}], "]"}], "]"}], ",", 
     RowBox[{"rvdata", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "3"}], "}"}]}], "]"}], "]"}]}], "}"}], ",", 
   RowBox[{"Joined", "\[Rule]", "False"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.532964626838327*^9, 3.532964629185922*^9}, {
  3.532964895668054*^9, 3.53296490473066*^9}, {3.532964934830584*^9, 
  3.532964939249485*^9}, {3.532964971580177*^9, 3.532964973069451*^9}, {
  3.532965040501927*^9, 3.532965043329079*^9}, {3.532972878576648*^9, 
  3.532972915724062*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {
    {RGBColor[0.24720000000000014`, 0.24, 0.6], PointBox[CompressedData["
1:eJxTTMoPSmViYGAwBmIQ/evt6wNzGV87aMb0H/qqoXpgD6uQyFUgf0mBLdd1
ZYUD/5x/vb0L5HNdXwwUkTtwd2tLzS8gP2iHXOvrQJ4DpwWO7/oFl+c+0P03
9fsvmP7FXAc8HlaJ/AHyz54BAY4DIUHqC/4D+SDbYvoZDohvv8jAwgQz78P+
uF2ePCB+tcg694dVH/b3sX0QA/HBXJFP+69yZiiB+GDuuvf7fUV7vKSAfJA9
69xlDnwDmgrip4GBzIHpE/irZIB8kGsK9iocmB06f7U8kA927nWlAzt72T7Y
APnGIFBscODkU/sl9kA+2DhFwwPJ9Tdto4H8N4EgBxoeADr3XgzM/jyjA5/7
gkuSYObbGh1YcczbvBbIZwCBA0YHynUV5ecA+fJA3+2QMz5QCFS4G+Y/K6MD
pw47rb0Lt9/oQDDr4kkP4OFhdGDzq+Kt/4F8MLfC6IDjx+Qz8syvHQrBFhod
qDJbbafIDLWPwQgcnnbMUPdmGx3wCPgjcZ8Vat5FnQPl++ZL/WWFhj+/zoE1
3bczpNhg4aMNDg8rIH/WTCCQ1D7AYTs7NJINFp9aB2LvuDHXsEHdY6F5YN2N
+LKZQD4o3A+Vah7IF2o+sIsNFt/qB/YdFFeTZIelD9kDt6RrEqXYEfEFcpc8
OzS8H0odKM6Y+NaCHRa/jAesGX1bLNmh9u34t/+uClujPTvM/Df7lfpKC+9z
vHYAB+9RwwOtNRc2/+SAuv+m4QEzm71BEpww9xkesHtxc40FJ9Q9XoYHtCWm
XgnnhKUXwwOmwAS4gxMWfoYH4jVPC8hywcLb4AAA0SR6UA==
      "]]}, 
    {RGBColor[0.6, 0.24, 0.4428931686004542], PointBox[CompressedData["
1:eJxNkm1IU2EUx+e13b0QJLJyrnIo0e6dBTNzW9uds4KyFyFnItFKUgy/qSwT
1qIi98lyFUSYloF+CGYSiLSs5J9SkS5KUMpymR8KaRlG9DY0e57x3PDA5fLj
ec55/ud/TnZVnaeGUygU+eSj/8RcHDdS4kXe0NAPoSMfD5XpugnCL6Ik9hfg
787EXIywrnf3jH/cilh/cyBBmF73vnRgNO3ZAOVgvDSS9cSBlsWaX5Q9kaxg
fMyB4hm/boGwS/u6q97lxEGP6dYS4WGSHuIkZNwbU6zg4kXJ4xEJRwf2rKRM
n9N9ldDKz6+hfJzGJwkTmtocytfbSExKKFl9Ya+B8Ckq0GHHT1KWskgbmrXh
2qVV/nWEG6iAu1a0l3eGjYSNScFbcf8iPy8RpnlDjbl4/tHd7Zbvz5tRfWbS
dVi+f1MEkfveyzG/pgR8by07UUW4u54mCLj9dJ/t9DJu2pxt7OCYn1ETaN0H
/98XMDK8406Mk/0yoUzZdeUDYQWNswL6Pvv6lzjmv07A9m/VUWMq8zsowG8N
F2YTzk+GmPSzMFXuR0DxgQX9tDJeRO3VZljQNNhpWFTK87Wgp+VdrYFn+T5L
0g8HL+vLg9rVXn6IZ/NbtODI1K7UAC/PKw+9bypPtvGy3jzUpZ/HAGHaTunv
LRh8nLExUyX7ZcXbtYFjhmVM+zaq2Pt9NvhqL8/ZCX+h7YWdcKaUNG9Tyf06
EdvAn3OrWD8VLuS0NjZMq9k+hkQEA6/6/qjZ/OpFWKVHHr2G7UumGYWzkz12
DdMXMSNXf3W8QsP2JyGigCxgRCPXN6NSHE1br5XrbcI/QTh/JQ==
      "]]}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  AxesOrigin->{55308.9298, -29.34},
  Frame->True,
  FrameLabel->{None, None},
  Method->{},
  PlotRange->{{55308.9298, 55376.9083}, {-29.34, 0}},
  PlotRangeClipping->True,
  PlotRangePadding->{{1.3595700000000943`, 1.3595700000000943`}, {0.5868, 
   0.5868}}]], "Output",
 CellChangeTimes->{{3.5329649936221*^9, 3.532965024571127*^9}, 
   3.532965446191038*^9, 3.532971750151734*^9, 3.532972916740118*^9, 
   3.532975697520777*^9, 3.53331905462522*^9, 3.535931968425888*^9, 
   3.536960961074692*^9, 3.536963563321987*^9, 3.630550974145454*^9, 
   3.6305588253140993`*^9, 3.632970312989855*^9, 3.633020602058178*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"GetTrueAnomaly", "[", 
     RowBox[{"e_", "?", "NumericQ"}], "]"}], "/;", 
    RowBox[{"(", 
     RowBox[{"0", "\[LessEqual]", "e", "<", "1"}], ")"}]}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "int", "}"}], ",", 
     RowBox[{
      RowBox[{"int", "=", 
       RowBox[{"Interpolation", "[", 
        RowBox[{"Reverse", "/@", 
         RowBox[{"Join", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "Pi"}], ",", 
              RowBox[{"-", "Pi"}]}], "}"}], "}"}], ",", 
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"f", ",", 
               RowBox[{"Re", "[", 
                RowBox[{
                 RowBox[{"2", " ", 
                  RowBox[{"ArcTan", "[", 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"1", "-", "e"}], ")"}], " ", 
                    RowBox[{"Tan", "[", 
                    RowBox[{"f", "/", "2"}], "]"}]}], ")"}], "/", 
                    RowBox[{"Sqrt", "[", 
                    RowBox[{"1", "-", 
                    RowBox[{"e", "^", "2"}]}], "]"}]}], "]"}]}], "-", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"e", " ", 
                    RowBox[{"Sin", "[", "f", "]"}], " ", 
                    RowBox[{"Sqrt", "[", 
                    RowBox[{"1", "-", 
                    RowBox[{"e", "^", "2"}]}], "]"}]}], ")"}], "/", 
                  RowBox[{"(", 
                   RowBox[{"1", "+", 
                    RowBox[{"e", " ", 
                    RowBox[{"Cos", "[", "f", "]"}]}]}], ")"}]}]}], "]"}]}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"f", ",", 
               RowBox[{
                RowBox[{"-", "Pi"}], "+", 
                RowBox[{"2", 
                 RowBox[{"Pi", "/", "1000."}]}]}], ",", 
               RowBox[{"Pi", "-", 
                RowBox[{"2", 
                 RowBox[{"Pi", "/", "1000"}]}]}], ",", 
               RowBox[{"2", " ", 
                RowBox[{"Pi", "/", "1000."}]}]}], "}"}]}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"{", 
             RowBox[{"Pi", ",", "Pi"}], "}"}], "}"}]}], "]"}]}], "]"}]}], ";",
       "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"Evaluate", "[", "int", "]"}], "[", 
          RowBox[{
           RowBox[{"Mod", "[", 
            RowBox[{
             RowBox[{"#", "+", "Pi"}], ",", 
             RowBox[{"2", "Pi"}]}], "]"}], "-", "Pi"}], "]"}], "+", 
         RowBox[{
          RowBox[{"Round", "[", 
           RowBox[{
            RowBox[{"#", "/", "2"}], "/", "Pi"}], "]"}], "*", "2", " ", 
          "Pi"}]}], ")"}], "&"}]}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"GetTrueAnomaly", "[", "espec_List", "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", "func", "}"}], ",", 
      RowBox[{"Interpolation", "[", 
       RowBox[{"Flatten", "[", 
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"func", "=", 
             RowBox[{"GetTrueAnomaly", "[", "e", "]"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"e", ",", "\[Nu]", ",", 
                RowBox[{"func", "[", "\[Nu]", "]"}]}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"\[Nu]", ",", 
                RowBox[{"-", "Pi"}], ",", "Pi", ",", 
                RowBox[{"2", " ", 
                 RowBox[{"Pi", "/", "1000."}]}]}], "}"}]}], "]"}]}], ",", 
           RowBox[{"{", 
            RowBox[{"e", ",", 
             RowBox[{"espec", "[", 
              RowBox[{"[", "1", "]"}], "]"}], ",", 
             RowBox[{"espec", "[", 
              RowBox[{"[", "2", "]"}], "]"}], ",", 
             RowBox[{"espec", "[", 
              RowBox[{"[", "3", "]"}], "]"}]}], "}"}]}], "]"}], ",", "1"}], 
        "]"}], "]"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[CapitalOmega]", "=", 
   RowBox[{
    RowBox[{"Convert", "[", 
     RowBox[{
      RowBox[{"2", 
       RowBox[{
        RowBox[{"Pi", "/", "41.8"}], "/", "Day"}]}], ",", "Hertz"}], "]"}], 
    "/", "Hertz"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"fint", "=", 
   RowBox[{"GetTrueAnomaly", "[", 
    RowBox[{"{", 
     RowBox[{".7", ",", ".93", ",", ".001"}], "}"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Clear", "[", "ffunc", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"ffunc", "[", 
     RowBox[{"e_", ",", "\[Nu]_"}], "]"}], ":=", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{".7", "<", "e", "<", ".93"}], ",", 
      RowBox[{"fint", "[", 
       RowBox[{"e", ",", "\[Nu]"}], "]"}], ",", "70"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"rvmodelcomp", "=", 
   RowBox[{"Compile", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "K", ",", "e", ",", "phorad", ",", "Tp", ",", "V", ",", "Per", ",", 
       "t"}], "}"}], ",", 
     RowBox[{"(", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"K", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"e", " ", 
            RowBox[{"Sin", "[", "phorad", "]"}]}], "+", 
           RowBox[{"Sin", "[", 
            RowBox[{"phorad", "-", 
             RowBox[{"ffunc", "[", 
              RowBox[{"e", ",", 
               RowBox[{
                RowBox[{"Mod", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"t", "-", "Tp"}], ")"}], "/", "Per"}], "*", "2", 
                    "Pi"}], "+", "Pi"}], ",", 
                  RowBox[{"2", "Pi"}]}], "]"}], "-", "Pi"}]}], "]"}]}], 
            "]"}]}], ")"}]}], "+", "V"}], ")"}], ")"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"rvmodel", "[", 
     RowBox[{
      RowBox[{"K_", "?", "NumericQ"}], ",", 
      RowBox[{"e_", "?", "NumericQ"}], ",", 
      RowBox[{"phorad_", "?", "NumericQ"}], ",", 
      RowBox[{"Tp_", "?", "NumericQ"}], ",", 
      RowBox[{"V_", "?", "NumericQ"}], ",", 
      RowBox[{"Per_", "?", "NumericQ"}], ",", 
      RowBox[{"t_", "?", "NumericQ"}]}], "]"}], ":=", 
    RowBox[{"rvmodelcomp", "[", 
     RowBox[{
     "K", ",", "e", ",", "phorad", ",", "Tp", ",", "V", ",", "Per", ",", 
      "t"}], "]"}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Sp", "[", "x__List", "]"}], "/;", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"Equal", "@@", 
       RowBox[{"Length", "/@", 
        RowBox[{"{", "x", "}"}]}]}], ")"}], "&&", 
     RowBox[{
      RowBox[{"Length", "[", 
       RowBox[{"{", "x", "}"}], "]"}], ">", "1"}]}]}], ":=", 
   RowBox[{"Transpose", "[", 
    RowBox[{"{", "x", "}"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGAQBmIQPflyVNKMoFeOwp+XgunNCV+bQfTERPFWEK065VYH
iD7xO70TRJ+fUNQLoj9aLALTYrcvzwDR04+nzATRFs1p80D0rKycNSA6geXC
JhBtG5+9GUQ/59feAaIX7r21E0S/KrU4C6JF6+eA6W0M6VdAdM6d2dfB9EvG
OyBadlU1mN5XabJvJpAWeLbqKIjuv+Z5DkTPEP4BpmVb026B6JwDvg9A9J60
8KcgOsQ64RmI3npg+lsQvb3y73sQ7VbHYTQHSDdnTbIF0etvSQjPBdIZk39I
geirG9SUQPTyKT5gGgAUAaMY
  "]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"s", "=", ".2"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"rvmcmc", "=", 
   RowBox[{"MCMCModelFit", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"#", "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"#", "[", 
            RowBox[{"[", "2", "]"}], "]"}], ",", 
           RowBox[{"#", "[", 
            RowBox[{"[", "3", "]"}], "]"}]}], "}"}]}], "}"}], "&"}], "/@", 
      "rvdata"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"#", "[", 
           RowBox[{"[", "2", "]"}], "]"}], ",", 
          RowBox[{"#", "[", 
           RowBox[{"[", "3", "]"}], "]"}]}], "}"}], "&"}], "/@", "rvdata"}], "/.", 
      RowBox[{
       RowBox[{"_", "?", "NumericQ"}], "\[Rule]", ".5"}]}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"rvmodel", "[", 
        RowBox[{"K1", ",", "e", ",", 
         RowBox[{"pho", " ", 
          RowBox[{"Pi", "/", "180."}]}], ",", "Tp", ",", "V", ",", "Porb", 
         ",", "t"}], "]"}], ",", 
       RowBox[{"rvmodel", "[", 
        RowBox[{
         RowBox[{"K1", "/", "q"}], ",", "e", ",", 
         RowBox[{
          RowBox[{"pho", " ", 
           RowBox[{"Pi", "/", "180"}]}], "+", "Pi"}], ",", "Tp", ",", "V", 
         ",", "Porb", ",", "t"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"K1", ",", "9.35", ",", 
         RowBox[{"0.5", " ", "s"}], ",", "Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"q", ",", "1.06", ",", 
         RowBox[{".05", " ", "s"}], ",", "Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"e", ",", ".834", ",", 
         RowBox[{".02", " ", "s"}], ",", "Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"pho", ",", "49.5", ",", 
         RowBox[{"3", "s"}], ",", "Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"Tp", ",", "55312", ",", 
         RowBox[{".05", " ", "s"}], ",", "Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"V", ",", 
         RowBox[{"-", "15"}], ",", 
         RowBox[{".2", " ", "s"}], ",", "Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"Porb", ",", "41.8051", ",", 
         RowBox[{".1", "s"}], ",", "Real"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", "t", "}"}], ",", 
     RowBox[{"10", "^", "5"}], ",", 
     RowBox[{"\"\<ProgressInterval\>\"", "\[Rule]", "10"}], ",", 
     RowBox[{"\"\<MakeBestFitPlot\>\"", "\[Rule]", "True"}]}], "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"rvmcmc", "[", "\"\<BestFitPlot\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{"rvmcmc", "[", 
  RowBox[{"{", 
   RowBox[{
   "\"\<BestFitParameters\>\"", ",", "\"\<ParameterErrors\>\"", ",", 
    "\"\<TimeSpent\>\"", ",", "\"\<CorrelationMatrix\>\"", ",", 
    "\"\<AverageAcceptance\>\"", ",", "\"\<BestFitReducedChisq\>\""}], "}"}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.532964626838327*^9, 3.532964629185922*^9}, {
   3.532964895668054*^9, 3.53296490473066*^9}, {3.532964934830584*^9, 
   3.532964939249485*^9}, {3.532964971580177*^9, 3.532964973069451*^9}, {
   3.532965062620494*^9, 3.532965067149364*^9}, {3.532965107203518*^9, 
   3.532965219388013*^9}, {3.532965270500534*^9, 3.532965275355376*^9}, {
   3.532965313345691*^9, 3.532965326835648*^9}, {3.532965481764394*^9, 
   3.532965484890513*^9}, {3.532965539218837*^9, 3.532965564870657*^9}, {
   3.532965600059744*^9, 3.532965603864516*^9}, {3.532967409639861*^9, 
   3.532967469340584*^9}, {3.532967538307441*^9, 3.532967543752392*^9}, {
   3.532967635203749*^9, 3.532967682429739*^9}, {3.532967722731291*^9, 
   3.532967731007242*^9}, {3.532967788742274*^9, 3.532967807921108*^9}, 
   3.532970220689944*^9, {3.532970326447808*^9, 3.532970339318149*^9}, {
   3.532970473037209*^9, 3.532970519688171*^9}, {3.532971979397425*^9, 
   3.532971983511436*^9}, {3.532972053504365*^9, 3.53297206546476*^9}, {
   3.532972247409362*^9, 3.532972250720327*^9}, {3.532972377727822*^9, 
   3.532972377920663*^9}, {3.532972537478139*^9, 3.532972554486583*^9}, {
   3.532972602729788*^9, 3.532972635692102*^9}, 3.53297267024915*^9, {
   3.532972721811187*^9, 3.532972726055702*^9}, 3.532972841202227*^9, {
   3.532972921610398*^9, 3.532972955835437*^9}, {3.532973067792101*^9, 
   3.532973101327055*^9}, {3.532973812970269*^9, 3.532973820371005*^9}, {
   3.532973858855878*^9, 3.532973859794415*^9}, {3.532974211534627*^9, 
   3.532974213415843*^9}, {3.532974318821637*^9, 3.532974342864676*^9}, 
   3.532974406079795*^9, 3.532974473596199*^9, {3.532974511141216*^9, 
   3.532974556241839*^9}, 3.532974590187118*^9, 3.532974624224576*^9, 
   3.532974654241054*^9, {3.532974696225863*^9, 3.532974730468733*^9}, {
   3.532975730598407*^9, 3.532975759130976*^9}, {3.532975803446002*^9, 
   3.532975816177726*^9}, 3.53297588688391*^9, 3.532976448976735*^9, 
   3.53297648572179*^9, {3.532976525360615*^9, 3.532976532010823*^9}, {
   3.532976568731845*^9, 3.53297656952009*^9}, 3.53297661798981*^9, {
   3.532976651375002*^9, 3.53297665193609*^9}, 3.532976697047226*^9, 
   3.532976757474657*^9, {3.532976802706431*^9, 3.532976848442917*^9}, 
   3.532976927651168*^9, 3.533319147753293*^9, 3.537030300645393*^9, {
   3.63055893343047*^9, 3.6305589390355043`*^9}}],

Cell[BoxData[
 RowBox[{"\<\"MCMCResult\"\>", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"K1", "\[Rule]", "9.180460919864995`"}], ",", 
     RowBox[{"q", "\[Rule]", "1.035888358306958`"}], ",", 
     RowBox[{"e", "\[Rule]", "0.8312422234611634`"}], ",", 
     RowBox[{"pho", "\[Rule]", "50.58114624162343`"}], ",", 
     RowBox[{"Tp", "\[Rule]", "55312.62177045739`"}], ",", 
     RowBox[{"V", "\[Rule]", 
      RowBox[{"-", "15.260721742017866`"}]}], ",", 
     RowBox[{"Porb", "\[Rule]", "41.822315872129906`"}]}], "}"}], 
   ",", "\<\"\[LeftSkeleton]100000\[RightSkeleton]\"\>"}], "]"}]], "Output",
 CellChangeTimes->{
  3.532965449201366*^9, 3.532965485776818*^9, 3.532965544272182*^9, {
   3.532965597142304*^9, 3.532965614757547*^9}, 3.532967444049043*^9, 
   3.532967483782074*^9, 3.532967556419057*^9, {3.532967650113426*^9, 
   3.532967674629572*^9}, {3.532967721162192*^9, 3.532967732353171*^9}, 
   3.532967782190297*^9, 3.532967858325647*^9, 3.53296831246825*^9, 
   3.532969624995677*^9, {3.532970203236199*^9, 3.532970225099516*^9}, 
   3.532970268674634*^9, 3.532970302262517*^9, 3.532970340221238*^9, 
   3.532970382368277*^9, 3.53297049004172*^9, 3.532970522099133*^9, 
   3.532971825239253*^9, 3.532972029338281*^9, 3.532972077868014*^9, 
   3.532972119020405*^9, 3.532972193148625*^9, 3.532972238848951*^9, 
   3.532972311351894*^9, 3.532972422524095*^9, 3.532972555312161*^9, {
   3.532972605497568*^9, 3.53297263337356*^9}, {3.532972663458548*^9, 
   3.532972692518633*^9}, 3.532972749494878*^9, 3.532972897335083*^9, 
   3.532972947056066*^9, 3.532973014254034*^9, {3.532973049990666*^9, 
   3.532973102455456*^9}, 3.532973195857685*^9, 3.532973435491782*^9, {
   3.532973821207036*^9, 3.532973845138345*^9}, 3.532974080291778*^9, {
   3.53297431961649*^9, 3.53297435532281*^9}, 3.532974397641064*^9, {
   3.53297447620883*^9, 3.532974503212415*^9}, 3.532974582655037*^9, 
   3.532974614952439*^9, 3.532974648481029*^9, {3.532974703818438*^9, 
   3.532974711076592*^9}, 3.532974966532693*^9, 3.532975742970611*^9, {
   3.532975785684254*^9, 3.53297581054644*^9}, 3.532975840999365*^9, 
   3.532975880625416*^9, 3.532975911273784*^9, 3.532976475673032*^9, 
   3.532976509991138*^9, 3.532976557080371*^9, 3.532976593609882*^9, 
   3.532976642247031*^9, 3.532976677696332*^9, {3.532976750926095*^9, 
   3.532976785670306*^9}, 3.53297687386363*^9, 3.532976954866662*^9, 
   3.533319092241662*^9, 3.533319388518166*^9, 3.535932224804205*^9, 
   3.536963809903489*^9, 3.536964321063943*^9, 3.630558940547274*^9, 
   3.630559108929467*^9, 3.632970505678615*^9, 3.633020790486397*^9}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
1tPgfw3H0Ys=
      "]]}, 
    {Hue[0.9060679774997897, 0.6, 0.6], LineBox[CompressedData["
1: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
WZzaiUHteiBmGRK9CV2Qk/OjREQP7FosGHYkP0t+4k7oQpy1eB8x14fiui9m
uvBrY5WCA/qj/sG0+gM6MOgw99QJPSg88TqtUAtm0umRm9EDXHFz8cpaIDy4
TXsLOt1R3P7ifTyfu+4VbEX/5uFNNevWAI+8Mddt6E2r+I5UuGtA9FuhFc7o
JidLs4+/sT4d8It2IfF1uPRykzoLnt/O1N2Ofu6ZUV3Ypw7T31q+EWd/fnhA
4rg6KIWs2+1K8jEiZly8Tw2sqjeL7kQfUVQPPhKL/edfdDvxM1HlxHS2GmSf
HNXfjX6Z7JFxqpwJVU/4p4kf5+bOLQ3Gfs7LvuGGLpvYE1+jzQTBs5fE96I/
pT3s4HyqCozeJ53E61J5NGzSVcFCdCbWHX1Je9yGcleFyCyHmX1oB6OFbvxL
VCF7NOKWB4m3Od3+Zq0KVK0pcfdEcyuXyLr4qsD360t7vNDzBSPjtOfKwP9Z
5/R+dFrdY83RVGVQVPVa741+teK044idMrhXPCo5QNY3EbfrV58SRMx+9/BB
b1NvCKrPVIIs/dUyvui7sYMG8h5K0N9wItEPPTnrelxjgRJ85765wR9deKOj
O6eTAfyWL34THyyQTpPLZ4B5h+b+g+iOweeyHLYMcBfeJxuInp3g2UFTYEDE
5nMDxOV7t6tyLmBA5dAX0yB0wDRM+VUqAv1DkdwR9OqAdF1RXUUwUxwYJA6R
fDOcJa0Ie/24z4aQ88q1MceEUxEyp93mj5J6dbtlaW07HSq1UipCyXy5JdOD
K+jQG1rnewwdXm0uJZVDh2UcksPH0WsfcG3iOUQHuonluROk39AdfuvspINZ
7BGrMLTQSF8J04oOYct6K8NJPhm/LrGTp8NX8TPpUeghWVP34FEacKkcNoom
9W4+78iCbhqImeyaJLbJ9ijnfkQDQz/m+lNozq0ldJ/rNHCIlvhEXLjZr/pR
Jg08Li68EIMuMZiWiEmhQVJD36dY9EmZqC/qR2mQN1B3IQ7Np7ZKTdyPBhWf
Co3j0ep3Gwe27aXByMrQi6fRqnM8ES9saaB0QMbkDLqK2+NBOo0GRhGLvxAX
f54y+CNLA6f0r5eS0P4/b81cFaPB8fqGL8nopK3in6t5aJDSeyMjBZ355+G4
PAcNrk6kmZ4l8bZhnHg6S0Hrcs/Lqej6Z6GjtZN4P6XszM6hu+ZqeHjfUjDN
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
SDFqFpRG24cuKF1fxID/AYSQc5Y=
      "]]}}, {{}, {
     {RGBColor[0.24720000000000014`, 0.24, 0.6], PointBox[CompressedData["
1:eJxTTMoPSmViYGAwBmIQ/evt6wNzGV87aMb0H/qqoXpgD6uQyFUgf0mBLdd1
ZYUD/5x/vb0L5HNdXwwUkTtwd2tLzS8gP2iHXOvrQJ4DpwWO7/oFl+c+0P03
9fsvmP7FXAc8HlaJ/AHyz54BAY4DIUHqC/4D+SDbYvoZDohvv8jAwgQz78P+
uF2ePCB+tcg694dVH/b3sX0QA/HBXJFP+69yZiiB+GDuuvf7fUV7vKSAfJA9
69xlDnwDmgrip4GBzIHpE/irZIB8kGsK9iocmB06f7U8kA927nWlAzt72T7Y
APnGIFBscODkU/sl9kA+2DhFwwPJ9Tdto4H8N4EgBxoeADr3XgzM/jyjA5/7
gkuSYObbGh1YcczbvBbIZwCBA0YHynUV5ecA+fJA3+2QMz5QCFS4G+Y/K6MD
pw47rb0Lt9/oQDDr4kkP4OFhdGDzq+Kt/4F8MLfC6IDjx+Qz8syvHQrBFhod
qDJbbafIDLWPwQgcnnbMUPdmGx3wCPgjcZ8Vat5FnQPl++ZL/WWFhj+/zoE1
3bczpNhg4aMNDg8rIH/WTCCQ1D7AYTs7NJINFp9aB2LvuDHXsEHdY6F5YN2N
+LKZQD4o3A+Vah7IF2o+sIsNFt/qB/YdFFeTZIelD9kDt6RrEqXYEfEFcpc8
OzS8H0odKM6Y+NaCHRa/jAesGX1bLNmh9u34t/+uClujPTvM/Df7lfpKC+9z
vHYAB+9RwwOtNRc2/+SAuv+m4QEzm71BEpww9xkesHtxc40FJ9Q9XoYHtCWm
XgnnhKUXwwOmwAS4gxMWfoYH4jVPC8hywcLb4AAA0SR6UA==
       "]]}, 
     {RGBColor[0.6, 0.24, 0.4428931686004542], PointBox[CompressedData["
1:eJxNkm1IU2EUx+e13b0QJLJyrnIo0e6dBTNzW9uds4KyFyFnItFKUgy/qSwT
1qIi98lyFUSYloF+CGYSiLSs5J9SkS5KUMpymR8KaRlG9DY0e57x3PDA5fLj
ec55/ud/TnZVnaeGUygU+eSj/8RcHDdS4kXe0NAPoSMfD5XpugnCL6Ik9hfg
787EXIywrnf3jH/cilh/cyBBmF73vnRgNO3ZAOVgvDSS9cSBlsWaX5Q9kaxg
fMyB4hm/boGwS/u6q97lxEGP6dYS4WGSHuIkZNwbU6zg4kXJ4xEJRwf2rKRM
n9N9ldDKz6+hfJzGJwkTmtocytfbSExKKFl9Ya+B8Ckq0GHHT1KWskgbmrXh
2qVV/nWEG6iAu1a0l3eGjYSNScFbcf8iPy8RpnlDjbl4/tHd7Zbvz5tRfWbS
dVi+f1MEkfveyzG/pgR8by07UUW4u54mCLj9dJ/t9DJu2pxt7OCYn1ETaN0H
/98XMDK8406Mk/0yoUzZdeUDYQWNswL6Pvv6lzjmv07A9m/VUWMq8zsowG8N
F2YTzk+GmPSzMFXuR0DxgQX9tDJeRO3VZljQNNhpWFTK87Wgp+VdrYFn+T5L
0g8HL+vLg9rVXn6IZ/NbtODI1K7UAC/PKw+9bypPtvGy3jzUpZ/HAGHaTunv
LRh8nLExUyX7ZcXbtYFjhmVM+zaq2Pt9NvhqL8/ZCX+h7YWdcKaUNG9Tyf06
EdvAn3OrWD8VLuS0NjZMq9k+hkQEA6/6/qjZ/OpFWKVHHr2G7UumGYWzkz12
DdMXMSNXf3W8QsP2JyGigCxgRCPXN6NSHE1br5XrbcI/QTh/JQ==
       "]]}}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->False,
  AxesOrigin->{55310., 0},
  Frame->True,
  FrameLabel->{None, None},
  Method->{},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.532965449201366*^9, 3.532965485776818*^9, 3.532965544272182*^9, {
   3.532965597142304*^9, 3.532965614757547*^9}, 3.532967444049043*^9, 
   3.532967483782074*^9, 3.532967556419057*^9, {3.532967650113426*^9, 
   3.532967674629572*^9}, {3.532967721162192*^9, 3.532967732353171*^9}, 
   3.532967782190297*^9, 3.532967858325647*^9, 3.53296831246825*^9, 
   3.532969624995677*^9, {3.532970203236199*^9, 3.532970225099516*^9}, 
   3.532970268674634*^9, 3.532970302262517*^9, 3.532970340221238*^9, 
   3.532970382368277*^9, 3.53297049004172*^9, 3.532970522099133*^9, 
   3.532971825239253*^9, 3.532972029338281*^9, 3.532972077868014*^9, 
   3.532972119020405*^9, 3.532972193148625*^9, 3.532972238848951*^9, 
   3.532972311351894*^9, 3.532972422524095*^9, 3.532972555312161*^9, {
   3.532972605497568*^9, 3.53297263337356*^9}, {3.532972663458548*^9, 
   3.532972692518633*^9}, 3.532972749494878*^9, 3.532972897335083*^9, 
   3.532972947056066*^9, 3.532973014254034*^9, {3.532973049990666*^9, 
   3.532973102455456*^9}, 3.532973195857685*^9, 3.532973435491782*^9, {
   3.532973821207036*^9, 3.532973845138345*^9}, 3.532974080291778*^9, {
   3.53297431961649*^9, 3.53297435532281*^9}, 3.532974397641064*^9, {
   3.53297447620883*^9, 3.532974503212415*^9}, 3.532974582655037*^9, 
   3.532974614952439*^9, 3.532974648481029*^9, {3.532974703818438*^9, 
   3.532974711076592*^9}, 3.532974966532693*^9, 3.532975742970611*^9, {
   3.532975785684254*^9, 3.53297581054644*^9}, 3.532975840999365*^9, 
   3.532975880625416*^9, 3.532975911273784*^9, 3.532976475673032*^9, 
   3.532976509991138*^9, 3.532976557080371*^9, 3.532976593609882*^9, 
   3.532976642247031*^9, 3.532976677696332*^9, {3.532976750926095*^9, 
   3.532976785670306*^9}, 3.53297687386363*^9, 3.532976954866662*^9, 
   3.533319092241662*^9, 3.533319388518166*^9, 3.535932224804205*^9, 
   3.536963809903489*^9, 3.536964321063943*^9, 3.630558940547274*^9, 
   3.630559108929467*^9, 3.632970505678615*^9, 3.633020790546734*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"\<\"BestFitParameters\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"K1", "\[Rule]", "9.180460919864995`"}], ",", 
      RowBox[{"q", "\[Rule]", "1.035888358306958`"}], ",", 
      RowBox[{"e", "\[Rule]", "0.8312422234611634`"}], ",", 
      RowBox[{"pho", "\[Rule]", "50.58114624162343`"}], ",", 
      RowBox[{"Tp", "\[Rule]", "55312.62177045739`"}], ",", 
      RowBox[{"V", "\[Rule]", 
       RowBox[{"-", "15.260721742017866`"}]}], ",", 
      RowBox[{"Porb", "\[Rule]", "41.822315872129906`"}]}], "}"}]}], ",", 
   RowBox[{"\<\"ParameterErrors\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"K1", "\[Rule]", "0.16603650490048893`"}], ",", 
      RowBox[{"q", "\[Rule]", "0.016293654122635802`"}], ",", 
      RowBox[{"e", "\[Rule]", "0.005359466370662124`"}], ",", 
      RowBox[{"pho", "\[Rule]", "0.8517351598487236`"}], ",", 
      RowBox[{"Tp", "\[Rule]", "0.012454901027415803`"}], ",", 
      RowBox[{"V", "\[Rule]", "0.058058364081558685`"}], ",", 
      RowBox[{"Porb", "\[Rule]", "0.0333333430782805`"}]}], "}"}]}], ",", 
   RowBox[{"\<\"TimeSpent\"\>", "\[Rule]", 
    RowBox[{"181.417236`8.710223539417896", " ", "Second"}]}], ",", 
   RowBox[{"\<\"CorrelationMatrix\"\>", "\[Rule]", 
    TagBox[
     RowBox[{"(", "\[NoBreak]", GridBox[{
        {"1.0000000000000087`", "0.37397425759987124`", "0.8086424238575858`", 
         RowBox[{"-", "0.07654142748174192`"}], "0.3228373921927802`", 
         RowBox[{"-", "0.20050828848779706`"}], "0.07401665600959514`"},
        {"0.37397425759987124`", "1.0000000000000204`", 
         RowBox[{"-", "0.03166665664911638`"}], "0.01528957784287129`", 
         RowBox[{"-", "0.0420783810866681`"}], 
         RowBox[{"-", "0.4981681703293375`"}], 
         RowBox[{"-", "0.02110916349489947`"}]},
        {"0.8086424238575951`", 
         RowBox[{"-", "0.03166665664911673`"}], "1.0000000000000007`", 
         RowBox[{"-", "0.03663315969374706`"}], "0.3592131030199514`", 
         "0.001501899358244678`", 
         RowBox[{"-", "0.12705033096417834`"}]},
        {
         RowBox[{"-", "0.07654142748173602`"}], "0.01528957784287072`", 
         RowBox[{"-", "0.03663315969374706`"}], "0.9999999999999986`", 
         RowBox[{"-", "0.7021814827801545`"}], "0.0415759723187999`", 
         "0.013170256122364788`"},
        {"0.32283739219278434`", 
         RowBox[{"-", "0.04207838108666944`"}], "0.3592131030199514`", 
         RowBox[{"-", "0.7021814827801545`"}], "1.0000000000000002`", 
         RowBox[{"-", "0.07921128724289475`"}], 
         RowBox[{"-", "0.13322160469095487`"}]},
        {
         RowBox[{"-", "0.20050828848779553`"}], 
         RowBox[{"-", "0.4981681703293403`"}], "0.001501899358244678`", 
         "0.0415759723187999`", 
         RowBox[{"-", "0.07921128724289475`"}], "1.`", 
         "0.027848557101925006`"},
        {"0.07401665600960125`", 
         RowBox[{"-", "0.021109163494900204`"}], 
         RowBox[{"-", "0.12705033096417848`"}], "0.013170256122364702`", 
         RowBox[{"-", "0.13322160469095487`"}], "0.027848557101925006`", 
         "1.0000000000000018`"}
       },
       GridBoxAlignment->{
        "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
         "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.7]}, 
           Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
     Function[BoxForm`e$, 
      MatrixForm[BoxForm`e$]]]}], ",", 
   RowBox[{"\<\"AverageAcceptance\"\>", "\[Rule]", "0.12120999642538548`"}], 
   ",", 
   RowBox[{"\<\"BestFitReducedChisq\"\>", 
    "\[Rule]", "\<\"BestFitReducedChisq\"\>"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.532965449201366*^9, 3.532965485776818*^9, 3.532965544272182*^9, {
   3.532965597142304*^9, 3.532965614757547*^9}, 3.532967444049043*^9, 
   3.532967483782074*^9, 3.532967556419057*^9, {3.532967650113426*^9, 
   3.532967674629572*^9}, {3.532967721162192*^9, 3.532967732353171*^9}, 
   3.532967782190297*^9, 3.532967858325647*^9, 3.53296831246825*^9, 
   3.532969624995677*^9, {3.532970203236199*^9, 3.532970225099516*^9}, 
   3.532970268674634*^9, 3.532970302262517*^9, 3.532970340221238*^9, 
   3.532970382368277*^9, 3.53297049004172*^9, 3.532970522099133*^9, 
   3.532971825239253*^9, 3.532972029338281*^9, 3.532972077868014*^9, 
   3.532972119020405*^9, 3.532972193148625*^9, 3.532972238848951*^9, 
   3.532972311351894*^9, 3.532972422524095*^9, 3.532972555312161*^9, {
   3.532972605497568*^9, 3.53297263337356*^9}, {3.532972663458548*^9, 
   3.532972692518633*^9}, 3.532972749494878*^9, 3.532972897335083*^9, 
   3.532972947056066*^9, 3.532973014254034*^9, {3.532973049990666*^9, 
   3.532973102455456*^9}, 3.532973195857685*^9, 3.532973435491782*^9, {
   3.532973821207036*^9, 3.532973845138345*^9}, 3.532974080291778*^9, {
   3.53297431961649*^9, 3.53297435532281*^9}, 3.532974397641064*^9, {
   3.53297447620883*^9, 3.532974503212415*^9}, 3.532974582655037*^9, 
   3.532974614952439*^9, 3.532974648481029*^9, {3.532974703818438*^9, 
   3.532974711076592*^9}, 3.532974966532693*^9, 3.532975742970611*^9, {
   3.532975785684254*^9, 3.53297581054644*^9}, 3.532975840999365*^9, 
   3.532975880625416*^9, 3.532975911273784*^9, 3.532976475673032*^9, 
   3.532976509991138*^9, 3.532976557080371*^9, 3.532976593609882*^9, 
   3.532976642247031*^9, 3.532976677696332*^9, {3.532976750926095*^9, 
   3.532976785670306*^9}, 3.53297687386363*^9, 3.532976954866662*^9, 
   3.533319092241662*^9, 3.533319388518166*^9, 3.535932224804205*^9, 
   3.536963809903489*^9, 3.536964321063943*^9, 3.630558940547274*^9, 
   3.630559108929467*^9, 3.632970505678615*^9, 3.6330207905947227`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
MCMCModelFit for discrete-valued parameters\
\>", "Section",
 CellChangeTimes->{{3.532829944456007*^9, 3.53282995316225*^9}, {
  3.532877527247162*^9, 3.532877528391423*^9}, {3.6329707795080137`*^9, 
  3.632970791465583*^9}}],

Cell[CellGroupData[{

Cell["\<\
Check it out. All parameters (except discrete one) strongly correlated.\
\>", "Subsubsection",
 CellChangeTimes->{{3.532829956171239*^9, 3.532829981584659*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"error", "=", "1.5"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dattab", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{
        RowBox[{"4.5", " ", 
         RowBox[{"Exp", "[", 
          RowBox[{"1.3", " ", "x"}], "]"}]}], "-", "2", "+", 
        RowBox[{"RandomVariate", "[", 
         RowBox[{"NormalDistribution", "[", 
          RowBox[{"0", ",", "error"}], "]"}], 
         StyleBox["]", "DesignDiscussion"]}]}]}], 
      StyleBox["}", "DesignDiscussion"]}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "2", ",", ".01"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"errors", "=", 
   RowBox[{"Table", "[", 
    RowBox[{"error", ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "2", ",", ".01"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"spr", "=", ".01"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"mcmc", "=", 
   RowBox[{"MCMCModelFit", "[", 
    RowBox[{"dattab", ",", "errors", ",", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"n", "\[Equal]", "1"}], ",", 
       RowBox[{
        RowBox[{"a", " ", 
         RowBox[{"Exp", "[", 
          RowBox[{"b", " ", "x"}], "]"}]}], "+", "c"}], ",", 
       RowBox[{
        RowBox[{"a", " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"b", " ", "x"}], "]"}]}], "+", "c"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"a", ",", "3", ",", "spr", ",", "Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"b", ",", "1", ",", "spr", ",", "Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"c", ",", 
         RowBox[{"-", "1"}], ",", "spr", ",", "Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"n", ",", "2", ",", "2", ",", 
         RowBox[{"{", 
          RowBox[{"1", ",", "2"}], "}"}]}], "}"}]}], "}"}], ",", 
     RowBox[{"{", "x", "}"}], ",", "2*^5", ",", 
     RowBox[{"\"\<MakeBestFitPlot\>\"", "\[Rule]", "True"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"FilterRules", "[", 
  RowBox[{
   RowBox[{"mcmc", "[", 
    RowBox[{"[", "1", "]"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "\"\<BestFitParameters\>\"", ",", "\"\<ParameterErrors\>\"", ",", 
     "\"\<AverageAcceptance\>\"", ",", "\"\<CorrelationMatrix\>\""}], "}"}]}],
   "]"}], "\[IndentingNewLine]", 
 RowBox[{"mcmc", "[", "\"\<BestFitPlot\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{"mcmc", "[", 
  RowBox[{"\"\<ParameterRunPlots\>\"", ",", 
   RowBox[{"ImageSize", "\[Rule]", "250"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"mcmc", "[", 
  RowBox[{"\"\<ParameterHistograms\>\"", ",", 
   RowBox[{"ImageSize", "\[Rule]", "250"}]}], "]"}]}], "Input",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGAQA2IQHbfwfFhw0CvHgnL1cBAdf/ROGYjunrm/HUR/9fw1
AUQ/X542EUQvCE6cAeYn7lwHol/Fzd8EotWfpW4B0VMjZHaCaDcxAzDt1Ba2
D0QHXL28H0R3ZE49AqK3SiccA9EZhvHnQHR9dP8FEH321sYbYHV6B8F0343D
D0H09CeXwHTxPvvvINom4gGYtptqyxkCpDc/iAPTlwpnTwkF0nfc7KeBaK8D
9Q1hUa8c3flFG0F06pajfSBaK8JhKojmvzdlJoieZCSxBEQ/Z+xcC6JPKV9f
D6I5D52/tpfntWONm+R1EP2vkfUZiNZqFALTjGwVX0F0HpvHNxB94WcVV4Hg
a8ec+J1gGgBXxa97
  "]],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"\<\"BestFitParameters\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "\[Rule]", "4.071947796280586`"}], ",", 
      RowBox[{"b", "\[Rule]", "1.3436380403265726`"}], ",", 
      RowBox[{"c", "\[Rule]", 
       RowBox[{"-", "1.1188615687926136`"}]}], ",", 
      RowBox[{"n", "\[Rule]", "1.`"}]}], "}"}]}], ",", 
   RowBox[{"\<\"ParameterErrors\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "\[Rule]", "0.2495040204777432`"}], ",", 
      RowBox[{"b", "\[Rule]", "0.029062083282677873`"}], ",", 
      RowBox[{"c", "\[Rule]", "0.4378903959611945`"}], ",", 
      RowBox[{"n", "\[Rule]", "0.`"}]}], "}"}]}], ",", 
   RowBox[{"\<\"AverageAcceptance\"\>", "\[Rule]", "0.17667367589111568`"}], 
   ",", 
   RowBox[{"\<\"CorrelationMatrix\"\>", "\[Rule]", 
    TagBox[
     RowBox[{"(", "\[NoBreak]", GridBox[{
        {"0.9999999999999897`", 
         RowBox[{"-", "0.9666499414717683`"}], 
         RowBox[{"-", "0.9418760573296167`"}], 
         RowBox[{"-", "0.019248943254368798`"}]},
        {
         RowBox[{"-", "0.9666499414717683`"}], "0.9999999999999931`", 
         "0.9002303707123518`", 
         RowBox[{"-", "0.051420165512531736`"}]},
        {
         RowBox[{"-", "0.9418760573296167`"}], "0.9002303707123518`", 
         "1.0000000000000122`", "0.0015435407326377874`"},
        {
         RowBox[{"-", "0.019248943254368798`"}], 
         RowBox[{"-", "0.051420165512531736`"}], "0.0015435407326377874`", 
         "0.9999999999978032`"}
       },
       GridBoxAlignment->{
        "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
         "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.7]}, 
           Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
     Function[BoxForm`e$, 
      MatrixForm[BoxForm`e$]]]}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.532914645237731*^9, 3.537023924052868*^9, 3.537024026866736*^9, 
   3.537024065676604*^9, {3.53702413603395*^9, 3.53702418697119*^9}, {
   3.537024229481877*^9, 3.537024278230837*^9}, 3.537024349327274*^9, 
   3.537024444598117*^9, 3.6305591551111307`*^9, 3.630559342468705*^9, 
   3.632970803018832*^9, 3.633020998038225*^9}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1:eJwVxXk01AkcAPARNdp5yBE75Wg0clUzqRzFfr9FlJmpHB0keiJHq0P1HGnD
OirEtpO1SzmXWm8acrSi1dasV6RcNR1jaMxjGAwTBuG3u3983ocWfNY7dBmJ
ROL85/89Q2WdT4dDvwvmq7fKC8mo4brmXB/VDVaUsle+Kifj1sK8ghqqL4hG
aU08HhlZ7cKHd6ghsM2j8sqlRjIeCVE9uUW9CPH6nbGGQjL2MtJds6gpQIoO
4t7V1sSi1QfSblC50GJQkfHyB01M0qyxvE4tA2WDE6Xg5Eo86lfMn5isBWXV
6prZcApSiKQAD9NmcFfGsRLDtNDCa1z2PEMAdomnDjBjdDDmtRPkTb2EGDG9
4tPwKjSq1RWrqb0BF4d2rkhfD+slrq/eOHeBYk4v0zJCH59F3lnrN9oD2f5d
5cI2A5ze4KLDixLCpZDzQntrQ1w2V7lqrcVHSLBW/zGiwQjtiRP1Pg9EkOPt
f5PpRsVXKdtet9j0gf8lge0G0Ro0y5HP3R/vh6JbfhWZfGOUq/rEb5kScOw4
MLc1wRTLRhpbtW8OgPm7/XVDe9ahtkmFQiqVgoHCp03tKA0zI+pOFdEHId7X
y0AWao4zWCkNvzoE/9yLmzDKX48X7QS1hs9lYKz+k2ShjY59DwQZnbQRGB/g
uVtZb8CvkT351vFyOHgvLUufa4m2u8hLpxpHge5pTCqZs0KPElpYtdE4VBSq
kZk/22CMSZD55wAFLPXK5B6WG3Hj6CGKkDMBjl/qhuUvNqG+zoSmYH4Cwg+S
TEMqGKjRnM9fXzAJ56oFmunNTDy9rfHDSpYSfA4ekxS2b8HKfcFFf80owa3E
+yt70A6n5WtWDeZ+gWvOJY8b57dinY+HOtdtChi3D7WedNiOV/emFtYOToGZ
1pXQR2ftkdbr+b40dRqOQcD66IcOuMMhhUu1m4FeVX/0droTBpi+mVPrngHn
/ipKbs4OnG7NkpxLUsGERVGYYosz5mkEXvSmz4I4SHH4dbsL6ovrSpYJZoFh
kr7nRgzg8itJvk7n5+Ajr5FZzEck3Q/kS/TmodsyLEKvaBdG/8bP0ns2D6cb
dSbP1uzGJ7bXNHXPfAXDnqiawk5X1PWM3pisvQAByaL9GXI3FG3q6I5rWoBP
wmRZ7GZ3rLoLdGngIiRe14jUivLA43x7XZOlRfh2Mv3wvvq9mJhanCT6YwkW
FVLFZYYn8mQm+dpsAj53DMW6lbLw2p3UE+L9BKxdXVw4dp+FId5jFg+8CCiQ
0v3yqlho3NRUxTlCgKBLM035hIU3so+1ZAYTUHKb39nwnoXh9r9OfhNHAFWL
mcLVZqN5isFecjkBRz8FziZcZuOSY4KW8B4B8ZQ4O79kNn4YG+gqryRALfoM
xeE6G3OO1Bx3ryZgcCY6X5XLRsLG+0JqEwG2SUXfZT5ko6gz+656NwE2kpYh
9RE2/pmmOtn9loCBqXqX+Qk2cncGWZe+JyCKynNUqtjI+n1z7W4xAdWJTmZD
yzn4OLb9ZdIwAcX7GhqkNA7mbtqe7TVKQOaL5t0yKw6elxT40hQEPLo5cmGM
wUEr9vd9T6cImGpz6Vhw4aCGWk9ZjoqAv+WbF1bs4WB/3c7IE/ME+JW97dRj
c7ApspTBXCQgMDXXa50PB38xo0wTBAE77d9dZvhz8F8PuFLL
      "]]}}, {{}, 
    {RGBColor[0.24720000000000014`, 0.24, 0.6], PointBox[CompressedData["
1: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
      "]]}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->False,
  AxesOrigin->{0, 2.},
  Frame->True,
  FrameLabel->{None, None},
  Method->{},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.532914645237731*^9, 3.537023924052868*^9, 3.537024026866736*^9, 
   3.537024065676604*^9, {3.53702413603395*^9, 3.53702418697119*^9}, {
   3.537024229481877*^9, 3.537024278230837*^9}, 3.537024349327274*^9, 
   3.537024444598117*^9, 3.6305591551111307`*^9, 3.630559342468705*^9, 
   3.632970803018832*^9, 3.633020998083049*^9}],

Cell[BoxData[
 GraphicsBox[RasterBox[CompressedData["
1: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
MK4Z9JcOAAAAAAAwfvn/AfQR5Dk=
   "], {{0, 0}, {530, 349}}, {0, 255},
   ColorFunction->RGBColor],
  ImageSize->{530, 349},
  PlotRange->{{0, 530}, {0, 349}}]], "Output",
 CellChangeTimes->{
  3.532914645237731*^9, 3.537023924052868*^9, 3.537024026866736*^9, 
   3.537024065676604*^9, {3.53702413603395*^9, 3.53702418697119*^9}, {
   3.537024229481877*^9, 3.537024278230837*^9}, 3.537024349327274*^9, 
   3.537024444598117*^9, 3.6305591551111307`*^9, 3.630559342468705*^9, 
   3.632970803018832*^9, 3.6330210017073717`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   GraphicsBox[
    {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
     EdgeForm[Opacity[0.24499999999999997`]], {}, 
     {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
      EdgeForm[Opacity[0.24499999999999997`]], 
      RectangleBox[{3.52, 0}, {3.54, 1},
       RoundingRadius->0], RectangleBox[{3.54, 0}, {3.56, 265},
       RoundingRadius->0], RectangleBox[{3.56, 0}, {3.58, 209},
       RoundingRadius->0], RectangleBox[{3.58, 0}, {3.6, 331},
       RoundingRadius->0], RectangleBox[{3.6, 0}, {3.62, 347},
       RoundingRadius->0], RectangleBox[{3.62, 0}, {3.64, 537},
       RoundingRadius->0], RectangleBox[{3.64, 0}, {3.66, 770},
       RoundingRadius->0], RectangleBox[{3.66, 0}, {3.68, 1572},
       RoundingRadius->0], RectangleBox[{3.68, 0}, {3.7, 2113},
       RoundingRadius->0], RectangleBox[{3.7, 0}, {3.72, 2783},
       RoundingRadius->0], RectangleBox[{3.72, 0}, {3.74, 2852},
       RoundingRadius->0], RectangleBox[{3.74, 0}, {3.76, 3452},
       RoundingRadius->0], RectangleBox[{3.76, 0}, {3.78, 4345},
       RoundingRadius->0], RectangleBox[{3.78, 0}, {3.8, 5063},
       RoundingRadius->0], RectangleBox[{3.8, 0}, {3.82, 5860},
       RoundingRadius->0], RectangleBox[{3.82, 0}, {3.84, 5462},
       RoundingRadius->0], RectangleBox[{3.84, 0}, {3.86, 4862},
       RoundingRadius->0], RectangleBox[{3.86, 0}, {3.88, 5885},
       RoundingRadius->0], RectangleBox[{3.88, 0}, {3.9, 5633},
       RoundingRadius->0], RectangleBox[{3.9, 0}, {3.92, 5265},
       RoundingRadius->0], RectangleBox[{3.92, 0}, {3.94, 4594},
       RoundingRadius->0], RectangleBox[{3.94, 0}, {3.96, 4805},
       RoundingRadius->0], RectangleBox[{3.96, 0}, {3.98, 5720},
       RoundingRadius->0], RectangleBox[{3.98, 0}, {4., 5952},
       RoundingRadius->0], RectangleBox[{4., 0}, {4.02, 5424},
       RoundingRadius->0], RectangleBox[{4.02, 0}, {4.04, 5476},
       RoundingRadius->0], RectangleBox[{4.04, 0}, {4.06, 5569},
       RoundingRadius->0], RectangleBox[{4.06, 0}, {4.08, 5656},
       RoundingRadius->0], RectangleBox[{4.08, 0}, {4.1, 4369},
       RoundingRadius->0], RectangleBox[{4.1, 0}, {4.12, 4522},
       RoundingRadius->0], RectangleBox[{4.12, 0}, {4.14, 4621},
       RoundingRadius->0], RectangleBox[{4.14, 0}, {4.16, 4350},
       RoundingRadius->0], RectangleBox[{4.16, 0}, {4.18, 4503},
       RoundingRadius->0], RectangleBox[{4.18, 0}, {4.2, 4350},
       RoundingRadius->0], RectangleBox[{4.2, 0}, {4.22, 3926},
       RoundingRadius->0], RectangleBox[{4.22, 0}, {4.24, 4250},
       RoundingRadius->0], RectangleBox[{4.24, 0}, {4.26, 4002},
       RoundingRadius->0], RectangleBox[{4.26, 0}, {4.28, 3694},
       RoundingRadius->0], RectangleBox[{4.28, 0}, {4.3, 2858},
       RoundingRadius->0], RectangleBox[{4.3, 0}, {4.32, 3079},
       RoundingRadius->0], RectangleBox[{4.32, 0}, {4.34, 2752},
       RoundingRadius->0], RectangleBox[{4.34, 0}, {4.36, 2314},
       RoundingRadius->0], RectangleBox[{4.36, 0}, {4.38, 2167},
       RoundingRadius->0], RectangleBox[{4.38, 0}, {4.4, 2184},
       RoundingRadius->0], RectangleBox[{4.4, 0}, {4.42, 1802},
       RoundingRadius->0], RectangleBox[{4.42, 0}, {4.44, 1754},
       RoundingRadius->0], RectangleBox[{4.44, 0}, {4.46, 1627},
       RoundingRadius->0], RectangleBox[{4.46, 0}, {4.48, 1907},
       RoundingRadius->0], RectangleBox[{4.48, 0}, {4.5, 1916},
       RoundingRadius->0], RectangleBox[{4.5, 0}, {4.52, 1370},
       RoundingRadius->0], RectangleBox[{4.52, 0}, {4.54, 1692},
       RoundingRadius->0], RectangleBox[{4.54, 0}, {4.56, 1608},
       RoundingRadius->0], RectangleBox[{4.56, 0}, {4.58, 1279},
       RoundingRadius->0], RectangleBox[{4.58, 0}, {4.6, 1344},
       RoundingRadius->0], RectangleBox[{4.6, 0}, {4.62, 1182},
       RoundingRadius->0], RectangleBox[{4.62, 0}, {4.64, 688},
       RoundingRadius->0], RectangleBox[{4.64, 0}, {4.66, 533},
       RoundingRadius->0], RectangleBox[{4.66, 0}, {4.68, 424},
       RoundingRadius->0], RectangleBox[{4.68, 0}, {4.7, 599},
       RoundingRadius->0], RectangleBox[{4.7, 0}, {4.72, 577},
       RoundingRadius->0], RectangleBox[{4.72, 0}, {4.74, 287},
       RoundingRadius->0], RectangleBox[{4.74, 0}, {4.76, 202},
       RoundingRadius->0], RectangleBox[{4.76, 0}, {4.78, 277},
       RoundingRadius->0], RectangleBox[{4.78, 0}, {4.8, 124},
       RoundingRadius->0], RectangleBox[{4.8, 0}, {4.82, 65},
       RoundingRadius->0]}, {}, {}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, False},
    AxesLabel->{
      FormBox["\"a\"", TraditionalForm], None},
    AxesOrigin->{3.52, 0},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    ImageSize->250,
    PlotRange->{{3.52, 4.82}, {All, All}},
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.02], 
       Scaled[0.1]}},
    Ticks->{Automatic, None}], ",", 
   GraphicsBox[
    {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
     EdgeForm[Opacity[0.147]], {}, 
     {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
      EdgeForm[Opacity[0.147]], RectangleBox[{1.256, 0}, {1.258, 3},
       RoundingRadius->0], RectangleBox[{1.26, 0}, {1.262, 39},
       RoundingRadius->0], RectangleBox[{1.262, 0}, {1.264, 85},
       RoundingRadius->0], RectangleBox[{1.264, 0}, {1.266, 99},
       RoundingRadius->0], RectangleBox[{1.266, 0}, {1.268, 179},
       RoundingRadius->0], RectangleBox[{1.268, 0}, {1.27, 246},
       RoundingRadius->0], RectangleBox[{1.27, 0}, {1.272, 294},
       RoundingRadius->0], RectangleBox[{1.272, 0}, {1.274, 360},
       RoundingRadius->0], RectangleBox[{1.274, 0}, {1.276, 423},
       RoundingRadius->0], RectangleBox[{1.276, 0}, {1.278, 414},
       RoundingRadius->0], RectangleBox[{1.278, 0}, {1.28, 648},
       RoundingRadius->0], RectangleBox[{1.28, 0}, {1.282, 877},
       RoundingRadius->0], RectangleBox[{1.282, 0}, {1.284, 1024},
       RoundingRadius->0], RectangleBox[{1.284, 0}, {1.286, 1168},
       RoundingRadius->0], RectangleBox[{1.286, 0}, {1.288, 1346},
       RoundingRadius->0], RectangleBox[{1.288, 0}, {1.29, 1233},
       RoundingRadius->0], RectangleBox[{1.29, 0}, {1.292, 1481},
       RoundingRadius->0], RectangleBox[{1.292, 0}, {1.294, 1801},
       RoundingRadius->0], RectangleBox[{1.294, 0}, {1.296, 1560},
       RoundingRadius->0], RectangleBox[{1.296, 0}, {1.298, 1589},
       RoundingRadius->0], RectangleBox[{1.298, 0}, {1.3, 1969},
       RoundingRadius->0], RectangleBox[{1.3, 0}, {1.302, 1590},
       RoundingRadius->0], RectangleBox[{1.302, 0}, {1.304, 1726},
       RoundingRadius->0], RectangleBox[{1.304, 0}, {1.306, 1393},
       RoundingRadius->0], RectangleBox[{1.306, 0}, {1.308, 1732},
       RoundingRadius->0], RectangleBox[{1.308, 0}, {1.31, 2013},
       RoundingRadius->0], RectangleBox[{1.31, 0}, {1.312, 2032},
       RoundingRadius->0], RectangleBox[{1.312, 0}, {1.314, 2512},
       RoundingRadius->0], RectangleBox[{1.314, 0}, {1.316, 2776},
       RoundingRadius->0], RectangleBox[{1.316, 0}, {1.318, 3097},
       RoundingRadius->0], RectangleBox[{1.318, 0}, {1.32, 3342},
       RoundingRadius->0], RectangleBox[{1.32, 0}, {1.322, 3601},
       RoundingRadius->0], RectangleBox[{1.322, 0}, {1.324, 3598},
       RoundingRadius->0], RectangleBox[{1.324, 0}, {1.326, 3555},
       RoundingRadius->0], RectangleBox[{1.326, 0}, {1.328, 3135},
       RoundingRadius->0], RectangleBox[{1.328, 0}, {1.33, 3425},
       RoundingRadius->0], RectangleBox[{1.33, 0}, {1.332, 3134},
       RoundingRadius->0], RectangleBox[{1.332, 0}, {1.334, 3984},
       RoundingRadius->0], RectangleBox[{1.334, 0}, {1.336, 4367},
       RoundingRadius->0], RectangleBox[{1.336, 0}, {1.338, 3922},
       RoundingRadius->0], RectangleBox[{1.338, 0}, {1.34, 4251},
       RoundingRadius->0], RectangleBox[{1.34, 0}, {1.342, 4496},
       RoundingRadius->0], RectangleBox[{1.342, 0}, {1.344, 4615},
       RoundingRadius->0], RectangleBox[{1.344, 0}, {1.346, 5009},
       RoundingRadius->0], RectangleBox[{1.346, 0}, {1.348, 4183},
       RoundingRadius->0], RectangleBox[{1.348, 0}, {1.35, 4734},
       RoundingRadius->0], RectangleBox[{1.35, 0}, {1.352, 4618},
       RoundingRadius->0], RectangleBox[{1.352, 0}, {1.354, 4268},
       RoundingRadius->0], RectangleBox[{1.354, 0}, {1.356, 4687},
       RoundingRadius->0], RectangleBox[{1.356, 0}, {1.358, 4023},
       RoundingRadius->0], RectangleBox[{1.358, 0}, {1.36, 4186},
       RoundingRadius->0], RectangleBox[{1.36, 0}, {1.362, 4651},
       RoundingRadius->0], RectangleBox[{1.362, 0}, {1.364, 4192},
       RoundingRadius->0], RectangleBox[{1.364, 0}, {1.366, 4583},
       RoundingRadius->0], RectangleBox[{1.366, 0}, {1.368, 4739},
       RoundingRadius->0], RectangleBox[{1.368, 0}, {1.37, 4201},
       RoundingRadius->0], RectangleBox[{1.37, 0}, {1.372, 4630},
       RoundingRadius->0], RectangleBox[{1.372, 0}, {1.374, 3920},
       RoundingRadius->0], RectangleBox[{1.374, 0}, {1.376, 3695},
       RoundingRadius->0], RectangleBox[{1.376, 0}, {1.378, 3928},
       RoundingRadius->0], RectangleBox[{1.378, 0}, {1.38, 3713},
       RoundingRadius->0], RectangleBox[{1.38, 0}, {1.382, 2784},
       RoundingRadius->0], RectangleBox[{1.382, 0}, {1.384, 2388},
       RoundingRadius->0], RectangleBox[{1.384, 0}, {1.386, 2292},
       RoundingRadius->0], RectangleBox[{1.386, 0}, {1.388, 1779},
       RoundingRadius->0], RectangleBox[{1.388, 0}, {1.39, 1715},
       RoundingRadius->0], RectangleBox[{1.39, 0}, {1.392, 1362},
       RoundingRadius->0], RectangleBox[{1.392, 0}, {1.394, 1352},
       RoundingRadius->0], RectangleBox[{1.394, 0}, {1.396, 913},
       RoundingRadius->0], RectangleBox[{1.396, 0}, {1.398, 720},
       RoundingRadius->0], RectangleBox[{1.398, 0}, {1.4, 506},
       RoundingRadius->0], RectangleBox[{1.4, 0}, {1.402, 281},
       RoundingRadius->0], RectangleBox[{1.402, 0}, {1.404, 172},
       RoundingRadius->0], RectangleBox[{1.404, 0}, {1.406, 199},
       RoundingRadius->0], RectangleBox[{1.406, 0}, {1.408, 97},
       RoundingRadius->0], RectangleBox[{1.408, 0}, {1.41, 121},
       RoundingRadius->0], RectangleBox[{1.41, 0}, {1.412, 139},
       RoundingRadius->0], RectangleBox[{1.412, 0}, {1.414, 81},
       RoundingRadius->0], RectangleBox[{1.414, 0}, {1.416, 6},
       RoundingRadius->0]}, {}, {}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, False},
    AxesLabel->{
      FormBox["\"b\"", TraditionalForm], None},
    AxesOrigin->{1.256, 0},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    ImageSize->250,
    PlotRange->{{1.256, 1.416}, {All, All}},
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.02], 
       Scaled[0.1]}},
    Ticks->{Automatic, None}], ",", 
   GraphicsBox[
    {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
     EdgeForm[Opacity[-0.08399999999999999]], {}, 
     {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
      EdgeForm[Opacity[-0.08399999999999999]], 
      RectangleBox[{-2.36, 0}, {-2.34, 57},
       RoundingRadius->0], RectangleBox[{-2.34, 0}, {-2.32, 104},
       RoundingRadius->0], RectangleBox[{-2.32, 0}, {-2.3, 194},
       RoundingRadius->0], RectangleBox[{-2.3, 0}, {-2.28, 348},
       RoundingRadius->0], RectangleBox[{-2.28, 0}, {-2.26, 482},
       RoundingRadius->0], RectangleBox[{-2.26, 0}, {-2.24, 593},
       RoundingRadius->0], RectangleBox[{-2.24, 0}, {-2.22, 648},
       RoundingRadius->0], RectangleBox[{-2.22, 0}, {-2.2, 404},
       RoundingRadius->0], RectangleBox[{-2.2, 0}, {-2.18, 584},
       RoundingRadius->0], RectangleBox[{-2.18, 0}, {-2.16, 242},
       RoundingRadius->0], RectangleBox[{-2.16, 0}, {-2.14, 159},
       RoundingRadius->0], RectangleBox[{-2.14, 0}, {-2.12, 162},
       RoundingRadius->0], RectangleBox[{-2.12, 0}, {-2.1, 192},
       RoundingRadius->0], RectangleBox[{-2.1, 0}, {-2.08, 398},
       RoundingRadius->0], RectangleBox[{-2.08, 0}, {-2.06, 224},
       RoundingRadius->0], RectangleBox[{-2.06, 0}, {-2.04, 217},
       RoundingRadius->0], RectangleBox[{-2.04, 0}, {-2.02, 290},
       RoundingRadius->0], RectangleBox[{-2.02, 0}, {-2., 388},
       RoundingRadius->0], RectangleBox[{-2., 0}, {-1.98, 520},
       RoundingRadius->0], RectangleBox[{-1.98, 0}, {-1.96, 651},
       RoundingRadius->0], RectangleBox[{-1.96, 0}, {-1.94, 791},
       RoundingRadius->0], RectangleBox[{-1.94, 0}, {-1.92, 880},
       RoundingRadius->0], RectangleBox[{-1.92, 0}, {-1.9, 1164},
       RoundingRadius->0], RectangleBox[{-1.9, 0}, {-1.88, 1138},
       RoundingRadius->0], RectangleBox[{-1.88, 0}, {-1.86, 960},
       RoundingRadius->0], RectangleBox[{-1.86, 0}, {-1.84, 796},
       RoundingRadius->0], RectangleBox[{-1.84, 0}, {-1.82, 678},
       RoundingRadius->0], RectangleBox[{-1.82, 0}, {-1.8, 1044},
       RoundingRadius->0], RectangleBox[{-1.8, 0}, {-1.78, 1362},
       RoundingRadius->0], RectangleBox[{-1.78, 0}, {-1.76, 1373},
       RoundingRadius->0], RectangleBox[{-1.76, 0}, {-1.74, 1343},
       RoundingRadius->0], RectangleBox[{-1.74, 0}, {-1.72, 1344},
       RoundingRadius->0], RectangleBox[{-1.72, 0}, {-1.7, 1009},
       RoundingRadius->0], RectangleBox[{-1.7, 0}, {-1.68, 1138},
       RoundingRadius->0], RectangleBox[{-1.68, 0}, {-1.66, 776},
       RoundingRadius->0], RectangleBox[{-1.66, 0}, {-1.64, 708},
       RoundingRadius->0], RectangleBox[{-1.64, 0}, {-1.62, 1108},
       RoundingRadius->0], RectangleBox[{-1.62, 0}, {-1.6, 939},
       RoundingRadius->0], RectangleBox[{-1.6, 0}, {-1.58, 1422},
       RoundingRadius->0], RectangleBox[{-1.58, 0}, {-1.56, 1981},
       RoundingRadius->0], RectangleBox[{-1.56, 0}, {-1.54, 2058},
       RoundingRadius->0], RectangleBox[{-1.54, 0}, {-1.52, 2516},
       RoundingRadius->0], RectangleBox[{-1.52, 0}, {-1.5, 2312},
       RoundingRadius->0], RectangleBox[{-1.5, 0}, {-1.48, 2341},
       RoundingRadius->0], RectangleBox[{-1.48, 0}, {-1.46, 1997},
       RoundingRadius->0], RectangleBox[{-1.46, 0}, {-1.44, 2205},
       RoundingRadius->0], RectangleBox[{-1.44, 0}, {-1.42, 2563},
       RoundingRadius->0], RectangleBox[{-1.42, 0}, {-1.4, 2594},
       RoundingRadius->0], RectangleBox[{-1.4, 0}, {-1.38, 2897},
       RoundingRadius->0], RectangleBox[{-1.38, 0}, {-1.36, 2582},
       RoundingRadius->0], RectangleBox[{-1.36, 0}, {-1.34, 2607},
       RoundingRadius->0], RectangleBox[{-1.34, 0}, {-1.32, 2752},
       RoundingRadius->0], RectangleBox[{-1.32, 0}, {-1.3, 2137},
       RoundingRadius->0], RectangleBox[{-1.3, 0}, {-1.28, 2027},
       RoundingRadius->0], RectangleBox[{-1.28, 0}, {-1.26, 1947},
       RoundingRadius->0], RectangleBox[{-1.26, 0}, {-1.24, 1870},
       RoundingRadius->0], RectangleBox[{-1.24, 0}, {-1.22, 2654},
       RoundingRadius->0], RectangleBox[{-1.22, 0}, {-1.2, 2587},
       RoundingRadius->0], RectangleBox[{-1.2, 0}, {-1.18, 2662},
       RoundingRadius->0], RectangleBox[{-1.18, 0}, {-1.16, 2317},
       RoundingRadius->0], RectangleBox[{-1.16, 0}, {-1.14, 2577},
       RoundingRadius->0], RectangleBox[{-1.14, 0}, {-1.12, 2866},
       RoundingRadius->0], RectangleBox[{-1.12, 0}, {-1.1, 2893},
       RoundingRadius->0], RectangleBox[{-1.1, 0}, {-1.08, 2996},
       RoundingRadius->0], RectangleBox[{-1.08, 0}, {-1.06, 2958},
       RoundingRadius->0], RectangleBox[{-1.06, 0}, {-1.04, 3252},
       RoundingRadius->0], RectangleBox[{-1.04, 0}, {-1.02, 3450},
       RoundingRadius->0], RectangleBox[{-1.02, 0}, {-1., 3768},
       RoundingRadius->0], RectangleBox[{-1., 0}, {-0.98, 3334},
       RoundingRadius->0], RectangleBox[{-0.98, 0}, {-0.96, 2798},
       RoundingRadius->0], RectangleBox[{-0.96, 0}, {-0.94, 3221},
       RoundingRadius->0], RectangleBox[{-0.94, 0}, {-0.92, 3043},
       RoundingRadius->0], RectangleBox[{-0.92, 0}, {-0.9, 2950},
       RoundingRadius->0], RectangleBox[{-0.9, 0}, {-0.88, 2825},
       RoundingRadius->0], RectangleBox[{-0.88, 0}, {-0.86, 2704},
       RoundingRadius->0], RectangleBox[{-0.86, 0}, {-0.84, 2578},
       RoundingRadius->0], RectangleBox[{-0.84, 0}, {-0.82, 2983},
       RoundingRadius->0], RectangleBox[{-0.82, 0}, {-0.8, 2917},
       RoundingRadius->0], RectangleBox[{-0.8, 0}, {-0.78, 2928},
       RoundingRadius->0], RectangleBox[{-0.78, 0}, {-0.76, 2885},
       RoundingRadius->0], RectangleBox[{-0.76, 0}, {-0.74, 2763},
       RoundingRadius->0], RectangleBox[{-0.74, 0}, {-0.72, 3595},
       RoundingRadius->0], RectangleBox[{-0.72, 0}, {-0.7, 3839},
       RoundingRadius->0], RectangleBox[{-0.7, 0}, {-0.68, 3800},
       RoundingRadius->0], RectangleBox[{-0.68, 0}, {-0.66, 2825},
       RoundingRadius->0], RectangleBox[{-0.66, 0}, {-0.64, 2600},
       RoundingRadius->0], RectangleBox[{-0.64, 0}, {-0.62, 2568},
       RoundingRadius->0], RectangleBox[{-0.62, 0}, {-0.6, 2546},
       RoundingRadius->0], RectangleBox[{-0.6, 0}, {-0.58, 2471},
       RoundingRadius->0], RectangleBox[{-0.58, 0}, {-0.56, 2045},
       RoundingRadius->0], RectangleBox[{-0.56, 0}, {-0.54, 2005},
       RoundingRadius->0], RectangleBox[{-0.54, 0}, {-0.52, 1721},
       RoundingRadius->0], RectangleBox[{-0.52, 0}, {-0.5, 1570},
       RoundingRadius->0], RectangleBox[{-0.5, 0}, {-0.48, 1253},
       RoundingRadius->0], RectangleBox[{-0.48, 0}, {-0.46, 1587},
       RoundingRadius->0], RectangleBox[{-0.46, 0}, {-0.44, 1096},
       RoundingRadius->0], RectangleBox[{-0.44, 0}, {-0.42, 1007},
       RoundingRadius->0], RectangleBox[{-0.42, 0}, {-0.4, 905},
       RoundingRadius->0], RectangleBox[{-0.4, 0}, {-0.38, 707},
       RoundingRadius->0], RectangleBox[{-0.38, 0}, {-0.36, 458},
       RoundingRadius->0], RectangleBox[{-0.36, 0}, {-0.34, 363},
       RoundingRadius->0], RectangleBox[{-0.34, 0}, {-0.32, 287},
       RoundingRadius->0], RectangleBox[{-0.32, 0}, {-0.3, 332},
       RoundingRadius->0], RectangleBox[{-0.3, 0}, {-0.28, 225},
       RoundingRadius->0], RectangleBox[{-0.28, 0}, {-0.26, 422},
       RoundingRadius->0], RectangleBox[{-0.26, 0}, {-0.24, 138},
       RoundingRadius->0], RectangleBox[{-0.24, 0}, {-0.22, 137},
       RoundingRadius->0], RectangleBox[{-0.22, 0}, {-0.2, 99},
       RoundingRadius->0], RectangleBox[{-0.2, 0}, {-0.18, 114},
       RoundingRadius->0], RectangleBox[{-0.18, 0}, {-0.16, 68},
       RoundingRadius->0], RectangleBox[{-0.16, 0}, {-0.14, 39},
       RoundingRadius->0], RectangleBox[{-0.14, 0}, {-0.12, 54},
       RoundingRadius->0]}, {}, {}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, False},
    AxesLabel->{
      FormBox["\"c\"", TraditionalForm], None},
    AxesOrigin->{-2.36, 0},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    ImageSize->250,
    PlotRange->{{-2.36, -0.12}, {All, All}},
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.02], 
       Scaled[0.1]}},
    Ticks->{Automatic, None}], ",", 
   GraphicsBox[
    {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
     EdgeForm[Opacity[0.693]], {}, 
     {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
      EdgeForm[Opacity[0.693]], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{1., 0}, {2., 180001}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{6., 231.8163265306122}, {-66.02665301856113, 
           62.33880041810086}}],
         StatusArea[#, 180001]& ,
         TagBoxNote->"180001"],
        StyleBox["180001", {
          GrayLevel[0]}, StripOnInput -> False]],
       Annotation[#, 
        Style[180001, {
          GrayLevel[0]}], "Tooltip"]& ]}, {}, {}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, False},
    AxesLabel->{
      FormBox["\"n\"", TraditionalForm], None},
    AxesOrigin->{1., 0},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    ImageSize->250,
    PlotRange->{{1., 2.}, {All, All}},
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.02], 
       Scaled[0.1]}},
    Ticks->{Automatic, None}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.532914645237731*^9, 3.537023924052868*^9, 3.537024026866736*^9, 
   3.537024065676604*^9, {3.53702413603395*^9, 3.53702418697119*^9}, {
   3.537024229481877*^9, 3.537024278230837*^9}, 3.537024349327274*^9, 
   3.537024444598117*^9, 3.6305591551111307`*^9, 3.630559342468705*^9, 
   3.632970803018832*^9, 3.6330210032458057`*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{720, 824},
WindowMargins->{{Automatic, 0}, {Automatic, -1}},
WindowStatusArea->"mcmc_demonst.nb last backed up to mcmc_demonst.nb~ on Sun \
15 Feb 2015 at 12:30:01 PM",
ShowSelection->True,
FrontEndVersion->"9.0 for Mac OS X x86 (32-bit, 64-bit Kernel) (January 25, \
2013)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "Info3632988247-8571485"->{
  Cell[2207, 66, 1223, 17, 399, "Print",
   CellTags->"Info3632988247-8571485"],
  Cell[3433, 85, 1266, 18, 401, "Print",
   CellTags->"Info3632988247-8571485"],
  Cell[4702, 105, 2335, 32, 743, "Print",
   CellTags->"Info3632988247-8571485"]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"Info3632988247-8571485", 422308, 7774}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[579, 22, 184, 2, 148, "Title"],
Cell[CellGroupData[{
Cell[788, 28, 246, 3, 80, "Section"],
Cell[1037, 33, 579, 12, 28, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1653, 50, 177, 2, 80, "Section"],
Cell[CellGroupData[{
Cell[1855, 56, 327, 6, 63, "Input"],
Cell[CellGroupData[{
Cell[2207, 66, 1223, 17, 399, "Print",
 CellTags->"Info3632988247-8571485"],
Cell[3433, 85, 1266, 18, 401, "Print",
 CellTags->"Info3632988247-8571485"],
Cell[4702, 105, 2335, 32, 743, "Print",
 CellTags->"Info3632988247-8571485"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[7086, 143, 98, 1, 35, "Subsubsection"],
Cell[CellGroupData[{
Cell[7209, 148, 254, 4, 46, "Input"],
Cell[7466, 154, 1127, 26, 103, "Output"],
Cell[8596, 182, 1195, 28, 120, "Output"]
}, Open  ]],
Cell[9806, 213, 880, 20, 70, "Text"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[10735, 239, 168, 2, 80, "Section"],
Cell[CellGroupData[{
Cell[10928, 245, 118, 1, 35, "Subsubsection"],
Cell[CellGroupData[{
Cell[11071, 250, 1354, 39, 114, "Input"],
Cell[12428, 291, 811, 20, 41, "Output"],
Cell[13242, 313, 651, 14, 28, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[13942, 333, 141, 2, 35, "Subsubsection"],
Cell[CellGroupData[{
Cell[14108, 339, 294, 4, 28, "Input"],
Cell[14405, 345, 766, 13, 80, "Output"]
}, Open  ]],
Cell[15186, 361, 288, 10, 31, "Text"],
Cell[CellGroupData[{
Cell[15499, 375, 518, 10, 80, "Input"],
Cell[16020, 387, 59783, 998, 720, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[75852, 1391, 113, 1, 35, "Subsubsection"],
Cell[CellGroupData[{
Cell[75990, 1396, 535, 11, 80, "Input"],
Cell[76528, 1409, 25336, 411, 177, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[101925, 1827, 325, 6, 80, "Section"],
Cell[CellGroupData[{
Cell[102275, 1837, 149, 2, 35, "Subsubsection"],
Cell[CellGroupData[{
Cell[102449, 1843, 3196, 66, 148, "Input"],
Cell[105648, 1911, 3160, 50, 28, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[108857, 1967, 141, 2, 35, "Subsubsection"],
Cell[CellGroupData[{
Cell[109023, 1973, 1349, 19, 28, "Input"],
Cell[110375, 1994, 839, 14, 80, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[111263, 2014, 168, 2, 35, "Subsubsection"],
Cell[CellGroupData[{
Cell[111456, 2020, 1383, 23, 80, "Input"],
Cell[112842, 2045, 2588, 53, 92, "Output"],
Cell[115433, 2100, 14415, 240, 132, "Output"],
Cell[129851, 2342, 7903, 135, 242, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[137803, 2483, 116, 1, 35, "Subsubsection"],
Cell[137922, 2486, 646, 10, 68, "Text"],
Cell[CellGroupData[{
Cell[138593, 2500, 6069, 148, 342, "Input"],
Cell[144665, 2650, 2489, 59, 143, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[147203, 2715, 209, 4, 35, "Subsubsection"],
Cell[147415, 2721, 521, 9, 87, "Text"],
Cell[CellGroupData[{
Cell[147961, 2734, 5622, 139, 372, "Input"],
Cell[153586, 2875, 320, 7, 28, "Output"]
}, Open  ]],
Cell[153921, 2885, 101, 1, 30, "Text"],
Cell[CellGroupData[{
Cell[154047, 2890, 352, 11, 28, "Input"],
Cell[154402, 2903, 135, 2, 28, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[154598, 2912, 317, 6, 80, "Section"],
Cell[CellGroupData[{
Cell[154940, 2922, 199, 3, 35, "Subsubsection"],
Cell[155142, 2927, 264, 5, 49, "Text"],
Cell[CellGroupData[{
Cell[155431, 2936, 3522, 79, 199, "Input"],
Cell[158956, 3017, 1592, 27, 28, "Output"],
Cell[160551, 3046, 1283, 20, 28, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[161883, 3072, 168, 2, 35, "Subsubsection"],
Cell[CellGroupData[{
Cell[162076, 3078, 2544, 60, 131, "Input"],
Cell[164623, 3140, 40540, 671, 243, "Output"],
Cell[205166, 3813, 3192, 64, 148, "Output"],
Cell[208361, 3879, 60672, 996, 361, "Output"],
Cell[269036, 4877, 25372, 428, 357, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[294469, 5312, 294, 6, 85, "Section"],
Cell[CellGroupData[{
Cell[294788, 5322, 8132, 229, 488, "Input"],
Cell[302923, 5553, 2582, 47, 240, "Output"]
}, Open  ]],
Cell[305520, 5603, 7662, 215, 471, "Input"],
Cell[CellGroupData[{
Cell[313207, 5822, 5363, 114, 233, "Input"],
Cell[318573, 5938, 2614, 42, 46, "Output"],
Cell[321190, 5982, 26209, 435, 239, "Output"],
Cell[347402, 6419, 5883, 108, 258, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[353334, 6533, 235, 5, 50, "Section"],
Cell[CellGroupData[{
Cell[353594, 6542, 170, 3, 35, "Subsubsection"],
Cell[CellGroupData[{
Cell[353789, 6549, 3208, 85, 250, "Input"],
Cell[357000, 6636, 2443, 56, 148, "Output"],
Cell[359446, 6694, 5552, 98, 243, "Output"],
Cell[365001, 6794, 35896, 591, 364, "Output"],
Cell[400900, 7387, 20908, 367, 357, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
